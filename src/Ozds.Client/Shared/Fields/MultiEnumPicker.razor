@namespace Ozds.Client.Shared.Fields
@using MudBlazor
@typeparam T where T : struct, Enum

<MudSelect
  T="T"
  Label="@Title"
  SelectedValues="Value"
  SelectedValuesChanged="e => ValueChanged.InvokeAsync(e.ToHashSet())"
  MultiSelection>
  @foreach (var value in Enum.GetValues<T>())
  {
    <MudSelectItem Value="value">
      @Label(value)
    </MudSelectItem>
  }
</MudSelect>

@code {

  [Parameter]
  public HashSet<T> Value { get; set; } = default!;

  [Parameter]
  public EventCallback<HashSet<T>> ValueChanged { get; set; } = default!;

  [Parameter]
  public string Title { get; set; } = default!;

  [Parameter]
  public Func<T, string> Label { get; set; } = default!;

}
