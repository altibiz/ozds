

<MudTextField
  Label="@T["Name"]"
  @bind-Value="Model.Title"
  For="@(() => Model.Title)"/>

<MudTextField
  Label="@T["Person name"]"
  @bind-Value="Model.LegalPerson.Name"
  For="@(() => Model.LegalPerson.Name)"/>

<MudTextField
  Label="@T["OIB"]"
  @bind-Value="Model.LegalPerson.SocialSecurityNumber"
  For="@(() => Model.LegalPerson.SocialSecurityNumber)"/>

<MudTextField
  Label="@T["Address"]"
  @bind-Value="Model.LegalPerson.Address"
  For="@(() => Model.LegalPerson.Address)"/>

<MudTextField
  Label="@T["Postal code"]"
  @bind-Value="Model.LegalPerson.PostalCode"
  For="@(() => Model.LegalPerson.PostalCode)"/>

<MudTextField
  Label="@T["City"]"
  @bind-Value="Model.LegalPerson.City"
  For="@(() => Model.LegalPerson.City)"/>

<MudTextField
  Label="@T["Email address"]"
  @bind-Value="Model.LegalPerson.Email"
  For="@(() => Model.LegalPerson.Email)"/>

<MudTextField
  Label="@T["Phone number"]"
  @bind-Value="Model.LegalPerson.PhoneNumber"
  For="@(() => Model.LegalPerson.PhoneNumber)"/>

<MudTextField
  Label="@T["AltiBiz subproject code"]"
  @bind-Value="Model.AltiBizSubProjectCode"
  For="@(() => Model.AltiBizSubProjectCode)"/>


<MudSelect
  Label="@T["White Medium Network User Catalogues"]"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="Model.WhiteMediumNetworkUserCatalogueId"
  For="@(() => Model.WhiteMediumNetworkUserCatalogueId)">
  <Paging PageAsync="@(page => ScopedServices.GetRequiredService<OzdsLocationModelQueries>().GetWhiteMediumNetworkUserCatalogues(title: "", pageNumber: page))">
    <Summary Context="model">
      <MudSelectItem Value="model.Id">
        <WhiteMediumNetworkUserCatalogueSummary Model="model"/>
      </MudSelectItem>
    </Summary>
  </Paging>
</MudSelect>

<MudSelect
  Label="@T["Blue Low Network User Catalogues"]"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="Model.BlueLowNetworkUserCatalogueId"
  For="@(() => Model.BlueLowNetworkUserCatalogueId)">
  <Paging PageAsync="@(page => ScopedServices.GetRequiredService<OzdsLocationModelQueries>().GetBlueLowNetworkUserCatalogues(title: "", pageNumber: page))">
    <Summary Context="model">
      <MudSelectItem Value="model.Id">
        <BlueLowNetworkUserCatalogueSummary Model="model"/>
      </MudSelectItem>
    </Summary>
  </Paging>
</MudSelect>

<MudSelect
  Label="@T["White Low Network User Catalogues"]"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="Model.WhiteLowNetworkUserCatalogueId"
  For="@(() => Model.WhiteLowNetworkUserCatalogueId)">
  <Paging PageAsync="@(page => ScopedServices.GetRequiredService<OzdsLocationModelQueries>().GetWhiteLowNetworkUserCatalogues(title: "", pageNumber: page))">
    <Summary Context="model">
      <MudSelectItem Value="model.Id">
        <WhiteLowNetworkUserCatalogueSummary Model="model"/>
      </MudSelectItem>
    </Summary>
  </Paging>
</MudSelect>

<MudSelect
  Label="@T["Red Low Network User Catalogues"]"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="Model.RedLowNetworkUserCatalogueId"
  For="@(() => Model.RedLowNetworkUserCatalogueId)">
  <Paging PageAsync="@(page => ScopedServices.GetRequiredService<OzdsLocationModelQueries>().GetRedLowNetworkUserCatalogues(title: "", pageNumber: page))">
    <Summary Context="model">
      <MudSelectItem Value="model.Id">
        <RedLowNetworkUserCatalogueSummary Model="model"/>
      </MudSelectItem>
    </Summary>
  </Paging>
</MudSelect>

<MudSelect
  Label="@T["Regulatory Network User Catalogues"]"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="Model.RegulatoryCatalogueId"
  For="@(() => Model.RegulatoryCatalogueId)">
  <Paging PageAsync="@(page => ScopedServices.GetRequiredService<OzdsLocationModelQueries>().GetRegulatoryCatalogues(title: "", pageNumber: page))">
    <Summary Context="model">
      <MudSelectItem Value="model.Id">
        <RegulatoryCatalogueSummary Model="model"/>
      </MudSelectItem>
    </Summary>
  </Paging>
</MudSelect>
@*!!! Figure out this with multiple selection*@
@* <MudSelect
  Label="@T["Representatives"]"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="Model."
  For="@(() => Model.)">
  <Paging PageAsync="@(page => ScopedServices.GetRequiredService<OzdsLocationModelQueries>().GetEligibleRepresentatives(title: "", pageNumber: page))">
    <Summary Context="model">
      <MudSelectItem Value="model.Id">
        <MaybeRepresentingUserSummary Model="model"/>
      </MudSelectItem>
    </Summary>
  </Paging>
</MudSelect> *@
@code {

  [Parameter]
  public LocationModel Model { get; set; } = default!;

}
