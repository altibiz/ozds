@using Theme = Theme

<main class="relative" style="height: 100vh;">
  <MudThemeProvider Theme="_theme"/>
  <MudDialogProvider/>
  <MudSnackbarProvider/>

  <MainLayoutErrorBoundary>
    <ChildContent>
      <OldLoading State="_userState">
        <Found Context="user">
          <CascadingValue Value="user">
            <OldLoading State="_representativeState">
              <Found Context="representative">
                <CascadingValue Value="representative">
                  <UserLayout>
                    <Body>
                    <RepresentativeLayout>
                      <Body>
                      @Body
                      </Body>
                    </RepresentativeLayout>
                    </Body>
                  </UserLayout>
                </CascadingValue>
              </Found>
              <NotFound>
                @Body
              </NotFound>
            </OldLoading>
          </CascadingValue>
        </Found>
      </OldLoading>
    </ChildContent>
    <ErrorContent>
      <MudContainer
        MaxWidth="MaxWidth.Medium"
        Class="relative"
        style="height: 100%; width:100%; padding-bottom: 120px;">
        <div
          Class="d-flex flex-column align-start justify-center relative"
          style="height: 100%; width: 100%;">
          <MudText Typo="Typo.h4">
            @T["Error"]
          </MudText>
          <MudText
            Typo="Typo.body2"
            Class="relative"
            Style="overflow-wrap: break-word; text-wrap: balance; width: 100%;">
            @context.ToString()
          </MudText>
        </div>
      </MudContainer>
    </ErrorContent>
  </MainLayoutErrorBoundary>
</main>

<style>
  td {
    text-align: center !important;
  }
  th {
    text-align: center !important;
  }
</style>

@code {

  [CascadingParameter]
  private Task<AuthenticationState>? _authenticationStateTask { get; set; }

  private readonly Theme _theme = new();

  @* protected override void OnLayoutInitialized()
  {
    _theme.Theme = new HelbMudTheme();
    _theme.DrawerClipMode = DrawerClipMode.Always;
    _theme.FontFamily = "Roboto";
    _theme.DefaultBorderRadius = 3;
  } *@
}
