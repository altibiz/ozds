@using Ozds.Business.Time
@inherits Ozds.Client.Base.OzdsOwningComponentBase
@* MOBILE *@
<MudHidden Breakpoint="Breakpoint.MdAndUp">

  <MudGrid Class="my-3 pa-1">
    <MudItem xs="12" Class="pa-1">
      <MudPaper Class="d-flex align-center justify-stat mud-width-full pa-1 pb-3 flex-column">
        <MudItem Class="d-flex justify-center align-center" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h6">
            @T["Potrošnja u tekućem mjesecu:"]
          </MudText>
        </MudItem>
        <MudContainer Class="d-flex justify-center" MaxWidth="MaxWidth.Small">
          <MudText Typo="Typo.h4">
            @(FloatString(_thisMonthTotal / 1000, 0) + " kWh")
          </MudText>
        </MudContainer>
      </MudPaper>
    </MudItem>

    <MudItem xs="12" Class="pa-1">
      <MudPaper Class="d-flex align-center justify-stat mud-width-full pa-1 pb-3 flex-column">
        <MudItem Class="d-flex justify-center align-center" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h6">
            @T["Potrošnja prethodni mjesc:"]
          </MudText>
        </MudItem>
        <MudContainer Class="d-flex justify-center" MaxWidth="MaxWidth.Small">
          <MudText Typo="Typo.h4">
            @(FloatString(_lastMonthTotal / 1000, 0) + " kWh")
          </MudText>
        </MudContainer>
        <MudItem Class="d-flex justify-center align-center" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h6">
            @T["Iznos računa u prethodnom mjesecu:"]
          </MudText>
        </MudItem>
        <MudContainer Class="d-flex justify-center" MaxWidth="MaxWidth.Small">
          <MudText Typo="Typo.h6">
            @(lastMonthInvoicesTotal == 0 ? T["Račun u izradi..."] : FloatString(lastMonthInvoicesTotal) + " EUR")
          </MudText>
        </MudContainer>
      </MudPaper>
    </MudItem>
    <MudItem xs="12" Class="pa-1">
      <MudPaper Class="d-flex align-center justify-stat mud-width-full pa-1 pb-3 flex-column">
        <MudItem Class="d-flex justify-center align-center" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h6">
            @(T["Potrošnja u godini do danas"] + T[" (kW):"])
          </MudText>
        </MudItem>
        @* <NetUserRepGraph/> *@
      </MudPaper>
    </MudItem>
  </MudGrid>
</MudHidden>


@* DESKTOP *@
<MudHidden Breakpoint="Breakpoint.SmAndDown">
  <MudGrid Class="my-3">
    <MudItem xs="4">
      <MudPaper Class="mud-width-full d-flex flex-column justify-space-between pa-4" Height="320px">
        <MudItem Class="" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h5">
            @(T["Potrošnja u tekućem mjesecu:"])
          </MudText>
        </MudItem>
        <MudContainer Class="d-flex align-end justify-center" MaxWidth="MaxWidth.Small">
          <MudText Typo="Typo.h1">
            @(FloatString(_thisMonthTotal / 1000, 0))
          </MudText>
          <MudText Typo="Typo.h4" Class="mb-3 ml-1">kWh</MudText>
        </MudContainer>
        <MudItem Class="" Style="font-size: large; font-weight: bold;color: white;">
          <MudText Typo="Typo.h6">
            _____ ______ _ __________ _______:
          </MudText>
        </MudItem>
        <MudItem Class="" Style="font-size: large; font-weight: bold;color: white;">
          <MudText Typo="Typo.h6">
            ____
          </MudText>
        </MudItem>
      </MudPaper>
    </MudItem>
    <MudItem xs="4">
      <MudPaper Class="mud-width-full d-flex flex-column justify-space-between pa-4" Height="320px">
        <MudItem Class="" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h5">
            @(T["Potrošnja u prethodnom mjesecu:"])
          </MudText>
        </MudItem>
        <MudContainer Class="d-flex align-end justify-center" MaxWidth="MaxWidth.Small">
          <MudText Typo="Typo.h1">
            @(FloatString(_lastMonthTotal / 1000, 0))
          </MudText>
          <MudText Typo="Typo.h4" Class="mb-3 ml-1">kWh</MudText>
        </MudContainer>
        <MudItem Class="" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h6">
            @(T["Iznos računa u prethodnom mjesecu:"])
          </MudText>
        </MudItem>
        <MudItem Class="" Style="font-size: large; font-weight: bold; align-self: center;">
          <MudText Typo="Typo.h5">
            @(lastMonthInvoicesTotal == 0 ? T["Račun u izradi..."] : FloatString(lastMonthInvoicesTotal) + " EUR")
          </MudText>
        </MudItem>
      </MudPaper>
    </MudItem>
    <MudItem xs="4">
      <MudPaper Class="mud-width-full pa-4" Height="320px">
        <MudItem Class="" Style="font-size: large; font-weight: bold;">
          <MudText Typo="Typo.h5">
            @(T["Potrošnja u godini do danas"] + T[" (kW):"])
          </MudText>
        </MudItem>
        @* <NetUserRepGraph/> *@
      </MudPaper>
    </MudItem>
  </MudGrid>
</MudHidden>

@code {
  private DateTimeOffset now = DateTimeOffset.UtcNow;
  private DateTimeOffset startOfThisMonth = DateTimeOffset.UtcNow.GetStartOfMonth();
  private DateTimeOffset startOfNextMonth = DateTimeOffset.UtcNow.GetStartOfNextMonth();
  private DateTimeOffset startOfLastMonth = DateTimeOffset.UtcNow.GetStartOfLastMonth();
  private float _lastMonthTotal = 0;
  private float _thisMonthTotal = 0;
  float lastMonthInvoicesTotal = 0;

  protected override async Task OnInitializedAsync()
  {
    var aggregateQueries = ScopedServices.GetRequiredService<OzdsAggregateQueries>();
    var test = await aggregateQueries.ReadAgnostic(new[] { "x => x.Interval == 2" }, startOfThisMonth, now, 1, 9000);
    var meters = test.OrderBy(x => x.Timestamp).GroupBy(x => x.MeterId).ToList();
    foreach (var meter in meters)
    {
      var _thisMonthUsage = meter.FirstOrDefault()!.ActiveEnergySpan_Wh.SpanDiff.TariffUnary.DuplexImport.PhaseSum;
      if (_thisMonthUsage == 0)
      {
        var a = meter.FirstOrDefault()!.ActiveEnergySpan_Wh.SpanMin.TariffUnary.DuplexImport.PhaseSum;
        var b = meter.FirstOrDefault()!.ActiveEnergySpan_Wh.SpanMax.TariffUnary.DuplexImport.PhaseSum;
        _thisMonthUsage = b - a;
      }

      _thisMonthTotal += _thisMonthUsage;
    }
  }

}
