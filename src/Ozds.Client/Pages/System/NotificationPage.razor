@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.DependencyInjection
@using MudBlazor
@using Ozds.Business.Activation.Agnostic
@using Ozds.Business.Models
@using Ozds.Business.Models.Abstractions
@using Ozds.Business.Models.Enums
@using Ozds.Business.Mutations
@using Ozds.Business.Queries
@using Ozds.Business.Queries.Agnostic
@using Ozds.Client.Components.Streaming
@using Ozds.Client.Components.Base
@using Ozds.Client.Components.Models
@using Ozds.Client.State

@namespace Ozds.Client.Pages

@page "/system/notification/{id?}"

@inherits OzdsOwningComponentBase

@if (RepresentativeState.Representative.Role
  is not RoleModel.OperatorRepresentative)
{
  <Loading T="INotification" Id="@Id">
    <Found>
      <HeadContent>
        <title>OZDS - @Translate("Notification"): @context.Title</title>
      </HeadContent>

      <NotificationDetails Model="@context"/>
    </Found>
    <NotFound>
      <HeadContent>
        <title>OZDS - @Translate("Notification")</title>
      </HeadContent>

      <NotFound />
    </NotFound>
  </Loading>

  return;
}

<Mutating
  T="INotification"
  Id="@Id"
  LoadAsync="OnLoadAsync"
  NewAsync="OnNewAsync"
  CreateAsync="OnCreateAsync">
  <Edit>
    <HeadContent>
      @if (context.Created)
      {
        <title>OZDS - @Translate("New notification")</title>
      }
      else
      {
        <title>OZDS - @Translate("Notification"): @context.Model.Title</title>
      }
    </HeadContent>

    <NotificationEdit Model="@context.Model"/>
  </Edit>
  <Details>
    <HeadContent>
      <title>OZDS - @Translate("Notification"): @context.Model.Title</title>
    </HeadContent>

    <NotificationDetails Model="@context.Model"/>

    @if (!context.Created)
    {
      <div class="d-flex flex-row mt-4 justify-end">
        <MudButton
          Variant="Variant.Filled"
          Class="align-self-end"
          OnClick="() => OnMarkAsSeen(context.Model)">
          @Translate("Mark as seen")
        </MudButton>
      </div>
    }
  </Details>
</Mutating>
