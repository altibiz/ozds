@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.DependencyInjection
@using Microsoft.Extensions.Hosting
@using MudBlazor
@using Ozds.Business.Models.Abstractions
@using Ozds.Business.Models.Enums
@using Ozds.Business.Queries
@using Ozds.Client.Attributes
@using Ozds.Client.Components.Base
@using Ozds.Client.Components.Streaming
@using Ozds.Client.Components.Tables
@using Ozds.Client.Components.Models
@using Ozds.Client.State

@namespace Ozds.Client.Pages

@page "/system/events"

@attribute [Navigation(
  Title = "Events",
  Icon = Icons.Material.Filled.VerifiedUser,
  Parent = typeof(SystemPage),
  Allows = [RoleModel.OperatorRepresentative])]

@inherits OzdsComponentBase

@inject IHostEnvironment Environment

@if (RepresentativeState.Representative.Role
  is not RoleModel.OperatorRepresentative)
{
  <NotFound />
  return;
}

<HeadContent>
  <title>OZDS - @Translate("Events")</title>
</HeadContent>

<MudSelect
  T="LevelModel"
  Label="@Translate("Minimal level")"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="@_minLevel">
  @foreach (var value in Enum.GetValues<LevelModel>()
    .Where(
      l => Environment.IsDevelopment()
        ? l >= LevelModel.Trace
        : l >= LevelModel.Information))
  {
    <MudSelectItem Value="value">
      @Translate(value.ToTitle())
    </MudSelectItem>
  }
</MudSelect>

<Paging PageAsync="@((page) => ScopedServices
  .GetRequiredService<EventQueries>()
  .ReadByMinLevel<IEvent>(_minLevel, page, CancellationToken))">
  <Found Context="page">
    <ResponsiveTable Model="@(page.Items)">
      <Summary>
        <Summary Model="@context" />
      </Summary>
      <Details>
        <Details Model="@context" />
      </Details>
      <Columns>
        <Columns Models="page.Items" />
      </Columns>
    </ResponsiveTable>
  </Found>
</Paging>

@code {
  [CascadingParameter]
  public RepresentativeState RepresentativeState { get; set; } = default!;

  private LevelModel _minLevel = LevelModel.Warning;
}
