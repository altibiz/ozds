@namespace Ozds.Client.Pages

@page "/"

@attribute [Navigation(
Order = -1000,
Title = "Dashboard",
Icon= Icons.Material.Outlined.Home,
Allows = [
RoleModel.OperatorRepresentative,
RoleModel.LocationRepresentative,
RoleModel.NetworkUserRepresentative
])]

@using Microsoft.AspNetCore.Components.Web
@using Ozds.Business.Analysis
@using Ozds.Business.Models.Abstractions
@using Ozds.Business.Models.Enums
@using Ozds.Client.Attributes
@using Ozds.Client.Components.Dashboards
@using Ozds.Client.Components.Models
@using Ozds.Client.Components.Tables
@using Ozds.Client.State
@inherits Ozds.Client.Components.Base.OzdsComponentBase

<HeadContent>
  <title>OZDS</title>
</HeadContent>

@{
  var model = AnalysisState.AnalysisBases.Value.Analysis();
  var meters = AnalysisState.AnalysisBases.Value
    .Select(analysis => (IMeter)analysis.Meter)
    .DistinctBy(meter => meter.Id)
    .ToList();
}
@if (RepresentativeState.Representative.Role
  is RoleModel.NetworkUserRepresentative)
{
  <NetworkUserRepresentativeDashboard Model="@model" Meters="@meters"/>
}
@if (RepresentativeState.Representative.Role
  is RoleModel.LocationRepresentative)
{
  <LocationRepresentativeDashboard Model="@model" Meters="@meters"/>
}
@if (RepresentativeState.Representative.Role
  is RoleModel.OperatorRepresentative)
{
  <OperatorRepresentativeDashboard Model="@model" Meters="@meters"/>
}

@if (RepresentativeState.Representative.Role
  is RoleModel.OperatorRepresentative
  or RoleModel.LocationRepresentative)
{
  var locations = AnalysisState.AnalysisBases.Value
    .AnalysesByLocation();

  <ResponsiveTable Model="@locations">
    <Summary>
      <Summary Model="@context"/>
    </Summary>
    <Details>
      <Details Model="@context"/>
    </Details>
    <Columns>
      <Columns Models="@locations"/>
    </Columns>
  </ResponsiveTable>
}

@if (RepresentativeState.Representative.Role
  is RoleModel.LocationRepresentative
  or RoleModel.NetworkUserRepresentative)
{
  var networkUsers = AnalysisState.AnalysisBases.Value
    .AnalysesByNetworkUser();

  <ResponsiveTable Model="@networkUsers">
    <Summary>
      <Summary Model="@context"/>
    </Summary>
    <Details>
      <Details Model="@context"/>
    </Details>
    <Columns>
      <Columns Models="@networkUsers"/>
    </Columns>
  </ResponsiveTable>
}

@if (RepresentativeState.Representative.Role
  is RoleModel.NetworkUserRepresentative)
{
  var measurementLocations = AnalysisState.AnalysisBases.Value
    .AnalysesByMeasurementLocation();

  <ResponsiveTable Model="@measurementLocations">
    <Summary>
      <Summary Model="@context"/>
    </Summary>
    <Details>
      <Details Model="@context"/>
    </Details>
    <Columns>
      <Columns Models="@measurementLocations"/>
    </Columns>
  </ResponsiveTable>
}

@{
  var invoices = AnalysisState.AnalysisBases.Value
    .SelectMany(analysis => analysis.Invoices)
    .DistinctBy(invoice => invoice.Id)
    .OfType<INetworkUserInvoice>()
    .ToList();
}

<ResponsiveTable Model="@invoices">
  <Summary>
    <Summary Model="@context"/>
  </Summary>
  <Details>
    <Details Model="@context"/>
  </Details>
  <Columns>
    <Columns Models="@invoices"/>
  </Columns>
</ResponsiveTable>

@code {

  [CascadingParameter]
  public RepresentativeState RepresentativeState { get; set; } = default!;

  [CascadingParameter]
  public AnalysisState AnalysisState { get; set; } = default!;

}
