@namespace Ozds.Client.Pages

@page "/system"

@attribute [Navigation(
Order = 20,
Title = "System",
Icon = Icons.Material.Filled.VerifiedUser,
Allows = [
RoleModel.OperatorRepresentative,
RoleModel.LocationRepresentative,
RoleModel.NetworkUserRepresentative
])]
@using Microsoft.AspNetCore.Components.Web
@using Ozds.Business.Models.Abstractions
@using Ozds.Client.Attributes
@using Ozds.Client.Components.Models
@using Ozds.Client.Components.Streaming
@using Ozds.Client.Components.Tables
@using Ozds.Client.State
@inherits Ozds.Client.Components.Base.OzdsComponentBase

<HeadContent>
  <title>OZDS - @Translate("System")</title>
</HeadContent>

@{
  var notifications = NotificationsState.Notifications;
}

<ResponsiveTable Model="notifications">
  <Summary>
    <Summary Model="context"/>
  </Summary>
  <Details>
    <Details Model="context"/>
  </Details>
  <Columns>
    <Columns Models="@notifications"/>
  </Columns>
</ResponsiveTable>

@if (RepresentativeState.Representative.Role
  != RoleModel.OperatorRepresentative)
{
  return;
}

<Paging T="IEvent">
  <Found Context="models">
    <ResponsiveTable Model="@models.Items">
      <Summary>
        <Summary Model="@context"/>
      </Summary>
      <Details>
        <Details Model="@context"/>
      </Details>
      <Columns>
        <Columns Models="@models.Items"/>
      </Columns>
    </ResponsiveTable>
  </Found>
</Paging>

@code {

  [CascadingParameter]
  private RepresentativeState RepresentativeState { get; set; } = default!;

  [CascadingParameter]
  private NotificationsState NotificationsState { get; set; } = default!;

}
