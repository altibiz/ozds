@using Microsoft.Extensions.DependencyInjection
@using Ozds.Business.Finance.Abstractions
@using Ozds.Business.Models
@using Ozds.Business.Queries.Agnostic
@using Ozds.Business.Time
@using Ozds.Client.Components.Base
@using Ozds.Client.Components.Models
@using Ozds.Client.Components.Streaming

@page "/network-user/{Id}"

@inherits OzdsOwningComponentBase

<Loading LoadAsync="@(() => ScopedServices
  .GetRequiredService<AuditableQueries>()
  .ReadSingle<NetworkUserModel>(Id, CancellationToken.None))">
  <Found>
    <NetworkUserEdit Model="context" />
  </Found>
</Loading>

@code {
  [Parameter]
  public string Id { get; set; } = default!;

  private async Task CreateInvoice()
  {
    var (dateFrom, dateTo) = DateTimeOffset.UtcNow.GetMonthRange();
    await ScopedServices
      .GetRequiredService<INetworkUserInvoiceIssuer>()
      .IssueNetworkUserInvoiceAsync(Id, dateFrom, dateTo);
  }
}
