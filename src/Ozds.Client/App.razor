@namespace Ozds.Client
@using System.Globalization
@using Microsoft.AspNetCore.Components.Routing
@using Ozds.Client.Components.Layout
@using Ozds.Client.Components.Providers
@using Ozds.Client.Components.Streaming
@using Ozds.Client.Pages
@inherits Ozds.Client.Components.Base.OzdsComponentBase

@inject NavigationManager NavigationManager

@{
  var culture = Culture is null ? null : new CultureInfo(Culture);
}

<ErrorBoundary>
  <CultureStateProvider Culture="@culture">
    <UserStateProvider LogoutToken="@LogoutToken">
      <RepresentativeStateProvider>
        <Found>
          <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
              <LayoutStateProvider>
                <ThemeStateProvider>
                  <LocationStateProvider>
                    <NotificationsStateProvider>
                      <AnalysisStateProvider>
                        <RouteView
                          RouteData="@routeData"
                          DefaultLayout="@typeof(Layout)"/>
                      </AnalysisStateProvider>
                    </NotificationsStateProvider>
                  </LocationStateProvider>
                </ThemeStateProvider>
              </LayoutStateProvider>
            </Found>
            <NotFound>
              <LayoutStateProvider>
                <ThemeStateProvider>
                  <LayoutView Layout="@typeof(Layout)">
                    <NotFound/>
                  </LayoutView>
                </ThemeStateProvider>
              </LayoutStateProvider>
            </NotFound>
          </Router>
        </Found>
        <NotFound>
          @if (NavigationManager.Uri != PageHref<UnapprovedPage>())
          {
            NavigateToPage<UnapprovedPage>();
            return;
          }

          <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
              <LayoutStateProvider>
                <ThemeStateProvider>
                  <RouteView
                    RouteData="@routeData"
                    DefaultLayout="@typeof(Layout)"/>
                </ThemeStateProvider>
              </LayoutStateProvider>
            </Found>
            <NotFound>
              <LayoutStateProvider>
                <ThemeStateProvider>
                  <LayoutView Layout="@typeof(Layout)">
                    <NotFound/>
                  </LayoutView>
                </ThemeStateProvider>
              </LayoutStateProvider>
            </NotFound>
          </Router>
        </NotFound>
      </RepresentativeStateProvider>
    </UserStateProvider>
  </CultureStateProvider>
</ErrorBoundary>

@code {

  [Parameter]
  public string? Culture { get; set; }

  [Parameter]
  public string LogoutToken { get; set; } = default!;

}
