@using Microsoft.AspNetCore.Components.Routing
@using MudBlazor
@using Ozds.Client.Base
@using Ozds.Client.State
@namespace Ozds.Client.Components.Layout
@inherits OzdsComponentBase
@implements IDisposable

<MudDrawer
  Open="@LayoutState.IsNavigationDrawerOpen"
  OpenChanged="open => LayoutState.SetNavigationDrawerOpen(open)"
  Elevation="4"
  Anchor="@LayoutState.DrawerAnchor"
  Variant="DrawerVariant.Temporary"
  ClipMode="DrawerClipMode.Never" >
    <MudDrawerContainer>
        <MudNavMenu>
            @foreach (var route in GetNavigationDescriptors())
            {
                <NavigationItem Descriptor="route" />
            }
        </MudNavMenu>
    </MudDrawerContainer>
</MudDrawer>

@code {
  [CascadingParameter]
  public LayoutState LayoutState { get; set; } = default!;

  [CascadingParameter]
  public UserState UserState { get; set; } = default!;

  protected override void OnInitialized()
  {
    NavigationManager.LocationChanged += OnLocationChanged;
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
    LayoutState.SetNavigationDrawerOpen(false);
  }
}
