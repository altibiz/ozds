@using Microsoft.AspNetCore.Components.Routing
@using MudBlazor
@using Ozds.Client.Base
@using Ozds.Client.State
@namespace Ozds.Client.Components.Layout
@inherits OzdsComponentBase
@implements IDisposable

<MudDrawer
  Open="@LayoutState.IsNavigationDrawerOpen"
  OpenChanged="open => LayoutState.SetNavigationDrawerOpen(open)"
  Elevation="4"
  Anchor="@LayoutState.DrawerAnchor"
  Variant="DrawerVariant.Temporary"
  ClipMode="DrawerClipMode.Never"
  Style="height: 100vh;">
  <MudDrawerHeader Style="padding-inline: 0;">
    <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex flex-row">
      <MudImage
        Src="/favicon.ico"
        Alt="Helb"
        Style="height: calc(var(--mud-appbar-height) - 24px);"/>
      <MudSpacer />
      <MudButton
        OnClick="e => LayoutState.SetNavigationDrawerOpen(false)"
        Variant="Variant.Text"
        Color="MudBlazor.Color.Primary"
        Style="margin-right: -24px;"
        Class="d-flex flex-row align-center">
        <MudIcon Icon="@Icons.Material.Filled.Close"/>
      </MudButton>
    </MudContainer>
  </MudDrawerHeader>
    <MudDrawerContainer>
        <MudNavMenu>
            @foreach (var route in GetNavigationDescriptors())
            {
                <NavigationItem Descriptor="route" />
                <MudDivider Style="width: 80%; margin-left: 10%;" />
            }
        </MudNavMenu>
    </MudDrawerContainer>
</MudDrawer>

@code {
  [CascadingParameter]
  public LayoutState LayoutState { get; set; } = default!;

  [CascadingParameter]
  public UserState UserState { get; set; } = default!;

  protected override void OnInitialized()
  {
    NavigationManager.LocationChanged += OnLocationChanged;
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
    LayoutState.SetNavigationDrawerOpen(false);
  }
}
