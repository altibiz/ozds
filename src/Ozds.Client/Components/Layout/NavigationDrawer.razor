@using Microsoft.AspNetCore.Components.Routing
@using MudBlazor
@using Ozds.Client.Base
@using Ozds.Client.State
@namespace Ozds.Client.Components.Layout
@inherits OzdsComponentBase
@implements IDisposable

<MudDrawer
  Open="@LayoutState.IsNavigationDrawerOpen"
  OpenChanged="open => LayoutState.SetNavigationDrawerOpen(open)"
  Elevation="4"
  Anchor="@LayoutState.DrawerAnchor"
  Variant="DrawerVariant.Temporary"
  ClipMode="DrawerClipMode.Never" >
  <MudDrawerContainer>
    <MudNavMenu>
      @foreach (var route in GetNavigationDescriptors())
      {
        <MudNavLink
          Href="@route.Route"
          Match="NavLinkMatch.All">
          <MudContainer
            MaxWidth="MaxWidth.Small"
            Class="d-flex flex-row">
            <MudHidden Breakpoint="Breakpoint.Xs">
              <div
                style="margin-left: -8px;"
                class="d-flex flex-row align-center">
                <MudIcon Icon="@route.Icon" />
              </div>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.SmAndUp">
              <div
                style="margin-left: -28px;"
                class="d-flex flex-row align-center">
                <MudIcon Icon="@route.Icon" />
              </div>
            </MudHidden>
            <MudText Class="ml-4">
              @T[route.Title]
            </MudText>
          </MudContainer>
        </MudNavLink>
      }
    </MudNavMenu>
  </MudDrawerContainer>
</MudDrawer>

@code {
  [CascadingParameter]
  public LayoutState LayoutState { get; set; } = default!;

  [CascadingParameter]
  public UserState UserState { get; set; } = default!;

  protected override void OnInitialized()
  {
    NavigationManager.LocationChanged += OnLocationChanged;
  }

  public void Dispose()
  {
    NavigationManager.LocationChanged -= OnLocationChanged;
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
    LayoutState.SetNavigationDrawerOpen(false);
  }
}
