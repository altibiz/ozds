@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.Extensions.Hosting
@using MudBlazor
@using Ozds.Client.State
@using Ozds.Client.Attributes
@using Ozds.Client.Components.Base

@namespace Ozds.Client.Components.Layout

@inherits OzdsComponentBase

@inject IHostEnvironment Environment

@if (!Environment.IsDevelopment()
  || Descriptor.Navigation.Developer)
{
  return;
}

@if (!Descriptor.Navigation.Allows
  .Contains(RepresentativeState.Representative.Role))
{
  return;
}

@{
  var match = Descriptor.Children.Any()
    ? NavLinkMatch.Prefix
    : NavLinkMatch.All;
}

<div style="position: relative">
  <style>
    a {
      padding-inline: 0 !important;
    }

    .mud-nav-link-text {
      margin-inline: 0 !important;
    }
  </style>
  <MudNavLink
    Href="@PageHref(Descriptor.Type)"
    Match="match">
    <MudContainer
      MaxWidth="@MaxWidth"
      Class="@($"d-flex flex-row {Class}")"
      Style="@($"height: 100%; {Style}")">
      <MudHidden Breakpoint="Breakpoint.Xs">
        <div class="d-flex flex-row align-center">
          <MudIcon Icon="@Descriptor.Navigation.Icon" />
        </div>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndUp">
        <div class="d-flex flex-row align-center">
          <MudIcon Icon="@Descriptor.Navigation.Icon" />
        </div>
      </MudHidden>
      <MudText Class="ml-4">
        @Translate(Descriptor.Navigation.Title)
      </MudText>
      @if (Descriptor.Children.Any())
      {
        <MudSpacer />
        <MudButton
          Variant="Variant.Text"
          Style="margin-right: -24px;"
          OnClick="@(() => _expanded = !_expanded)">
          <MudIcon
            Icon="@(_expanded
              ? Icons.Material.Filled.ExpandLess
              : Icons.Material.Filled.ExpandMore)"
            Size="@Size.Small" />
        </MudButton>
      }
    </MudContainer>
  </MudNavLink>
</div>

@if (Descriptor.Children.Any() && _expanded)
{
  <div>
    @foreach (var child in Descriptor.Children)
    {
      <NavigationItem Descriptor="child" />
    }
    <MudContainer
      MaxWidth="@MaxWidth"
      Class="@Class"
      Style="@Style">
      <MudDivider />
    </MudContainer>
  </div>
}

@code {
  [Parameter]
  public NavigationDescriptor Descriptor { get; set; } = default!;

  [Parameter]
  public MaxWidth MaxWidth { get; set; } = default;

  [Parameter]
  public string Style { get; set; } = string.Empty;

  [Parameter]
  public string Class { get; set; } = string.Empty;

  [CascadingParameter]
  private LayoutState LayoutState { get; set; } = default!;

  [CascadingParameter]
  private RepresentativeState RepresentativeState { get; set; } = default!;

  private bool _expanded = false;
}
