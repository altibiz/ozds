@using Ozds.Business.Models.Joins
@using MudBlazor
@using Ozds.Client.Components.Base
@using Ozds.Client.Components.Streaming
@using Ozds.Client.State
@using Ozds.Business.Queries
@using Ozds.Business.Models.Base
@using Ozds.Business.Models
@using Microsoft.Extensions.DependencyInjection

@namespace Ozds.Client.Components.Layout

@inherits OzdsComponentBase

<MudToolBar DisableGutters>
  <MudContainer
    MaxWidth="@MaxWidth.Large"
    Class="@($"d-flex flex-row {Class}")"
    Style="@($"height: 100%; {Style}")">
    <MudIconButton
      Icon="@Icons.Material.Outlined.Menu"
      Style="margin-left: -12px;"
      OnClick="OnNavigationMenuClick"/>
    <MudSpacer />
    @if (NotificationsState.Notifications.Count > 0)
    {
      var iconSize = 16;
      var fontSize = 10;

      <MudButton
        Size="MudBlazor.Size.Small"
        Class="p-2"
        Style="margin-right: -10px; position: relative;"
        OnClick="NavigateToNotifications">
        <MudIcon Icon="@Icons.Material.Filled.NotificationsActive"/>
        <MudIcon
          Style="@($@"
            width: {iconSize}px;
            height: {iconSize}px;
            position: absolute;
            left: 32px;
            top: 16px;
          ")"
          Color="@Color.Error"
          Icon="@Icons.Material.Filled.Circle"/>
        <MudText
          Style="@($@"
            width: {iconSize}px;
            height: {iconSize}px;
            position: absolute;
            font-size: {fontSize}px;
            left: 32px;
            top: 16px;
          ")"
          Typo="@Typo.button">
          @NotificationsState.Notifications.Count
        </MudText>
      </MudButton>
    }
    else
    {
      <MudButton
        Size="MudBlazor.Size.Small"
        Class="p-2"
        Style="margin-right: -20px;"
        OnClick="NavigateToNotifications">
        <MudIcon Icon="@Icons.Material.Filled.NotificationsNone" />
      </MudButton>
    }
  </MudContainer>
</MudToolBar>

@code {
  [Parameter]
  public MaxWidth MaxWidth { get; set; } = default;

  [Parameter]
  public string Style { get; set; } = string.Empty;

  [Parameter]
  public string Class { get; set; } = string.Empty;
}
