@using Ozds.Business.Models.Joins
@using MudBlazor
@using Ozds.Client.Components.Base
@using Ozds.Client.Components.Streaming
@using Ozds.Client.State
@using Ozds.Business.Queries
@using Ozds.Business.Models.Base
@using Ozds.Business.Models
@using Microsoft.Extensions.DependencyInjection

@namespace Ozds.Client.Components.Layout

@inherits OzdsOwningComponentBase

<MudToolBar Gutters="false">
  <MudContainer
    Style="height: 100%;"
    MaxWidth="MaxWidth.Large"
    Class="d-flex flex-row">
    <MudIconButton
      Icon="@Icons.Material.Outlined.Menu"
      Style="margin-left: -12px;"
      OnClick="e => LayoutState.SetNavigationDrawerOpen(true)"/>
    <MudSpacer />
    <Paging
      PageAsync="@((page) => ScopedServices
        .GetRequiredService<NotificationQueries>()
        .ReadForRecipient<NotificationModel>(
          RepresentativeState.Representative.Id,
          page,
          CancellationToken.None))">
      <Found>
        <MudButton
          Size="MudBlazor.Size.Small"
          Style="margin-right: -20px;"
          Href="@($"/app/{Culture}/notifications")">
          <MudIcon Icon="@Icons.Material.Filled.NotificationsActive"/>
          <MudItem>
            <MudIcon Icon="@Icons.Material.Filled.Circle"/>
            <MudText>@context.TotalCount</MudText>
          </MudItem>
        </MudButton>
      </Found>
      <Empty>
        <MudButton
          Size="MudBlazor.Size.Small"
          Style="margin-right: -20px;"
          Href="@($"/app/{Culture}/notifications")">
          <MudIcon Icon="@Icons.Material.Filled.NotificationsNone" />
        </MudButton>
      </Empty>
      <Pagination />
    </Paging>
  </MudContainer>
</MudToolBar>

@code {
  [CascadingParameter]
  public LayoutState LayoutState { get; set; } = default!;

  [CascadingParameter]
  public UserState UserState { get; set; } = default!;

  [CascadingParameter]
  public RepresentativeState RepresentativeState { get; set; } = default!;
}
