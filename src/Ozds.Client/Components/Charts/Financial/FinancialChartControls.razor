@* TODO: control via profile enum *@

@namespace Ozds.Client.Components.Charts
@using MudBlazor
@using Ozds.Business.Models.Enums
@using Ozds.Client.Components.Fields
@inherits Ozds.Client.Components.Base.OzdsComponentBase

<FinancialChartHeader Parameters="_parameters"/>

@ChildContent(_parameters)

<MudExpansionPanel
  Gutters="false"
  Text="@Translate("Chart controls")">
  <MudGrid Spacing="2" Justify="Justify.Center">
    @if (MeasurementLocations.Count > 1)
    {
      <MudItem xs="12" md="6">
        <MudSelect
          T="string"
          Label="@Translate("Measurement locations")"
          SelectedValues="_parameters.MeasurementLocations.Select(measurementLocation => measurementLocation.Id)"
          SelectedValuesChanged="@(e => _parameters.MeasurementLocations = MeasurementLocations.Where(measurementLocation => e.Contains(measurementLocation.Id)).ToHashSet())"
          MultiSelection>
          @foreach (var measurementLocation in MeasurementLocations)
          {
            <MudSelectItem Value="@measurementLocation.Id">
              @measurementLocation.Id
            </MudSelectItem>
          }
        </MudSelect>
      </MudItem>
    }
    @if (Meters.Count > 1)
    {
      <MudItem xs="12" md="6">
        <MudSelect
          T="string"
          Label="@Translate("Meters")"
          SelectedValues="_parameters.Meters.Select(meter => meter.Id)"
          SelectedValuesChanged="@(e => _parameters.Meters = Meters.Where(meter => e.Contains(meter.Id)).ToHashSet())"
          MultiSelection>
          @foreach (var meter in Meters)
          {
            <MudSelectItem Value="@meter.Id">
              @meter.Id
            </MudSelectItem>
          }
        </MudSelect>
      </MudItem>
    }
    <MudItem xs="12" sm="6" md="3">
      <EnumPicker
        T="ResolutionModel"
        @bind-Value="_parameters.Resolution"
        Title="@Translate("Resolution")"
        Label="x => Translate(x.ToTitle(_parameters.Multiplier))"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <MudNumericField
        T="int"
        @bind-Value="_parameters.Multiplier"
        Label="@Translate("Multiplier")"
        Min="1"
        Max="@_parameters.Resolution.MaxMultiplier()"
        Step="1"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <EnumPicker
        @bind-Value="_parameters.Operator"
        Title="@Translate("Operator")"
        Label="x => Translate(x.ToTitle())"/>
    </MudItem>
  </MudGrid>
</MudExpansionPanel>
