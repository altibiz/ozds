@* TODO: control via profile enum *@

@namespace Ozds.Client.Components.Charts

@using MudBlazor
@using Ozds.Business.Models
@using Ozds.Business.Models.Enums
@using Ozds.Client.Components.Fields
@inherits Ozds.Client.Components.Base.OzdsComponentBase

<MeasurementChartHeader Parameters="_parameters"/>

@ChildContent(_parameters)

<MudExpansionPanel
  Gutters="false"
  Text="@Translate("Chart controls")">
  <MudGrid Spacing="2" Justify="Justify.Center">
    @if (MeasurementLocations.Count > 1)
    {
      <MudItem xs="12" md="6">
        <MudSelect
          T="string"
          Label="@Translate("Measurement locations")"
          SelectedValues="@(_parameters.MeasurementLocations.Select(measurementLocation => measurementLocation.Id))"
          SelectedValuesChanged="@OnMeasurementLocationsChanged"
          MultiSelection>
          @foreach (var measurementLocation in MeasurementLocations)
          {
            <MudSelectItem Value="@measurementLocation.Id">
              @measurementLocation.Id
            </MudSelectItem>
          }
        </MudSelect>
      </MudItem>
    }
    @if (Meters.Count > 1)
    {
      <MudItem xs="12" md="6">
        <MudSelect
          T="string"
          Label="@Translate("Meters")"
          SelectedValues="@(_parameters.Meters.Select(meter => meter.Id))"
          SelectedValuesChanged="@OnMetersChanged"
          MultiSelection>
          @foreach (var meter in Meters)
          {
            <MudSelectItem Value="@meter.Id">
              @meter.Id
            </MudSelectItem>
          }
        </MudSelect>
      </MudItem>
    }
    <MudItem xs="12" md="6">
      <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudCheckBox
          T="bool"
          Value="@_parameters.Refresh"
          ValueChanged="@OnRefreshChanged"
          Label="@Translate("Refresh")"/>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <div class="d-flex justify-end pe-4">
          <MudCheckBox
            T="bool"
            Value="@_parameters.Refresh"
            ValueChanged="@OnRefreshChanged"
            Label="@Translate("Refresh")"/>
        </div>
      </MudHidden>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <EnumPicker
        T="MeasureModel"
        @bind-Value="@_parameters.Measure"
        Title="@Translate("Measure")"
        Values="@Measures()"
        Label="@(x => Translate(x.ToTitle()))"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <MultiEnumPicker
        T="PhaseModel"
        Value="@_parameters.Phases"
        ValueChanged="@(e => _parameters.Phases = e.ToHashSet())"
        Title="@Translate("Phase")"
        Label="@(x => Translate(x.ToTitle()))"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <EnumPicker
        T="ResolutionModel"
        Value="@_parameters.Resolution"
        ValueChanged="@OnResolutionChanged"
        Title="@Translate("Resolution")"
        Label="@(x => Translate(x.ToTitle(_parameters.Multiplier)))"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <MudNumericField
        T="int"
        Value="@_parameters.Multiplier"
        ValueChanged="@OnMultiplierChanged"
        Label="@Translate("Multiplier")"
        Min="1"
        Max="@_parameters.Resolution.MaxMultiplier()"
        Step="1"/>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
      <EnumPicker
        T="OperatorModel"
        @bind-Value="@_parameters.Operator"
        Title="@Translate("Operator")"
        Label="@(x => Translate(x.ToTitle()))"/>
    </MudItem>
  </MudGrid>
</MudExpansionPanel>
