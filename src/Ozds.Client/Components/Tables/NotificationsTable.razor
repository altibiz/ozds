@using Microsoft.Extensions.DependencyInjection
@using MudBlazor
@using Ozds.Business.Models.Abstractions
@using Ozds.Business.Models.Base
@using Ozds.Business.Queries
@using Ozds.Client.Components.Base
@using Ozds.Client.State

@inherits OzdsOwningComponentBase

<MudHidden Breakpoint="Breakpoint.MdAndUp">
  <MudItem Class="mb-5">
    <MudText Typo="Typo.h4" Class="d-flex">
      @(Translate("Notifications"))
    </MudText>
    @foreach (var notification in Model)
    {
      <MudPaper Elevation="2" Class="ma-1">
        <MudStack Spacing="0">
          <MudGrid Class="d-flex pa-2">
            <MudItem
              xs="10"
              Class="d-flex align-center justify-start"
              Style="font-size: large;">
              <MudText Typo="Typo.h6">
                @notification.Title
              </MudText>
            </MudItem>
            <MudItem xs="2" Class="d-flex align-center justify-end">
              <MudIconButton
                OnClick="@(() => NavigationManager
                  .NavigateTo($"notification/{notification.Id}"))"
                Icon="@Icons.Material.Filled.RemoveRedEye"
                Color="Color.Primary"/>
            </MudItem>
            <MudItem xs="8" Class="d-flex flex-column align-start justify-center">
              <MudText Typo="Typo.body2">
                @notification.Summary
              </MudText>
            </MudItem>
            <MudItem xs="4" Class="d-flex flex-row align-center justify-end">
              <MudText Typo="Typo.body2">
                @DateTimeString(notification.Timestamp)
              </MudText>
            </MudItem>
          </MudGrid>
        </MudStack>
      </MudPaper>
    }
  </MudItem>
</MudHidden>

<MudHidden Breakpoint="Breakpoint.SmAndDown">
  <MudDataGrid
    T="INotification"
    Class="my-6"
    MultiSelection="true"
    Items="@Model"
    SortMode="SortMode.Multiple"
    Filterable="true"
    QuickFilter="@(x =>
      string.IsNullOrWhiteSpace(_searchString)
      || x.Title.Contains(_searchString))">
    <ToolBarContent>
      <MudText Typo="Typo.h4">@Translate("Notifications")</MudText>
      <MudSpacer/>
      <MudTextField
        @bind-Value="_searchString"
        Placeholder="Search"
        Adornment="Adornment.Start"
        Immediate="true"
        AdornmentIcon="@Icons.Material.Filled.Search"
        IconSize="Size.Medium"
        Class="mt-0">
      </MudTextField>
    </ToolBarContent>
    <Columns >
      <PropertyColumn
        CellStyle="text-align: start !important;"
        Property="x => x.Title"
        Title='@Translate("Title")' Sortable="false"/>
      <PropertyColumn
        CellStyle="font-size: x-large;"
        Property="x => x.Timestamp"
        Title='@Translate("Date")'>
        <CellTemplate>
          @(context.Item.Timestamp.ToString("HH:mm dd.MM.yyyy."))
        </CellTemplate>
      </PropertyColumn>
      <TemplateColumn
        CellClass="d-flex justify-end"
        Sortable="false"
        Filterable="false">
        <CellTemplate>
          <MudStack Row>
            <MudButton
              OnClick="@(() => NavigationManager
                .NavigateTo($"notification/{context.Item.Id}"))"
              Variant="Variant.Filled"
              Color="Color.Primary">
              @Translate("Overview")
            </MudButton>
          </MudStack>
        </CellTemplate>
      </TemplateColumn>
    </Columns>
    <PagerContent>
      <MudDataGridPager T="INotification"/>
    </PagerContent>
  </MudDataGrid>
</MudHidden>

@code {
  [Parameter]
  public List<NotificationModel> Model { get; set; } = default!;

  private string? _searchString;
}
