@using MudBlazor
@using Ozds.Business.Analysis
@using Ozds.Business.Models.Enums
@using Ozds.Client.Components.Models.Base
@using Ozds.Client.State

@namespace Ozds.Client.Components.Models

@typeparam TPrefix
@typeparam TModel where TModel : LocationAnalysis
@inherits OzdsColumnsComponentBase<TPrefix, TModel>

<PropertyColumn
  T="TPrefix"
  TProperty="decimal"
  Property="x => Raw(x)!.Analysis.ThisMonthConsumption.ActiveEnergy_kWh"
  Title='@Translate("Current months consumption")'>
  <CellTemplate>
    @NumericString(
      Raw(context.Item)?.Analysis.ThisMonthConsumption.ActiveEnergy_kWh,
      0)
    &nbsp;
    kWh
  </CellTemplate>
</PropertyColumn>

<PropertyColumn
  T="TPrefix"
  TProperty="decimal"
  Property="x => Raw(x)!.Analysis.LastMonthConsumption.ActiveEnergy_kWh"
  Title='@Translate("Last months consumption")'>
  <CellTemplate>
    @NumericString(
      Raw(context.Item)?.Analysis.LastMonthConsumption.ActiveEnergy_kWh,
      0)
    &nbsp;
    kWh
  </CellTemplate>
</PropertyColumn>

@if (RepresentativeState.Representative.Role
  is RoleModel.LocationRepresentative)
{
  <PropertyColumn
    T="TPrefix"
    TProperty="decimal"
    Property="x => Raw(x)!.Analysis.Load.ActivePower_kW"
    Title='@Translate("Active power")'>
    <CellTemplate>
      @NumericString(Raw(context.Item)?.Analysis.Load.ActivePower_kW)
      &nbsp;
      kW
    </CellTemplate>
  </PropertyColumn>
}
else
{
  <PropertyColumn
    T="TPrefix"
    TProperty="decimal"
    Property="x => Raw(x)!.Analysis.LastMonthExpenses.Total_EUR"
    Title='@Translate("Last months invoice total")'>
    <CellTemplate>
      @(Raw(context.Item)?.Analysis.LastMonthExpenses.Total_EUR == 0
        ? Translate("Invoice pending...")
        : NumericString(
            Raw(context.Item)?.Analysis.LastMonthExpenses.Total_EUR)
            + " EUR")
    </CellTemplate>
  </PropertyColumn>
}

@code {
  [CascadingParameter]
  public RepresentativeState RepresentativeState { get; set; } = default!;
}
