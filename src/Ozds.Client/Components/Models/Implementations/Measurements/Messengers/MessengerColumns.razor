@using MudBlazor
@using Ozds.Business.Models.Abstractions
@using Ozds.Business.Models.Enums
@using Ozds.Business.Models.Complex
@using Ozds.Client.Components.Models.Base

@typeparam TPrefix
@typeparam TModel where TModel : IMessenger
@inherits OzdsColumnsComponentBase<TPrefix, TModel>

<PropertyColumn
  T="TPrefix"
  TProperty="string"
  Property="x => Raw(x)!.Title"
  Title='@Translate("Title")'>
  <CellTemplate>
    <MudText>@Raw(context.Item)?.Title</MudText>
  </CellTemplate>
</PropertyColumn>

<PropertyColumn
  T="TPrefix"
  TProperty="PeriodModel"
  Property="x => Raw(x)!.MaxInactivityPeriod"
  Title='@Translate("Max Inactivity Period")'>
  <CellTemplate>
    <MudText>@FormatPeriod(Raw(context.Item)?.MaxInactivityPeriod)</MudText>
  </CellTemplate>
</PropertyColumn>

<PropertyColumn
  T="TPrefix"
  TProperty="PeriodModel"
  Property="x => Raw(x)!.PushDelayPeriod"
  Title='@Translate("Push Delay Period")'>
  <CellTemplate>
    <MudText>@FormatPeriod(Raw(context.Item)?.PushDelayPeriod)</MudText>
  </CellTemplate>
</PropertyColumn>

@code {
  private string FormatPeriod(PeriodModel? period)
  {
    if (period is null)
    {
      return "";
    }

    var durationTitle = period.Duration.ToTitle(plural: period.Multiplier > 1);
    return $"{period.Multiplier} {Translate(durationTitle)}";
  }
}
