

<MudTextField
  Label="@T["User Name"]"
  @bind-Value="Model.User.UserName"
  For="@(() => Model.User.UserName)"/>

@if (Model.Representative is not null)
{
<MudTextField
  Label="@T["Title"]"
  @bind-Value="Model.Representative.Title"
  For="@(() => Model.Representative.Title)"/>

@*!!! Should I use MultyEnumPicker ? *@
<MudSelect
  T="RoleModel"
  Label="@T["Role"]"
  AnchorOrigin="Origin.BottomCenter"
  @bind-Value="Model.Representative.Role"
  For="@(() => Model.Representative.Role)">
  <MudSelectItem Value="@RoleModel.OperatorRepresentative">
    Operator Representative
  </MudSelectItem>
  <MudSelectItem Value="@RoleModel.LocationRepresentative">
    Location Representative
  </MudSelectItem>
  <MudSelectItem Value="@RoleModel.NetworkUserRepresentative">
    Network User Representative
  </MudSelectItem>
</MudSelect>

@*!!! Should I use MultyEnumPicker ? *@
<MudSelect
  T="TopicModel"
  Label="@T["Topics"]"
  AnchorOrigin="Origin.BottomCenter"
  MultiSelection
  SelectedValues="@Model.Representative.Topics"
  SelectedValuesChanged="e => Model.Representative.Topics = e.ToList()">
  @foreach (var value in Enum.GetValues<TopicModel>())
  {
    <MudSelectItem Value="value">
      @T[value.ToTitle()]
    </MudSelectItem>
  }
</MudSelect>

<MudTextField
  Label="@T["Name"]"
  @bind-Value="Model.Representative.PhysicalPerson.Name"
  For="@(() => Model.Representative.PhysicalPerson.Name)"/>

<MudTextField
  Label="@T["Email"]"
  @bind-Value="Model.Representative.PhysicalPerson.Email"
  For="@(() => Model.Representative.PhysicalPerson.Email)"/>

<MudTextField
  Label="@T["PhoneNumber"]"
  @bind-Value="Model.Representative.PhysicalPerson.PhoneNumber"
  For="@(() => Model.Representative.PhysicalPerson.PhoneNumber)"/>
}

@code {

  [Parameter]
  public MaybeRepresentingUserModel Model { get; set; } = default!;

}
