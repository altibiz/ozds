@namespace Ozds.Client.Components.Models.Base

@typeparam TModel
@inherits Ozds.Client.Components.Base.OzdsComponentBase
@using Ozds.Client.Components.Streaming
@implements Ozds.Client.Components.Models.Abstractions.IModelComponentProvider

@Base()

@code {

  [Parameter]
  public RenderFragment ChildContent { get; set; } = @<Fragment/>;

  protected RenderFragment Base()
  {
    if (Isolate)
    {
      return @<Fragment/>;
    }

    return @<DynamicComponent
              Type="@(BaseComponentType())"
              Parameters="@(BaseParameters())"/>;
  }

  protected RenderFragment Base<T>()
  {
    return Base(typeof(T));
  }

  protected RenderFragment Base(Type baseModelType)
  {
    if (Isolate)
    {
      return @<Fragment/>;
    }

    return @<DynamicComponent
              Type="@(BaseComponentType(baseModelType))"
              Parameters="@(BaseParameters())"/>;
  }

  protected RenderFragment Base(RenderFragment childContent)
  {
    if (Isolate)
    {
      return childContent;
    }

    return @<DynamicComponent
              Type="@(BaseComponentType())"
              Parameters="@(BaseParameters(childContent))"/>;
  }

  protected RenderFragment Base<T>(RenderFragment childContent)
  {
    return Base(typeof(T), childContent);
  }

  protected RenderFragment Base(
    Type baseModelType,
    RenderFragment childContent
  )
  {
    if (Isolate)
    {
      return childContent;
    }

    return @<DynamicComponent
              Type="@(BaseComponentType(baseModelType))"
              Parameters="@(BaseParameters(childContent))"/>;
  }

  protected RenderFragment Sub()
  {
    if (!Isolate)
    {
      return @<Fragment/>;
    }

    return ChildContent;
  }

}
