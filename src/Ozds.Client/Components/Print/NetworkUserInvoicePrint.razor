@inherits OzdsOwningComponentBase

<Loading LoadAsync="@(async () => (CalculatedInvoice ?? await ScopedServices.GetRequiredService<OzdsCalculatedInvoiceQueries>().ReadCalculatedNetworkUserInvoice(Id ?? throw new InvalidOperationException()))!)">
  <Found>
    <div class="page">
      <div class="page-header">
        <img src="/invoice-print-header-hrv.svg"/>
      </div>
      <div class="page-content">
        <NetworkUserInvoicePrintContent Invoice="@context.Invoice"/>
      </div>
      <div class="page-footer">
        <img src="/invoice-print-footer-hrv.svg"/>
      </div>
    </div>

    @foreach (var calculation in context.Calculations)
    {
      <div class="page-break"/>
      <div class="page">
        <div class="page-header">
          <img src="/invoice-print-header-hrv.svg"/>
        </div>
        <div class="page-content">
          <NetworkUserCalculationPrintContent Calculation="@calculation"/>
        </div>
        <div class="page-footer">
          <img src="/invoice-print-footer-hrv.svg"/>
        </div>
      </div>
    }

    @if (context.Calculations.Count > 0)
    {
      <div class="page-break"/>
      <div class="page">
        <div class="page-header">
          <img src="/invoice-print-header-hrv.svg"/>
        </div>
        <div class="page-content">
          <NetworkUserCalculationPrintAbbreviations/>
        </div>
        <div class="page-footer">
          <img src="/invoice-print-footer-hrv.svg"/>
        </div>
      </div>
    }

    <div class="page-break"/>
    <div class="page">
      <div class="page-header">
        <img src="/invoice-print-header-hrv.svg"/>
      </div>
      <div class="page-content">
        <NetworkUserCalculationPrintFooter/>
        <NetworkUserInvoicePrintFooter Invoice="@context.Invoice"/>
      </div>
      <div class="page-footer">
        <img src="/invoice-print-footer-hrv.svg"/>
      </div>
    </div>
  </Found>
</Loading>

@code {

  [Parameter]
  public CalculatedNetworkUserInvoiceModel? CalculatedInvoice { get; set; }

  [Parameter]
  public string? Id { get; set; }

}
