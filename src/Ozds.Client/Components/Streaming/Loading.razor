@namespace Ozds.Client.Components.Streaming

@attribute [StreamRendering]

@typeparam T where T : notnull
@using Ozds.Business.Activation.Agnostic
@using Ozds.Business.Models.Abstractions
@using Ozds.Business.Queries.Agnostic
@using Ozds.Client.State
@using Microsoft.Extensions.DependencyInjection

@*
   TODO: indstead of the reload hack preserve height and
   add a loading indicator until the task is done
*@

@if (_state.State is LoadingState.Loading)
{
  if (Progress is not null)
  {
    @Progress
    return;
  }

  <Progress/>
  return;
}

@if (_state.State is LoadingState.Error)
{
  if (Error is not null)
  {
    @Error(_state.Error!)
    return;
  }

  <Error>@_state.Error</Error>
  return;
}

@if (_state.State is LoadingState.Unfound)
{
  if (NotFound is not null)
  {
    @NotFound
    return;
  }

  <NotFound/>
  return;
}

@if (_state.State is LoadingState.Created)
{
  if (Created is not null)
  {
    @Created(_state.Value!)
    return;
  }


  <Serialized Value="@_state.Value"/>
  return;
}

@if (Found is not null)
{
  @Found(_state.Value!)
  return;
}

<Serialized Value="@_state.Value"/>
