<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <OutputType>Library</OutputType>
  </PropertyGroup>

  <PropertyGroup>
    <DinkToPdfVersion>1.0.8</DinkToPdfVersion>
    <LibwkhtmltoxVersion>0.12.4</LibwkhtmltoxVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="DinkToPdf" Version="$(DinkToPdfVersion)" />
  </ItemGroup>

  <!--
  <PropertyGroup>
    <NativeDownloadBaseUrl>https://github.com/rdvojmoc/DinkToPdf/raw/refs/tags/v$(DinkToPdfVersion)/v$(LibwkhtmltoxVersion)</NativeDownloadBaseUrl>
    <NativeAssetsDir>$(ProjectDir)runtimes</NativeAssetsDir>
  </PropertyGroup>

  <ItemGroup>
    <NativeLib Include="win-x86">
      <Rid>win-x86</Rid>
      <Folder>win-x86</Folder>
      <Arch>32%2520bit</Arch>
      <File>libwkhtmltox.dll</File>
    </NativeLib>
    <NativeLib Include="win-x64">
      <Rid>win-x64</Rid>
      <Folder>win-x64</Folder>
      <Arch>64%2520bit</Arch>
      <File>libwkhtmltox.dll</File>
    </NativeLib>
    <NativeLib Include="linux-x86">
      <Rid>linux-x86</Rid>
      <Folder>linux-x86</Folder>
      <Arch>32%2520bit</Arch>
      <File>libwkhtmltox.so</File>
    </NativeLib>
    <NativeLib Include="linux-x64">
      <Rid>linux-x64</Rid>
      <Folder>linux-x64</Folder>
      <Arch>64%2520bit</Arch>
      <File>libwkhtmltox.so</File>
    </NativeLib>
    <NativeLib Include="osx-x64">
      <Rid>osx-x64</Rid>
      <Folder>osx-x64</Folder>
      <Arch>64%2520bit</Arch>
      <File>libwkhtmltox.dylib</File>
    </NativeLib>
  </ItemGroup>

  <Target Name="FetchNativeLibraries" AfterTargets="Compile">
    <ItemGroup>
      <NativeLibToDownload Include="@(NativeLib)">
        <DestinationDir>$(NativeAssetsDir)/%(Folder)/native</DestinationDir>
        <Destination>$(NativeAssetsDir)/%(Folder)/native/%(File)</Destination>
        <Url>$(NativeDownloadBaseUrl)/%(Arch)/%(File)</Url>
      </NativeLibToDownload>
    </ItemGroup>

    <PropertyGroup>
      <DownloadCommandTemplateWindows>
        powershell -Command "if (!(Test-Path '{destination}')) { New-Item -ItemType Directory -Force -Path '{destDir}'; Invoke-WebRequest -Uri '{url}' -OutFile '{destination}' }"
      </DownloadCommandTemplateWindows>
      <DownloadCommandTemplateNonWindows>
        if [ ! -f '{destination}' ]; then mkdir -p '{destDir}' &amp;&amp; curl -Lso '{destination}' '{url}'; fi
      </DownloadCommandTemplateNonWindows>
    </PropertyGroup>

    <Message
      Text="Downloading native library: %(NativeLibToDownload.Destination)"
      Importance="high" />

    <Exec Condition="'$(OS)'=='Windows_NT'"
          Command="$([System.String]::Copy($(DownloadCommandTemplateWindows))
                     .Replace('{destination}', '%(NativeLibToDownload.Destination)')
                     .Replace('{destDir}', '%(NativeLibToDownload.DestinationDir)')
                     .Replace('{url}', '%(NativeLibToDownload.Url)'))" />

    <Exec Condition="'$(OS)'!='Windows_NT'"
          Command="$([System.String]::Copy($(DownloadCommandTemplateNonWindows))
                     .Replace('{destination}', '%(NativeLibToDownload.Destination)')
                     .Replace('{destDir}', '%(NativeLibToDownload.DestinationDir)')
                     .Replace('{url}', '%(NativeLibToDownload.Url)'))" />
  </Target>

  <ItemGroup>
    <Content Include="runtimes\**\native\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <Target Name="CopyNativeAssetsToOutput" AfterTargets="Build">
    <ItemGroup>
      <NativeAssets
        Include="$(ProjectDir)runtimes\**\native\*.*" />
    </ItemGroup>
    <Copy
      SourceFiles="@(NativeAssets)"
      DestinationFolder="$(OutputPath)"
      SkipUnchangedFiles="true" />
  </Target>
  -->
</Project>
