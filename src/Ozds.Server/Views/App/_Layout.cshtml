@using Microsoft.AspNetCore.Components.Web
@using RenderMode = Microsoft.AspNetCore.Mvc.Rendering.RenderMode
@using Ozds.Server.Controllers
@using Ozds.Server.ViewModels

@model AppViewModel

<!DOCTYPE html>

<html>
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  @if (Model.Culture is { } culture)
  {
    <base href="/app/@(culture.TwoLetterISOLanguageName)/"/>
  }
  else
  {
    <base href="/app/@(AppController.LocalStorageCulture)/"/>
  }

  <!-- NOTE: we put all css and fonts here because Blazor doesn't handle assets like this well -->
  <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet"/>
  <link href="/_content/MudBlazor/MudBlazor.min.css" rel="stylesheet"/>
  <link href="/_content/MudBlazor.ThemeManager/MudBlazorThemeManager.css" rel="stylesheet"/>
  <link rel="icon" type="image/png" href="/favicon.png">
  <!-- TODO: check that it actually uses the css because we have a specific loading situation -->
  <!--
  <link href="/_content/Blazor-ApexCharts/css/apexcharts.css" rel=stylesheet />
  -->

  @(await Html.RenderComponentAsync<HeadOutlet>(RenderMode.Server))
</head>

<body>
@RenderBody()

<!-- NOTE: we put all scripts here because Blazor doesn't handle assets like this well -->
<script src="/_framework/blazor.server.js"></script>
<!-- TODO: check streaming options with .NET 9 -->
<!-- <script src="/_framework/blazor.web.js" suppress-error="BL9992"></script> -->
<script src="/_content/MudBlazor/MudBlazor.min.js"></script>
<!-- NOTE: https://github.com/apexcharts/Blazor-ApexCharts says it should be imported -->
<!--
<script src="/_content/Blazor-ApexCharts/js/blazor-apexcharts.js"></script>
<script src="/_content/Blazor-ApexCharts/js/apexcharts.esm.js"></script>
-->
</body>
</html>
