begin transaction;

select
  timestamp,
  interval,
  meter_id,
  measurement_location_id,
  count,
  quarter_hour_count,
  derived_active_power_total_import_t0_avg_w
from
  abb_b2x_aggregates;

with
  value43 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p43_timestamp'::timestamptz,
:'p43_interval'::interval_entity,
:'p43_meter_id',
:'p43_measurement_location_id',
:'p43_count',
:'p43_quarter_hour_count',
:'p43_active_energy_l1_export_t0_max_wh',
:'p43_active_energy_l1_export_t0_min_wh',
:'p43_active_energy_l1_import_t0_max_wh',
:'p43_active_energy_l1_import_t0_min_wh',
:'p43_active_energy_l2_export_t0_max_wh',
:'p43_active_energy_l2_export_t0_min_wh',
:'p43_active_energy_l2_import_t0_max_wh',
:'p43_active_energy_l2_import_t0_min_wh',
:'p43_active_energy_l3_export_t0_max_wh',
:'p43_active_energy_l3_export_t0_min_wh',
:'p43_active_energy_l3_import_t0_max_wh',
:'p43_active_energy_l3_import_t0_min_wh',
:'p43_active_energy_total_export_t0_max_wh',
:'p43_active_energy_total_export_t0_min_wh',
:'p43_active_energy_total_import_t0_max_wh',
:'p43_active_energy_total_import_t0_min_wh',
:'p43_active_energy_total_import_t1_max_wh',
:'p43_active_energy_total_import_t1_min_wh',
:'p43_active_energy_total_import_t2_max_wh',
:'p43_active_energy_total_import_t2_min_wh',
:'p43_active_power_l1_net_t0_avg_w',
:'p43_active_power_l1_net_t0_max_w',
:'p43_active_power_l1_net_t0_max_timestamp',
:'p43_active_power_l1_net_t0_min_w',
:'p43_active_power_l1_net_t0_min_timestamp',
:'p43_active_power_l2_net_t0_avg_w',
:'p43_active_power_l2_net_t0_max_w',
:'p43_active_power_l2_net_t0_max_timestamp',
:'p43_active_power_l2_net_t0_min_w',
:'p43_active_power_l2_net_t0_min_timestamp',
:'p43_active_power_l3_net_t0_avg_w',
:'p43_active_power_l3_net_t0_max_w',
:'p43_active_power_l3_net_t0_max_timestamp',
:'p43_active_power_l3_net_t0_min_w',
:'p43_active_power_l3_net_t0_min_timestamp',
:'p43_current_l1_any_t0_avg_a',
:'p43_current_l1_any_t0_max_a',
:'p43_current_l1_any_t0_max_timestamp',
:'p43_current_l1_any_t0_min_a',
:'p43_current_l1_any_t0_min_timestamp',
:'p43_current_l2_any_t0_avg_a',
:'p43_current_l2_any_t0_max_a',
:'p43_current_l2_any_t0_max_timestamp',
:'p43_current_l2_any_t0_min_a',
:'p43_current_l2_any_t0_min_timestamp',
:'p43_current_l3_any_t0_avg_a',
:'p43_current_l3_any_t0_max_a',
:'p43_current_l3_any_t0_max_timestamp',
:'p43_current_l3_any_t0_min_a',
:'p43_current_l3_any_t0_min_timestamp',
:'p43_derived_active_power_l1_export_t0_avg_w',
:'p43_derived_active_power_l1_export_t0_max_w',
:'p43_derived_active_power_l1_export_t0_max_timestamp',
:'p43_derived_active_power_l1_export_t0_min_w',
:'p43_derived_active_power_l1_export_t0_min_timestamp',
:'p43_derived_active_power_l1_import_t0_avg_w',
:'p43_derived_active_power_l1_import_t0_max_w',
:'p43_derived_active_power_l1_import_t0_max_timestamp',
:'p43_derived_active_power_l1_import_t0_min_w',
:'p43_derived_active_power_l1_import_t0_min_timestamp',
:'p43_derived_active_power_l2_export_t0_avg_w',
:'p43_derived_active_power_l2_export_t0_max_w',
:'p43_derived_active_power_l2_export_t0_max_timestamp',
:'p43_derived_active_power_l2_export_t0_min_w',
:'p43_derived_active_power_l2_export_t0_min_timestamp',
:'p43_derived_active_power_l2_import_t0_avg_w',
:'p43_derived_active_power_l2_import_t0_max_w',
:'p43_derived_active_power_l2_import_t0_max_timestamp',
:'p43_derived_active_power_l2_import_t0_min_w',
:'p43_derived_active_power_l2_import_t0_min_timestamp',
:'p43_derived_active_power_l3_export_t0_avg_w',
:'p43_derived_active_power_l3_export_t0_max_w',
:'p43_derived_active_power_l3_export_t0_max_timestamp',
:'p43_derived_active_power_l3_export_t0_min_w',
:'p43_derived_active_power_l3_export_t0_min_timestamp',
:'p43_derived_active_power_l3_import_t0_avg_w',
:'p43_derived_active_power_l3_import_t0_max_w',
:'p43_derived_active_power_l3_import_t0_max_timestamp',
:'p43_derived_active_power_l3_import_t0_min_w',
:'p43_derived_active_power_l3_import_t0_min_timestamp',
:'p43_derived_active_power_total_export_t0_avg_w',
:'p43_derived_active_power_total_export_t0_max_w',
:'p43_derived_active_power_total_export_t0_max_timestamp',
:'p43_derived_active_power_total_export_t0_min_w',
:'p43_derived_active_power_total_export_t0_min_timestamp',
:'p43_derived_active_power_total_import_t0_avg_w',
:'p43_derived_active_power_total_import_t0_max_w',
:'p43_derived_active_power_total_import_t0_max_timestamp',
:'p43_derived_active_power_total_import_t0_min_w',
:'p43_derived_active_power_total_import_t0_min_timestamp',
:'p43_derived_active_power_total_import_t1_avg_w',
:'p43_derived_active_power_total_import_t1_max_w',
:'p43_derived_active_power_total_import_t1_max_timestamp',
:'p43_derived_active_power_total_import_t1_min_w',
:'p43_derived_active_power_total_import_t1_min_timestamp',
:'p43_derived_active_power_total_import_t2_avg_w',
:'p43_derived_active_power_total_import_t2_max_w',
:'p43_derived_active_power_total_import_t2_max_timestamp',
:'p43_derived_active_power_total_import_t2_min_w',
:'p43_derived_active_power_total_import_t2_min_timestamp',
:'p43_derived_reactive_power_l1_export_t0_avg_var',
:'p43_derived_reactive_power_l1_export_t0_max_var',
:'p43_derived_reactive_power_l1_export_t0_max_timestamp',
:'p43_derived_reactive_power_l1_export_t0_min_var',
:'p43_derived_reactive_power_l1_export_t0_min_timestamp',
:'p43_derived_reactive_power_l1_import_t0_avg_var',
:'p43_derived_reactive_power_l1_import_t0_max_var',
:'p43_derived_reactive_power_l1_import_t0_max_timestamp',
:'p43_derived_reactive_power_l1_import_t0_min_var',
:'p43_derived_reactive_power_l1_import_t0_min_timestamp',
:'p43_derived_reactive_power_l2_export_t0_avg_var',
:'p43_derived_reactive_power_l2_export_t0_max_var',
:'p43_derived_reactive_power_l2_export_t0_max_timestamp',
:'p43_derived_reactive_power_l2_export_t0_min_var',
:'p43_derived_reactive_power_l2_export_t0_min_timestamp',
:'p43_derived_reactive_power_l2_import_t0_avg_var',
:'p43_derived_reactive_power_l2_import_t0_max_var',
:'p43_derived_reactive_power_l2_import_t0_max_timestamp',
:'p43_derived_reactive_power_l2_import_t0_min_var',
:'p43_derived_reactive_power_l2_import_t0_min_timestamp',
:'p43_derived_reactive_power_l3_export_t0_avg_var',
:'p43_derived_reactive_power_l3_export_t0_max_var',
:'p43_derived_reactive_power_l3_export_t0_max_timestamp',
:'p43_derived_reactive_power_l3_export_t0_min_var',
:'p43_derived_reactive_power_l3_export_t0_min_timestamp',
:'p43_derived_reactive_power_l3_import_t0_avg_var',
:'p43_derived_reactive_power_l3_import_t0_max_var',
:'p43_derived_reactive_power_l3_import_t0_max_timestamp',
:'p43_derived_reactive_power_l3_import_t0_min_var',
:'p43_derived_reactive_power_l3_import_t0_min_timestamp',
:'p43_derived_reactive_power_total_export_t0_avg_var',
:'p43_derived_reactive_power_total_export_t0_max_var',
:'p43_derived_reactive_power_total_export_t0_max_timestamp',
:'p43_derived_reactive_power_total_export_t0_min_var',
:'p43_derived_reactive_power_total_export_t0_min_timestamp',
:'p43_derived_reactive_power_total_import_t0_avg_var',
:'p43_derived_reactive_power_total_import_t0_max_var',
:'p43_derived_reactive_power_total_import_t0_max_timestamp',
:'p43_derived_reactive_power_total_import_t0_min_var',
:'p43_derived_reactive_power_total_import_t0_min_timestamp',
:'p43_reactive_energy_l1_export_t0_max_varh',
:'p43_reactive_energy_l1_export_t0_min_varh',
:'p43_reactive_energy_l1_import_t0_max_varh',
:'p43_reactive_energy_l1_import_t0_min_varh',
:'p43_reactive_energy_l2_export_t0_max_varh',
:'p43_reactive_energy_l2_export_t0_min_varh',
:'p43_reactive_energy_l2_import_t0_max_varh',
:'p43_reactive_energy_l2_import_t0_min_varh',
:'p43_reactive_energy_l3_export_t0_max_varh',
:'p43_reactive_energy_l3_export_t0_min_varh',
:'p43_reactive_energy_l3_import_t0_max_varh',
:'p43_reactive_energy_l3_import_t0_min_varh',
:'p43_reactive_energy_total_export_t0_max_varh',
:'p43_reactive_energy_total_export_t0_min_varh',
:'p43_reactive_energy_total_import_t0_max_varh',
:'p43_reactive_energy_total_import_t0_min_varh',
:'p43_reactive_power_l1_net_t0_avg_var',
:'p43_reactive_power_l1_net_t0_max_var',
:'p43_reactive_power_l1_net_t0_max_timestamp',
:'p43_reactive_power_l1_net_t0_min_var',
:'p43_reactive_power_l1_net_t0_min_timestamp',
:'p43_reactive_power_l2_net_t0_avg_var',
:'p43_reactive_power_l2_net_t0_max_var',
:'p43_reactive_power_l2_net_t0_max_timestamp',
:'p43_reactive_power_l2_net_t0_min_var',
:'p43_reactive_power_l2_net_t0_min_timestamp',
:'p43_reactive_power_l3_net_t0_avg_var',
:'p43_reactive_power_l3_net_t0_max_var',
:'p43_reactive_power_l3_net_t0_max_timestamp',
:'p43_reactive_power_l3_net_t0_min_var',
:'p43_reactive_power_l3_net_t0_min_timestamp',
:'p43_voltage_l1_any_t0_avg_v',
:'p43_voltage_l1_any_t0_max_v',
:'p43_voltage_l1_any_t0_max_timestamp',
:'p43_voltage_l1_any_t0_min_v',
:'p43_voltage_l1_any_t0_min_timestamp',
:'p43_voltage_l2_any_t0_avg_v',
:'p43_voltage_l2_any_t0_max_v',
:'p43_voltage_l2_any_t0_max_timestamp',
:'p43_voltage_l2_any_t0_min_v',
:'p43_voltage_l2_any_t0_min_timestamp',
:'p43_voltage_l3_any_t0_avg_v',
:'p43_voltage_l3_any_t0_max_v',
:'p43_voltage_l3_any_t0_max_timestamp',
:'p43_voltage_l3_any_t0_min_v',
:'p43_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w,
        EXCLUDED.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then EXCLUDED.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w,
        EXCLUDED.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then EXCLUDED.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w,
        EXCLUDED.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then EXCLUDED.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w,
        EXCLUDED.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then EXCLUDED.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w,
        EXCLUDED.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then EXCLUDED.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w,
        EXCLUDED.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then EXCLUDED.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w,
        EXCLUDED.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then EXCLUDED.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w,
        EXCLUDED.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then EXCLUDED.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w,
        EXCLUDED.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then EXCLUDED.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w,
        EXCLUDED.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then EXCLUDED.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w,
        EXCLUDED.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then EXCLUDED.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w,
        EXCLUDED.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then EXCLUDED.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w,
        EXCLUDED.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then EXCLUDED.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w,
        EXCLUDED.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then EXCLUDED.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w,
        EXCLUDED.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then EXCLUDED.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w,
        EXCLUDED.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then EXCLUDED.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t1_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t1_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w,
        EXCLUDED.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then EXCLUDED.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w,
        EXCLUDED.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then EXCLUDED.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t2_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t2_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w,
        EXCLUDED.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then EXCLUDED.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w,
        EXCLUDED.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then EXCLUDED.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then EXCLUDED.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then EXCLUDED.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then EXCLUDED.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then EXCLUDED.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then EXCLUDED.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then EXCLUDED.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then EXCLUDED.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then EXCLUDED.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then EXCLUDED.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then EXCLUDED.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then EXCLUDED.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then EXCLUDED.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var,
        EXCLUDED.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then EXCLUDED.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var,
        EXCLUDED.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then EXCLUDED.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var,
        EXCLUDED.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then EXCLUDED.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var,
        EXCLUDED.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then EXCLUDED.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  value133 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p133_timestamp'::timestamptz,
:'p133_interval'::interval_entity,
:'p133_meter_id',
:'p133_measurement_location_id',
:'p133_count',
:'p133_quarter_hour_count',
:'p133_active_energy_l1_export_t0_max_wh',
:'p133_active_energy_l1_export_t0_min_wh',
:'p133_active_energy_l1_import_t0_max_wh',
:'p133_active_energy_l1_import_t0_min_wh',
:'p133_active_energy_l2_export_t0_max_wh',
:'p133_active_energy_l2_export_t0_min_wh',
:'p133_active_energy_l2_import_t0_max_wh',
:'p133_active_energy_l2_import_t0_min_wh',
:'p133_active_energy_l3_export_t0_max_wh',
:'p133_active_energy_l3_export_t0_min_wh',
:'p133_active_energy_l3_import_t0_max_wh',
:'p133_active_energy_l3_import_t0_min_wh',
:'p133_active_energy_total_export_t0_max_wh',
:'p133_active_energy_total_export_t0_min_wh',
:'p133_active_energy_total_import_t0_max_wh',
:'p133_active_energy_total_import_t0_min_wh',
:'p133_active_energy_total_import_t1_max_wh',
:'p133_active_energy_total_import_t1_min_wh',
:'p133_active_energy_total_import_t2_max_wh',
:'p133_active_energy_total_import_t2_min_wh',
:'p133_active_power_l1_net_t0_avg_w',
:'p133_active_power_l1_net_t0_max_w',
:'p133_active_power_l1_net_t0_max_timestamp',
:'p133_active_power_l1_net_t0_min_w',
:'p133_active_power_l1_net_t0_min_timestamp',
:'p133_active_power_l2_net_t0_avg_w',
:'p133_active_power_l2_net_t0_max_w',
:'p133_active_power_l2_net_t0_max_timestamp',
:'p133_active_power_l2_net_t0_min_w',
:'p133_active_power_l2_net_t0_min_timestamp',
:'p133_active_power_l3_net_t0_avg_w',
:'p133_active_power_l3_net_t0_max_w',
:'p133_active_power_l3_net_t0_max_timestamp',
:'p133_active_power_l3_net_t0_min_w',
:'p133_active_power_l3_net_t0_min_timestamp',
:'p133_current_l1_any_t0_avg_a',
:'p133_current_l1_any_t0_max_a',
:'p133_current_l1_any_t0_max_timestamp',
:'p133_current_l1_any_t0_min_a',
:'p133_current_l1_any_t0_min_timestamp',
:'p133_current_l2_any_t0_avg_a',
:'p133_current_l2_any_t0_max_a',
:'p133_current_l2_any_t0_max_timestamp',
:'p133_current_l2_any_t0_min_a',
:'p133_current_l2_any_t0_min_timestamp',
:'p133_current_l3_any_t0_avg_a',
:'p133_current_l3_any_t0_max_a',
:'p133_current_l3_any_t0_max_timestamp',
:'p133_current_l3_any_t0_min_a',
:'p133_current_l3_any_t0_min_timestamp',
:'p133_derived_active_power_l1_export_t0_avg_w',
:'p133_derived_active_power_l1_export_t0_max_w',
:'p133_derived_active_power_l1_export_t0_max_timestamp',
:'p133_derived_active_power_l1_export_t0_min_w',
:'p133_derived_active_power_l1_export_t0_min_timestamp',
:'p133_derived_active_power_l1_import_t0_avg_w',
:'p133_derived_active_power_l1_import_t0_max_w',
:'p133_derived_active_power_l1_import_t0_max_timestamp',
:'p133_derived_active_power_l1_import_t0_min_w',
:'p133_derived_active_power_l1_import_t0_min_timestamp',
:'p133_derived_active_power_l2_export_t0_avg_w',
:'p133_derived_active_power_l2_export_t0_max_w',
:'p133_derived_active_power_l2_export_t0_max_timestamp',
:'p133_derived_active_power_l2_export_t0_min_w',
:'p133_derived_active_power_l2_export_t0_min_timestamp',
:'p133_derived_active_power_l2_import_t0_avg_w',
:'p133_derived_active_power_l2_import_t0_max_w',
:'p133_derived_active_power_l2_import_t0_max_timestamp',
:'p133_derived_active_power_l2_import_t0_min_w',
:'p133_derived_active_power_l2_import_t0_min_timestamp',
:'p133_derived_active_power_l3_export_t0_avg_w',
:'p133_derived_active_power_l3_export_t0_max_w',
:'p133_derived_active_power_l3_export_t0_max_timestamp',
:'p133_derived_active_power_l3_export_t0_min_w',
:'p133_derived_active_power_l3_export_t0_min_timestamp',
:'p133_derived_active_power_l3_import_t0_avg_w',
:'p133_derived_active_power_l3_import_t0_max_w',
:'p133_derived_active_power_l3_import_t0_max_timestamp',
:'p133_derived_active_power_l3_import_t0_min_w',
:'p133_derived_active_power_l3_import_t0_min_timestamp',
:'p133_derived_active_power_total_export_t0_avg_w',
:'p133_derived_active_power_total_export_t0_max_w',
:'p133_derived_active_power_total_export_t0_max_timestamp',
:'p133_derived_active_power_total_export_t0_min_w',
:'p133_derived_active_power_total_export_t0_min_timestamp',
:'p133_derived_active_power_total_import_t0_avg_w',
:'p133_derived_active_power_total_import_t0_max_w',
:'p133_derived_active_power_total_import_t0_max_timestamp',
:'p133_derived_active_power_total_import_t0_min_w',
:'p133_derived_active_power_total_import_t0_min_timestamp',
:'p133_derived_active_power_total_import_t1_avg_w',
:'p133_derived_active_power_total_import_t1_max_w',
:'p133_derived_active_power_total_import_t1_max_timestamp',
:'p133_derived_active_power_total_import_t1_min_w',
:'p133_derived_active_power_total_import_t1_min_timestamp',
:'p133_derived_active_power_total_import_t2_avg_w',
:'p133_derived_active_power_total_import_t2_max_w',
:'p133_derived_active_power_total_import_t2_max_timestamp',
:'p133_derived_active_power_total_import_t2_min_w',
:'p133_derived_active_power_total_import_t2_min_timestamp',
:'p133_derived_reactive_power_l1_export_t0_avg_var',
:'p133_derived_reactive_power_l1_export_t0_max_var',
:'p133_derived_reactive_power_l1_export_t0_max_timestamp',
:'p133_derived_reactive_power_l1_export_t0_min_var',
:'p133_derived_reactive_power_l1_export_t0_min_timestamp',
:'p133_derived_reactive_power_l1_import_t0_avg_var',
:'p133_derived_reactive_power_l1_import_t0_max_var',
:'p133_derived_reactive_power_l1_import_t0_max_timestamp',
:'p133_derived_reactive_power_l1_import_t0_min_var',
:'p133_derived_reactive_power_l1_import_t0_min_timestamp',
:'p133_derived_reactive_power_l2_export_t0_avg_var',
:'p133_derived_reactive_power_l2_export_t0_max_var',
:'p133_derived_reactive_power_l2_export_t0_max_timestamp',
:'p133_derived_reactive_power_l2_export_t0_min_var',
:'p133_derived_reactive_power_l2_export_t0_min_timestamp',
:'p133_derived_reactive_power_l2_import_t0_avg_var',
:'p133_derived_reactive_power_l2_import_t0_max_var',
:'p133_derived_reactive_power_l2_import_t0_max_timestamp',
:'p133_derived_reactive_power_l2_import_t0_min_var',
:'p133_derived_reactive_power_l2_import_t0_min_timestamp',
:'p133_derived_reactive_power_l3_export_t0_avg_var',
:'p133_derived_reactive_power_l3_export_t0_max_var',
:'p133_derived_reactive_power_l3_export_t0_max_timestamp',
:'p133_derived_reactive_power_l3_export_t0_min_var',
:'p133_derived_reactive_power_l3_export_t0_min_timestamp',
:'p133_derived_reactive_power_l3_import_t0_avg_var',
:'p133_derived_reactive_power_l3_import_t0_max_var',
:'p133_derived_reactive_power_l3_import_t0_max_timestamp',
:'p133_derived_reactive_power_l3_import_t0_min_var',
:'p133_derived_reactive_power_l3_import_t0_min_timestamp',
:'p133_derived_reactive_power_total_export_t0_avg_var',
:'p133_derived_reactive_power_total_export_t0_max_var',
:'p133_derived_reactive_power_total_export_t0_max_timestamp',
:'p133_derived_reactive_power_total_export_t0_min_var',
:'p133_derived_reactive_power_total_export_t0_min_timestamp',
:'p133_derived_reactive_power_total_import_t0_avg_var',
:'p133_derived_reactive_power_total_import_t0_max_var',
:'p133_derived_reactive_power_total_import_t0_max_timestamp',
:'p133_derived_reactive_power_total_import_t0_min_var',
:'p133_derived_reactive_power_total_import_t0_min_timestamp',
:'p133_reactive_energy_l1_export_t0_max_varh',
:'p133_reactive_energy_l1_export_t0_min_varh',
:'p133_reactive_energy_l1_import_t0_max_varh',
:'p133_reactive_energy_l1_import_t0_min_varh',
:'p133_reactive_energy_l2_export_t0_max_varh',
:'p133_reactive_energy_l2_export_t0_min_varh',
:'p133_reactive_energy_l2_import_t0_max_varh',
:'p133_reactive_energy_l2_import_t0_min_varh',
:'p133_reactive_energy_l3_export_t0_max_varh',
:'p133_reactive_energy_l3_export_t0_min_varh',
:'p133_reactive_energy_l3_import_t0_max_varh',
:'p133_reactive_energy_l3_import_t0_min_varh',
:'p133_reactive_energy_total_export_t0_max_varh',
:'p133_reactive_energy_total_export_t0_min_varh',
:'p133_reactive_energy_total_import_t0_max_varh',
:'p133_reactive_energy_total_import_t0_min_varh',
:'p133_reactive_power_l1_net_t0_avg_var',
:'p133_reactive_power_l1_net_t0_max_var',
:'p133_reactive_power_l1_net_t0_max_timestamp',
:'p133_reactive_power_l1_net_t0_min_var',
:'p133_reactive_power_l1_net_t0_min_timestamp',
:'p133_reactive_power_l2_net_t0_avg_var',
:'p133_reactive_power_l2_net_t0_max_var',
:'p133_reactive_power_l2_net_t0_max_timestamp',
:'p133_reactive_power_l2_net_t0_min_var',
:'p133_reactive_power_l2_net_t0_min_timestamp',
:'p133_reactive_power_l3_net_t0_avg_var',
:'p133_reactive_power_l3_net_t0_max_var',
:'p133_reactive_power_l3_net_t0_max_timestamp',
:'p133_reactive_power_l3_net_t0_min_var',
:'p133_reactive_power_l3_net_t0_min_timestamp',
:'p133_voltage_l1_any_t0_avg_v',
:'p133_voltage_l1_any_t0_max_v',
:'p133_voltage_l1_any_t0_max_timestamp',
:'p133_voltage_l1_any_t0_min_v',
:'p133_voltage_l1_any_t0_min_timestamp',
:'p133_voltage_l2_any_t0_avg_v',
:'p133_voltage_l2_any_t0_max_v',
:'p133_voltage_l2_any_t0_max_timestamp',
:'p133_voltage_l2_any_t0_min_v',
:'p133_voltage_l2_any_t0_min_timestamp',
:'p133_voltage_l3_any_t0_avg_v',
:'p133_voltage_l3_any_t0_max_v',
:'p133_voltage_l3_any_t0_max_timestamp',
:'p133_voltage_l3_any_t0_min_v',
:'p133_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w,
        EXCLUDED.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then EXCLUDED.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w,
        EXCLUDED.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then EXCLUDED.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w,
        EXCLUDED.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then EXCLUDED.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w,
        EXCLUDED.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then EXCLUDED.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w,
        EXCLUDED.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then EXCLUDED.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w,
        EXCLUDED.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then EXCLUDED.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w,
        EXCLUDED.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then EXCLUDED.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w,
        EXCLUDED.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then EXCLUDED.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w,
        EXCLUDED.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then EXCLUDED.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w,
        EXCLUDED.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then EXCLUDED.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w,
        EXCLUDED.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then EXCLUDED.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w,
        EXCLUDED.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then EXCLUDED.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w,
        EXCLUDED.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then EXCLUDED.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w,
        EXCLUDED.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then EXCLUDED.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w,
        EXCLUDED.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then EXCLUDED.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w,
        EXCLUDED.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then EXCLUDED.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t1_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t1_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w,
        EXCLUDED.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then EXCLUDED.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w,
        EXCLUDED.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then EXCLUDED.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t2_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t2_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w,
        EXCLUDED.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then EXCLUDED.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w,
        EXCLUDED.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then EXCLUDED.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then EXCLUDED.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then EXCLUDED.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then EXCLUDED.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then EXCLUDED.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then EXCLUDED.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then EXCLUDED.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then EXCLUDED.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then EXCLUDED.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then EXCLUDED.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then EXCLUDED.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then EXCLUDED.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then EXCLUDED.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var,
        EXCLUDED.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then EXCLUDED.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var,
        EXCLUDED.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then EXCLUDED.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var,
        EXCLUDED.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then EXCLUDED.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var,
        EXCLUDED.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then EXCLUDED.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  value223 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p223_timestamp'::timestamptz,
:'p223_interval'::interval_entity,
:'p223_meter_id',
:'p223_measurement_location_id',
:'p223_count',
:'p223_quarter_hour_count',
:'p223_active_energy_l1_export_t0_max_wh',
:'p223_active_energy_l1_export_t0_min_wh',
:'p223_active_energy_l1_import_t0_max_wh',
:'p223_active_energy_l1_import_t0_min_wh',
:'p223_active_energy_l2_export_t0_max_wh',
:'p223_active_energy_l2_export_t0_min_wh',
:'p223_active_energy_l2_import_t0_max_wh',
:'p223_active_energy_l2_import_t0_min_wh',
:'p223_active_energy_l3_export_t0_max_wh',
:'p223_active_energy_l3_export_t0_min_wh',
:'p223_active_energy_l3_import_t0_max_wh',
:'p223_active_energy_l3_import_t0_min_wh',
:'p223_active_energy_total_export_t0_max_wh',
:'p223_active_energy_total_export_t0_min_wh',
:'p223_active_energy_total_import_t0_max_wh',
:'p223_active_energy_total_import_t0_min_wh',
:'p223_active_energy_total_import_t1_max_wh',
:'p223_active_energy_total_import_t1_min_wh',
:'p223_active_energy_total_import_t2_max_wh',
:'p223_active_energy_total_import_t2_min_wh',
:'p223_active_power_l1_net_t0_avg_w',
:'p223_active_power_l1_net_t0_max_w',
:'p223_active_power_l1_net_t0_max_timestamp',
:'p223_active_power_l1_net_t0_min_w',
:'p223_active_power_l1_net_t0_min_timestamp',
:'p223_active_power_l2_net_t0_avg_w',
:'p223_active_power_l2_net_t0_max_w',
:'p223_active_power_l2_net_t0_max_timestamp',
:'p223_active_power_l2_net_t0_min_w',
:'p223_active_power_l2_net_t0_min_timestamp',
:'p223_active_power_l3_net_t0_avg_w',
:'p223_active_power_l3_net_t0_max_w',
:'p223_active_power_l3_net_t0_max_timestamp',
:'p223_active_power_l3_net_t0_min_w',
:'p223_active_power_l3_net_t0_min_timestamp',
:'p223_current_l1_any_t0_avg_a',
:'p223_current_l1_any_t0_max_a',
:'p223_current_l1_any_t0_max_timestamp',
:'p223_current_l1_any_t0_min_a',
:'p223_current_l1_any_t0_min_timestamp',
:'p223_current_l2_any_t0_avg_a',
:'p223_current_l2_any_t0_max_a',
:'p223_current_l2_any_t0_max_timestamp',
:'p223_current_l2_any_t0_min_a',
:'p223_current_l2_any_t0_min_timestamp',
:'p223_current_l3_any_t0_avg_a',
:'p223_current_l3_any_t0_max_a',
:'p223_current_l3_any_t0_max_timestamp',
:'p223_current_l3_any_t0_min_a',
:'p223_current_l3_any_t0_min_timestamp',
:'p223_derived_active_power_l1_export_t0_avg_w',
:'p223_derived_active_power_l1_export_t0_max_w',
:'p223_derived_active_power_l1_export_t0_max_timestamp',
:'p223_derived_active_power_l1_export_t0_min_w',
:'p223_derived_active_power_l1_export_t0_min_timestamp',
:'p223_derived_active_power_l1_import_t0_avg_w',
:'p223_derived_active_power_l1_import_t0_max_w',
:'p223_derived_active_power_l1_import_t0_max_timestamp',
:'p223_derived_active_power_l1_import_t0_min_w',
:'p223_derived_active_power_l1_import_t0_min_timestamp',
:'p223_derived_active_power_l2_export_t0_avg_w',
:'p223_derived_active_power_l2_export_t0_max_w',
:'p223_derived_active_power_l2_export_t0_max_timestamp',
:'p223_derived_active_power_l2_export_t0_min_w',
:'p223_derived_active_power_l2_export_t0_min_timestamp',
:'p223_derived_active_power_l2_import_t0_avg_w',
:'p223_derived_active_power_l2_import_t0_max_w',
:'p223_derived_active_power_l2_import_t0_max_timestamp',
:'p223_derived_active_power_l2_import_t0_min_w',
:'p223_derived_active_power_l2_import_t0_min_timestamp',
:'p223_derived_active_power_l3_export_t0_avg_w',
:'p223_derived_active_power_l3_export_t0_max_w',
:'p223_derived_active_power_l3_export_t0_max_timestamp',
:'p223_derived_active_power_l3_export_t0_min_w',
:'p223_derived_active_power_l3_export_t0_min_timestamp',
:'p223_derived_active_power_l3_import_t0_avg_w',
:'p223_derived_active_power_l3_import_t0_max_w',
:'p223_derived_active_power_l3_import_t0_max_timestamp',
:'p223_derived_active_power_l3_import_t0_min_w',
:'p223_derived_active_power_l3_import_t0_min_timestamp',
:'p223_derived_active_power_total_export_t0_avg_w',
:'p223_derived_active_power_total_export_t0_max_w',
:'p223_derived_active_power_total_export_t0_max_timestamp',
:'p223_derived_active_power_total_export_t0_min_w',
:'p223_derived_active_power_total_export_t0_min_timestamp',
:'p223_derived_active_power_total_import_t0_avg_w',
:'p223_derived_active_power_total_import_t0_max_w',
:'p223_derived_active_power_total_import_t0_max_timestamp',
:'p223_derived_active_power_total_import_t0_min_w',
:'p223_derived_active_power_total_import_t0_min_timestamp',
:'p223_derived_active_power_total_import_t1_avg_w',
:'p223_derived_active_power_total_import_t1_max_w',
:'p223_derived_active_power_total_import_t1_max_timestamp',
:'p223_derived_active_power_total_import_t1_min_w',
:'p223_derived_active_power_total_import_t1_min_timestamp',
:'p223_derived_active_power_total_import_t2_avg_w',
:'p223_derived_active_power_total_import_t2_max_w',
:'p223_derived_active_power_total_import_t2_max_timestamp',
:'p223_derived_active_power_total_import_t2_min_w',
:'p223_derived_active_power_total_import_t2_min_timestamp',
:'p223_derived_reactive_power_l1_export_t0_avg_var',
:'p223_derived_reactive_power_l1_export_t0_max_var',
:'p223_derived_reactive_power_l1_export_t0_max_timestamp',
:'p223_derived_reactive_power_l1_export_t0_min_var',
:'p223_derived_reactive_power_l1_export_t0_min_timestamp',
:'p223_derived_reactive_power_l1_import_t0_avg_var',
:'p223_derived_reactive_power_l1_import_t0_max_var',
:'p223_derived_reactive_power_l1_import_t0_max_timestamp',
:'p223_derived_reactive_power_l1_import_t0_min_var',
:'p223_derived_reactive_power_l1_import_t0_min_timestamp',
:'p223_derived_reactive_power_l2_export_t0_avg_var',
:'p223_derived_reactive_power_l2_export_t0_max_var',
:'p223_derived_reactive_power_l2_export_t0_max_timestamp',
:'p223_derived_reactive_power_l2_export_t0_min_var',
:'p223_derived_reactive_power_l2_export_t0_min_timestamp',
:'p223_derived_reactive_power_l2_import_t0_avg_var',
:'p223_derived_reactive_power_l2_import_t0_max_var',
:'p223_derived_reactive_power_l2_import_t0_max_timestamp',
:'p223_derived_reactive_power_l2_import_t0_min_var',
:'p223_derived_reactive_power_l2_import_t0_min_timestamp',
:'p223_derived_reactive_power_l3_export_t0_avg_var',
:'p223_derived_reactive_power_l3_export_t0_max_var',
:'p223_derived_reactive_power_l3_export_t0_max_timestamp',
:'p223_derived_reactive_power_l3_export_t0_min_var',
:'p223_derived_reactive_power_l3_export_t0_min_timestamp',
:'p223_derived_reactive_power_l3_import_t0_avg_var',
:'p223_derived_reactive_power_l3_import_t0_max_var',
:'p223_derived_reactive_power_l3_import_t0_max_timestamp',
:'p223_derived_reactive_power_l3_import_t0_min_var',
:'p223_derived_reactive_power_l3_import_t0_min_timestamp',
:'p223_derived_reactive_power_total_export_t0_avg_var',
:'p223_derived_reactive_power_total_export_t0_max_var',
:'p223_derived_reactive_power_total_export_t0_max_timestamp',
:'p223_derived_reactive_power_total_export_t0_min_var',
:'p223_derived_reactive_power_total_export_t0_min_timestamp',
:'p223_derived_reactive_power_total_import_t0_avg_var',
:'p223_derived_reactive_power_total_import_t0_max_var',
:'p223_derived_reactive_power_total_import_t0_max_timestamp',
:'p223_derived_reactive_power_total_import_t0_min_var',
:'p223_derived_reactive_power_total_import_t0_min_timestamp',
:'p223_reactive_energy_l1_export_t0_max_varh',
:'p223_reactive_energy_l1_export_t0_min_varh',
:'p223_reactive_energy_l1_import_t0_max_varh',
:'p223_reactive_energy_l1_import_t0_min_varh',
:'p223_reactive_energy_l2_export_t0_max_varh',
:'p223_reactive_energy_l2_export_t0_min_varh',
:'p223_reactive_energy_l2_import_t0_max_varh',
:'p223_reactive_energy_l2_import_t0_min_varh',
:'p223_reactive_energy_l3_export_t0_max_varh',
:'p223_reactive_energy_l3_export_t0_min_varh',
:'p223_reactive_energy_l3_import_t0_max_varh',
:'p223_reactive_energy_l3_import_t0_min_varh',
:'p223_reactive_energy_total_export_t0_max_varh',
:'p223_reactive_energy_total_export_t0_min_varh',
:'p223_reactive_energy_total_import_t0_max_varh',
:'p223_reactive_energy_total_import_t0_min_varh',
:'p223_reactive_power_l1_net_t0_avg_var',
:'p223_reactive_power_l1_net_t0_max_var',
:'p223_reactive_power_l1_net_t0_max_timestamp',
:'p223_reactive_power_l1_net_t0_min_var',
:'p223_reactive_power_l1_net_t0_min_timestamp',
:'p223_reactive_power_l2_net_t0_avg_var',
:'p223_reactive_power_l2_net_t0_max_var',
:'p223_reactive_power_l2_net_t0_max_timestamp',
:'p223_reactive_power_l2_net_t0_min_var',
:'p223_reactive_power_l2_net_t0_min_timestamp',
:'p223_reactive_power_l3_net_t0_avg_var',
:'p223_reactive_power_l3_net_t0_max_var',
:'p223_reactive_power_l3_net_t0_max_timestamp',
:'p223_reactive_power_l3_net_t0_min_var',
:'p223_reactive_power_l3_net_t0_min_timestamp',
:'p223_voltage_l1_any_t0_avg_v',
:'p223_voltage_l1_any_t0_max_v',
:'p223_voltage_l1_any_t0_max_timestamp',
:'p223_voltage_l1_any_t0_min_v',
:'p223_voltage_l1_any_t0_min_timestamp',
:'p223_voltage_l2_any_t0_avg_v',
:'p223_voltage_l2_any_t0_max_v',
:'p223_voltage_l2_any_t0_max_timestamp',
:'p223_voltage_l2_any_t0_min_v',
:'p223_voltage_l2_any_t0_min_timestamp',
:'p223_voltage_l3_any_t0_avg_v',
:'p223_voltage_l3_any_t0_max_v',
:'p223_voltage_l3_any_t0_max_timestamp',
:'p223_voltage_l3_any_t0_min_v',
:'p223_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w,
        EXCLUDED.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then EXCLUDED.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w,
        EXCLUDED.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then EXCLUDED.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w,
        EXCLUDED.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then EXCLUDED.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w,
        EXCLUDED.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then EXCLUDED.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w,
        EXCLUDED.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then EXCLUDED.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w,
        EXCLUDED.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then EXCLUDED.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w,
        EXCLUDED.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then EXCLUDED.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w,
        EXCLUDED.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then EXCLUDED.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w,
        EXCLUDED.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then EXCLUDED.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w,
        EXCLUDED.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then EXCLUDED.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w,
        EXCLUDED.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then EXCLUDED.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w,
        EXCLUDED.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then EXCLUDED.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w,
        EXCLUDED.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then EXCLUDED.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w,
        EXCLUDED.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then EXCLUDED.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w,
        EXCLUDED.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then EXCLUDED.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w,
        EXCLUDED.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then EXCLUDED.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t1_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t1_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w,
        EXCLUDED.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then EXCLUDED.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w,
        EXCLUDED.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then EXCLUDED.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t2_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t2_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w,
        EXCLUDED.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then EXCLUDED.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w,
        EXCLUDED.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then EXCLUDED.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then EXCLUDED.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then EXCLUDED.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then EXCLUDED.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then EXCLUDED.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then EXCLUDED.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then EXCLUDED.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then EXCLUDED.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then EXCLUDED.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then EXCLUDED.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then EXCLUDED.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then EXCLUDED.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then EXCLUDED.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var,
        EXCLUDED.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then EXCLUDED.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var,
        EXCLUDED.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then EXCLUDED.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var,
        EXCLUDED.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then EXCLUDED.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var,
        EXCLUDED.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then EXCLUDED.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  value42 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p42_timestamp'::timestamptz,
:'p42_interval'::interval_entity,
:'p42_meter_id',
:'p42_measurement_location_id',
:'p42_count',
:'p42_quarter_hour_count',
:'p42_active_energy_l1_export_t0_max_wh',
:'p42_active_energy_l1_export_t0_min_wh',
:'p42_active_energy_l1_import_t0_max_wh',
:'p42_active_energy_l1_import_t0_min_wh',
:'p42_active_energy_l2_export_t0_max_wh',
:'p42_active_energy_l2_export_t0_min_wh',
:'p42_active_energy_l2_import_t0_max_wh',
:'p42_active_energy_l2_import_t0_min_wh',
:'p42_active_energy_l3_export_t0_max_wh',
:'p42_active_energy_l3_export_t0_min_wh',
:'p42_active_energy_l3_import_t0_max_wh',
:'p42_active_energy_l3_import_t0_min_wh',
:'p42_active_energy_total_export_t0_max_wh',
:'p42_active_energy_total_export_t0_min_wh',
:'p42_active_energy_total_import_t0_max_wh',
:'p42_active_energy_total_import_t0_min_wh',
:'p42_active_energy_total_import_t1_max_wh',
:'p42_active_energy_total_import_t1_min_wh',
:'p42_active_energy_total_import_t2_max_wh',
:'p42_active_energy_total_import_t2_min_wh',
:'p42_active_power_l1_net_t0_avg_w',
:'p42_active_power_l1_net_t0_max_w',
:'p42_active_power_l1_net_t0_max_timestamp',
:'p42_active_power_l1_net_t0_min_w',
:'p42_active_power_l1_net_t0_min_timestamp',
:'p42_active_power_l2_net_t0_avg_w',
:'p42_active_power_l2_net_t0_max_w',
:'p42_active_power_l2_net_t0_max_timestamp',
:'p42_active_power_l2_net_t0_min_w',
:'p42_active_power_l2_net_t0_min_timestamp',
:'p42_active_power_l3_net_t0_avg_w',
:'p42_active_power_l3_net_t0_max_w',
:'p42_active_power_l3_net_t0_max_timestamp',
:'p42_active_power_l3_net_t0_min_w',
:'p42_active_power_l3_net_t0_min_timestamp',
:'p42_current_l1_any_t0_avg_a',
:'p42_current_l1_any_t0_max_a',
:'p42_current_l1_any_t0_max_timestamp',
:'p42_current_l1_any_t0_min_a',
:'p42_current_l1_any_t0_min_timestamp',
:'p42_current_l2_any_t0_avg_a',
:'p42_current_l2_any_t0_max_a',
:'p42_current_l2_any_t0_max_timestamp',
:'p42_current_l2_any_t0_min_a',
:'p42_current_l2_any_t0_min_timestamp',
:'p42_current_l3_any_t0_avg_a',
:'p42_current_l3_any_t0_max_a',
:'p42_current_l3_any_t0_max_timestamp',
:'p42_current_l3_any_t0_min_a',
:'p42_current_l3_any_t0_min_timestamp',
:'p42_derived_active_power_l1_export_t0_avg_w',
:'p42_derived_active_power_l1_export_t0_max_w',
:'p42_derived_active_power_l1_export_t0_max_timestamp',
:'p42_derived_active_power_l1_export_t0_min_w',
:'p42_derived_active_power_l1_export_t0_min_timestamp',
:'p42_derived_active_power_l1_import_t0_avg_w',
:'p42_derived_active_power_l1_import_t0_max_w',
:'p42_derived_active_power_l1_import_t0_max_timestamp',
:'p42_derived_active_power_l1_import_t0_min_w',
:'p42_derived_active_power_l1_import_t0_min_timestamp',
:'p42_derived_active_power_l2_export_t0_avg_w',
:'p42_derived_active_power_l2_export_t0_max_w',
:'p42_derived_active_power_l2_export_t0_max_timestamp',
:'p42_derived_active_power_l2_export_t0_min_w',
:'p42_derived_active_power_l2_export_t0_min_timestamp',
:'p42_derived_active_power_l2_import_t0_avg_w',
:'p42_derived_active_power_l2_import_t0_max_w',
:'p42_derived_active_power_l2_import_t0_max_timestamp',
:'p42_derived_active_power_l2_import_t0_min_w',
:'p42_derived_active_power_l2_import_t0_min_timestamp',
:'p42_derived_active_power_l3_export_t0_avg_w',
:'p42_derived_active_power_l3_export_t0_max_w',
:'p42_derived_active_power_l3_export_t0_max_timestamp',
:'p42_derived_active_power_l3_export_t0_min_w',
:'p42_derived_active_power_l3_export_t0_min_timestamp',
:'p42_derived_active_power_l3_import_t0_avg_w',
:'p42_derived_active_power_l3_import_t0_max_w',
:'p42_derived_active_power_l3_import_t0_max_timestamp',
:'p42_derived_active_power_l3_import_t0_min_w',
:'p42_derived_active_power_l3_import_t0_min_timestamp',
:'p42_derived_active_power_total_export_t0_avg_w',
:'p42_derived_active_power_total_export_t0_max_w',
:'p42_derived_active_power_total_export_t0_max_timestamp',
:'p42_derived_active_power_total_export_t0_min_w',
:'p42_derived_active_power_total_export_t0_min_timestamp',
:'p42_derived_active_power_total_import_t0_avg_w',
:'p42_derived_active_power_total_import_t0_max_w',
:'p42_derived_active_power_total_import_t0_max_timestamp',
:'p42_derived_active_power_total_import_t0_min_w',
:'p42_derived_active_power_total_import_t0_min_timestamp',
:'p42_derived_active_power_total_import_t1_avg_w',
:'p42_derived_active_power_total_import_t1_max_w',
:'p42_derived_active_power_total_import_t1_max_timestamp',
:'p42_derived_active_power_total_import_t1_min_w',
:'p42_derived_active_power_total_import_t1_min_timestamp',
:'p42_derived_active_power_total_import_t2_avg_w',
:'p42_derived_active_power_total_import_t2_max_w',
:'p42_derived_active_power_total_import_t2_max_timestamp',
:'p42_derived_active_power_total_import_t2_min_w',
:'p42_derived_active_power_total_import_t2_min_timestamp',
:'p42_derived_reactive_power_l1_export_t0_avg_var',
:'p42_derived_reactive_power_l1_export_t0_max_var',
:'p42_derived_reactive_power_l1_export_t0_max_timestamp',
:'p42_derived_reactive_power_l1_export_t0_min_var',
:'p42_derived_reactive_power_l1_export_t0_min_timestamp',
:'p42_derived_reactive_power_l1_import_t0_avg_var',
:'p42_derived_reactive_power_l1_import_t0_max_var',
:'p42_derived_reactive_power_l1_import_t0_max_timestamp',
:'p42_derived_reactive_power_l1_import_t0_min_var',
:'p42_derived_reactive_power_l1_import_t0_min_timestamp',
:'p42_derived_reactive_power_l2_export_t0_avg_var',
:'p42_derived_reactive_power_l2_export_t0_max_var',
:'p42_derived_reactive_power_l2_export_t0_max_timestamp',
:'p42_derived_reactive_power_l2_export_t0_min_var',
:'p42_derived_reactive_power_l2_export_t0_min_timestamp',
:'p42_derived_reactive_power_l2_import_t0_avg_var',
:'p42_derived_reactive_power_l2_import_t0_max_var',
:'p42_derived_reactive_power_l2_import_t0_max_timestamp',
:'p42_derived_reactive_power_l2_import_t0_min_var',
:'p42_derived_reactive_power_l2_import_t0_min_timestamp',
:'p42_derived_reactive_power_l3_export_t0_avg_var',
:'p42_derived_reactive_power_l3_export_t0_max_var',
:'p42_derived_reactive_power_l3_export_t0_max_timestamp',
:'p42_derived_reactive_power_l3_export_t0_min_var',
:'p42_derived_reactive_power_l3_export_t0_min_timestamp',
:'p42_derived_reactive_power_l3_import_t0_avg_var',
:'p42_derived_reactive_power_l3_import_t0_max_var',
:'p42_derived_reactive_power_l3_import_t0_max_timestamp',
:'p42_derived_reactive_power_l3_import_t0_min_var',
:'p42_derived_reactive_power_l3_import_t0_min_timestamp',
:'p42_derived_reactive_power_total_export_t0_avg_var',
:'p42_derived_reactive_power_total_export_t0_max_var',
:'p42_derived_reactive_power_total_export_t0_max_timestamp',
:'p42_derived_reactive_power_total_export_t0_min_var',
:'p42_derived_reactive_power_total_export_t0_min_timestamp',
:'p42_derived_reactive_power_total_import_t0_avg_var',
:'p42_derived_reactive_power_total_import_t0_max_var',
:'p42_derived_reactive_power_total_import_t0_max_timestamp',
:'p42_derived_reactive_power_total_import_t0_min_var',
:'p42_derived_reactive_power_total_import_t0_min_timestamp',
:'p42_reactive_energy_l1_export_t0_max_varh',
:'p42_reactive_energy_l1_export_t0_min_varh',
:'p42_reactive_energy_l1_import_t0_max_varh',
:'p42_reactive_energy_l1_import_t0_min_varh',
:'p42_reactive_energy_l2_export_t0_max_varh',
:'p42_reactive_energy_l2_export_t0_min_varh',
:'p42_reactive_energy_l2_import_t0_max_varh',
:'p42_reactive_energy_l2_import_t0_min_varh',
:'p42_reactive_energy_l3_export_t0_max_varh',
:'p42_reactive_energy_l3_export_t0_min_varh',
:'p42_reactive_energy_l3_import_t0_max_varh',
:'p42_reactive_energy_l3_import_t0_min_varh',
:'p42_reactive_energy_total_export_t0_max_varh',
:'p42_reactive_energy_total_export_t0_min_varh',
:'p42_reactive_energy_total_import_t0_max_varh',
:'p42_reactive_energy_total_import_t0_min_varh',
:'p42_reactive_power_l1_net_t0_avg_var',
:'p42_reactive_power_l1_net_t0_max_var',
:'p42_reactive_power_l1_net_t0_max_timestamp',
:'p42_reactive_power_l1_net_t0_min_var',
:'p42_reactive_power_l1_net_t0_min_timestamp',
:'p42_reactive_power_l2_net_t0_avg_var',
:'p42_reactive_power_l2_net_t0_max_var',
:'p42_reactive_power_l2_net_t0_max_timestamp',
:'p42_reactive_power_l2_net_t0_min_var',
:'p42_reactive_power_l2_net_t0_min_timestamp',
:'p42_reactive_power_l3_net_t0_avg_var',
:'p42_reactive_power_l3_net_t0_max_var',
:'p42_reactive_power_l3_net_t0_max_timestamp',
:'p42_reactive_power_l3_net_t0_min_var',
:'p42_reactive_power_l3_net_t0_min_timestamp',
:'p42_voltage_l1_any_t0_avg_v',
:'p42_voltage_l1_any_t0_max_v',
:'p42_voltage_l1_any_t0_max_timestamp',
:'p42_voltage_l1_any_t0_min_v',
:'p42_voltage_l1_any_t0_min_timestamp',
:'p42_voltage_l2_any_t0_avg_v',
:'p42_voltage_l2_any_t0_max_v',
:'p42_voltage_l2_any_t0_max_timestamp',
:'p42_voltage_l2_any_t0_min_v',
:'p42_voltage_l2_any_t0_min_timestamp',
:'p42_voltage_l3_any_t0_avg_v',
:'p42_voltage_l3_any_t0_max_v',
:'p42_voltage_l3_any_t0_max_timestamp',
:'p42_voltage_l3_any_t0_min_v',
:'p42_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w,
        EXCLUDED.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then EXCLUDED.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w,
        EXCLUDED.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then EXCLUDED.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w,
        EXCLUDED.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then EXCLUDED.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w,
        EXCLUDED.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then EXCLUDED.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w,
        EXCLUDED.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then EXCLUDED.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w,
        EXCLUDED.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then EXCLUDED.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w,
        EXCLUDED.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then EXCLUDED.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w,
        EXCLUDED.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then EXCLUDED.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w,
        EXCLUDED.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then EXCLUDED.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w,
        EXCLUDED.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then EXCLUDED.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w,
        EXCLUDED.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then EXCLUDED.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w,
        EXCLUDED.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then EXCLUDED.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w,
        EXCLUDED.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then EXCLUDED.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w,
        EXCLUDED.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then EXCLUDED.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w,
        EXCLUDED.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then EXCLUDED.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w,
        EXCLUDED.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then EXCLUDED.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t1_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t1_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w,
        EXCLUDED.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then EXCLUDED.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w,
        EXCLUDED.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then EXCLUDED.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t2_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t2_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w,
        EXCLUDED.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then EXCLUDED.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w,
        EXCLUDED.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then EXCLUDED.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then EXCLUDED.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then EXCLUDED.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then EXCLUDED.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then EXCLUDED.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then EXCLUDED.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then EXCLUDED.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then EXCLUDED.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then EXCLUDED.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then EXCLUDED.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then EXCLUDED.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then EXCLUDED.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then EXCLUDED.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var,
        EXCLUDED.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then EXCLUDED.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var,
        EXCLUDED.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then EXCLUDED.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var,
        EXCLUDED.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then EXCLUDED.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var,
        EXCLUDED.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then EXCLUDED.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  value132 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p132_timestamp'::timestamptz,
:'p132_interval'::interval_entity,
:'p132_meter_id',
:'p132_measurement_location_id',
:'p132_count',
:'p132_quarter_hour_count',
:'p132_active_energy_l1_export_t0_max_wh',
:'p132_active_energy_l1_export_t0_min_wh',
:'p132_active_energy_l1_import_t0_max_wh',
:'p132_active_energy_l1_import_t0_min_wh',
:'p132_active_energy_l2_export_t0_max_wh',
:'p132_active_energy_l2_export_t0_min_wh',
:'p132_active_energy_l2_import_t0_max_wh',
:'p132_active_energy_l2_import_t0_min_wh',
:'p132_active_energy_l3_export_t0_max_wh',
:'p132_active_energy_l3_export_t0_min_wh',
:'p132_active_energy_l3_import_t0_max_wh',
:'p132_active_energy_l3_import_t0_min_wh',
:'p132_active_energy_total_export_t0_max_wh',
:'p132_active_energy_total_export_t0_min_wh',
:'p132_active_energy_total_import_t0_max_wh',
:'p132_active_energy_total_import_t0_min_wh',
:'p132_active_energy_total_import_t1_max_wh',
:'p132_active_energy_total_import_t1_min_wh',
:'p132_active_energy_total_import_t2_max_wh',
:'p132_active_energy_total_import_t2_min_wh',
:'p132_active_power_l1_net_t0_avg_w',
:'p132_active_power_l1_net_t0_max_w',
:'p132_active_power_l1_net_t0_max_timestamp',
:'p132_active_power_l1_net_t0_min_w',
:'p132_active_power_l1_net_t0_min_timestamp',
:'p132_active_power_l2_net_t0_avg_w',
:'p132_active_power_l2_net_t0_max_w',
:'p132_active_power_l2_net_t0_max_timestamp',
:'p132_active_power_l2_net_t0_min_w',
:'p132_active_power_l2_net_t0_min_timestamp',
:'p132_active_power_l3_net_t0_avg_w',
:'p132_active_power_l3_net_t0_max_w',
:'p132_active_power_l3_net_t0_max_timestamp',
:'p132_active_power_l3_net_t0_min_w',
:'p132_active_power_l3_net_t0_min_timestamp',
:'p132_current_l1_any_t0_avg_a',
:'p132_current_l1_any_t0_max_a',
:'p132_current_l1_any_t0_max_timestamp',
:'p132_current_l1_any_t0_min_a',
:'p132_current_l1_any_t0_min_timestamp',
:'p132_current_l2_any_t0_avg_a',
:'p132_current_l2_any_t0_max_a',
:'p132_current_l2_any_t0_max_timestamp',
:'p132_current_l2_any_t0_min_a',
:'p132_current_l2_any_t0_min_timestamp',
:'p132_current_l3_any_t0_avg_a',
:'p132_current_l3_any_t0_max_a',
:'p132_current_l3_any_t0_max_timestamp',
:'p132_current_l3_any_t0_min_a',
:'p132_current_l3_any_t0_min_timestamp',
:'p132_derived_active_power_l1_export_t0_avg_w',
:'p132_derived_active_power_l1_export_t0_max_w',
:'p132_derived_active_power_l1_export_t0_max_timestamp',
:'p132_derived_active_power_l1_export_t0_min_w',
:'p132_derived_active_power_l1_export_t0_min_timestamp',
:'p132_derived_active_power_l1_import_t0_avg_w',
:'p132_derived_active_power_l1_import_t0_max_w',
:'p132_derived_active_power_l1_import_t0_max_timestamp',
:'p132_derived_active_power_l1_import_t0_min_w',
:'p132_derived_active_power_l1_import_t0_min_timestamp',
:'p132_derived_active_power_l2_export_t0_avg_w',
:'p132_derived_active_power_l2_export_t0_max_w',
:'p132_derived_active_power_l2_export_t0_max_timestamp',
:'p132_derived_active_power_l2_export_t0_min_w',
:'p132_derived_active_power_l2_export_t0_min_timestamp',
:'p132_derived_active_power_l2_import_t0_avg_w',
:'p132_derived_active_power_l2_import_t0_max_w',
:'p132_derived_active_power_l2_import_t0_max_timestamp',
:'p132_derived_active_power_l2_import_t0_min_w',
:'p132_derived_active_power_l2_import_t0_min_timestamp',
:'p132_derived_active_power_l3_export_t0_avg_w',
:'p132_derived_active_power_l3_export_t0_max_w',
:'p132_derived_active_power_l3_export_t0_max_timestamp',
:'p132_derived_active_power_l3_export_t0_min_w',
:'p132_derived_active_power_l3_export_t0_min_timestamp',
:'p132_derived_active_power_l3_import_t0_avg_w',
:'p132_derived_active_power_l3_import_t0_max_w',
:'p132_derived_active_power_l3_import_t0_max_timestamp',
:'p132_derived_active_power_l3_import_t0_min_w',
:'p132_derived_active_power_l3_import_t0_min_timestamp',
:'p132_derived_active_power_total_export_t0_avg_w',
:'p132_derived_active_power_total_export_t0_max_w',
:'p132_derived_active_power_total_export_t0_max_timestamp',
:'p132_derived_active_power_total_export_t0_min_w',
:'p132_derived_active_power_total_export_t0_min_timestamp',
:'p132_derived_active_power_total_import_t0_avg_w',
:'p132_derived_active_power_total_import_t0_max_w',
:'p132_derived_active_power_total_import_t0_max_timestamp',
:'p132_derived_active_power_total_import_t0_min_w',
:'p132_derived_active_power_total_import_t0_min_timestamp',
:'p132_derived_active_power_total_import_t1_avg_w',
:'p132_derived_active_power_total_import_t1_max_w',
:'p132_derived_active_power_total_import_t1_max_timestamp',
:'p132_derived_active_power_total_import_t1_min_w',
:'p132_derived_active_power_total_import_t1_min_timestamp',
:'p132_derived_active_power_total_import_t2_avg_w',
:'p132_derived_active_power_total_import_t2_max_w',
:'p132_derived_active_power_total_import_t2_max_timestamp',
:'p132_derived_active_power_total_import_t2_min_w',
:'p132_derived_active_power_total_import_t2_min_timestamp',
:'p132_derived_reactive_power_l1_export_t0_avg_var',
:'p132_derived_reactive_power_l1_export_t0_max_var',
:'p132_derived_reactive_power_l1_export_t0_max_timestamp',
:'p132_derived_reactive_power_l1_export_t0_min_var',
:'p132_derived_reactive_power_l1_export_t0_min_timestamp',
:'p132_derived_reactive_power_l1_import_t0_avg_var',
:'p132_derived_reactive_power_l1_import_t0_max_var',
:'p132_derived_reactive_power_l1_import_t0_max_timestamp',
:'p132_derived_reactive_power_l1_import_t0_min_var',
:'p132_derived_reactive_power_l1_import_t0_min_timestamp',
:'p132_derived_reactive_power_l2_export_t0_avg_var',
:'p132_derived_reactive_power_l2_export_t0_max_var',
:'p132_derived_reactive_power_l2_export_t0_max_timestamp',
:'p132_derived_reactive_power_l2_export_t0_min_var',
:'p132_derived_reactive_power_l2_export_t0_min_timestamp',
:'p132_derived_reactive_power_l2_import_t0_avg_var',
:'p132_derived_reactive_power_l2_import_t0_max_var',
:'p132_derived_reactive_power_l2_import_t0_max_timestamp',
:'p132_derived_reactive_power_l2_import_t0_min_var',
:'p132_derived_reactive_power_l2_import_t0_min_timestamp',
:'p132_derived_reactive_power_l3_export_t0_avg_var',
:'p132_derived_reactive_power_l3_export_t0_max_var',
:'p132_derived_reactive_power_l3_export_t0_max_timestamp',
:'p132_derived_reactive_power_l3_export_t0_min_var',
:'p132_derived_reactive_power_l3_export_t0_min_timestamp',
:'p132_derived_reactive_power_l3_import_t0_avg_var',
:'p132_derived_reactive_power_l3_import_t0_max_var',
:'p132_derived_reactive_power_l3_import_t0_max_timestamp',
:'p132_derived_reactive_power_l3_import_t0_min_var',
:'p132_derived_reactive_power_l3_import_t0_min_timestamp',
:'p132_derived_reactive_power_total_export_t0_avg_var',
:'p132_derived_reactive_power_total_export_t0_max_var',
:'p132_derived_reactive_power_total_export_t0_max_timestamp',
:'p132_derived_reactive_power_total_export_t0_min_var',
:'p132_derived_reactive_power_total_export_t0_min_timestamp',
:'p132_derived_reactive_power_total_import_t0_avg_var',
:'p132_derived_reactive_power_total_import_t0_max_var',
:'p132_derived_reactive_power_total_import_t0_max_timestamp',
:'p132_derived_reactive_power_total_import_t0_min_var',
:'p132_derived_reactive_power_total_import_t0_min_timestamp',
:'p132_reactive_energy_l1_export_t0_max_varh',
:'p132_reactive_energy_l1_export_t0_min_varh',
:'p132_reactive_energy_l1_import_t0_max_varh',
:'p132_reactive_energy_l1_import_t0_min_varh',
:'p132_reactive_energy_l2_export_t0_max_varh',
:'p132_reactive_energy_l2_export_t0_min_varh',
:'p132_reactive_energy_l2_import_t0_max_varh',
:'p132_reactive_energy_l2_import_t0_min_varh',
:'p132_reactive_energy_l3_export_t0_max_varh',
:'p132_reactive_energy_l3_export_t0_min_varh',
:'p132_reactive_energy_l3_import_t0_max_varh',
:'p132_reactive_energy_l3_import_t0_min_varh',
:'p132_reactive_energy_total_export_t0_max_varh',
:'p132_reactive_energy_total_export_t0_min_varh',
:'p132_reactive_energy_total_import_t0_max_varh',
:'p132_reactive_energy_total_import_t0_min_varh',
:'p132_reactive_power_l1_net_t0_avg_var',
:'p132_reactive_power_l1_net_t0_max_var',
:'p132_reactive_power_l1_net_t0_max_timestamp',
:'p132_reactive_power_l1_net_t0_min_var',
:'p132_reactive_power_l1_net_t0_min_timestamp',
:'p132_reactive_power_l2_net_t0_avg_var',
:'p132_reactive_power_l2_net_t0_max_var',
:'p132_reactive_power_l2_net_t0_max_timestamp',
:'p132_reactive_power_l2_net_t0_min_var',
:'p132_reactive_power_l2_net_t0_min_timestamp',
:'p132_reactive_power_l3_net_t0_avg_var',
:'p132_reactive_power_l3_net_t0_max_var',
:'p132_reactive_power_l3_net_t0_max_timestamp',
:'p132_reactive_power_l3_net_t0_min_var',
:'p132_reactive_power_l3_net_t0_min_timestamp',
:'p132_voltage_l1_any_t0_avg_v',
:'p132_voltage_l1_any_t0_max_v',
:'p132_voltage_l1_any_t0_max_timestamp',
:'p132_voltage_l1_any_t0_min_v',
:'p132_voltage_l1_any_t0_min_timestamp',
:'p132_voltage_l2_any_t0_avg_v',
:'p132_voltage_l2_any_t0_max_v',
:'p132_voltage_l2_any_t0_max_timestamp',
:'p132_voltage_l2_any_t0_min_v',
:'p132_voltage_l2_any_t0_min_timestamp',
:'p132_voltage_l3_any_t0_avg_v',
:'p132_voltage_l3_any_t0_max_v',
:'p132_voltage_l3_any_t0_max_timestamp',
:'p132_voltage_l3_any_t0_min_v',
:'p132_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w,
        EXCLUDED.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then EXCLUDED.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w,
        EXCLUDED.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then EXCLUDED.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w,
        EXCLUDED.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then EXCLUDED.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w,
        EXCLUDED.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then EXCLUDED.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w,
        EXCLUDED.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then EXCLUDED.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w,
        EXCLUDED.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then EXCLUDED.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w,
        EXCLUDED.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then EXCLUDED.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w,
        EXCLUDED.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then EXCLUDED.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w,
        EXCLUDED.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then EXCLUDED.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w,
        EXCLUDED.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then EXCLUDED.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w,
        EXCLUDED.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then EXCLUDED.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w,
        EXCLUDED.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then EXCLUDED.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w,
        EXCLUDED.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then EXCLUDED.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w,
        EXCLUDED.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then EXCLUDED.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w,
        EXCLUDED.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then EXCLUDED.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w,
        EXCLUDED.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then EXCLUDED.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t1_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t1_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w,
        EXCLUDED.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then EXCLUDED.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w,
        EXCLUDED.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then EXCLUDED.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t2_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t2_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w,
        EXCLUDED.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then EXCLUDED.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w,
        EXCLUDED.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then EXCLUDED.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then EXCLUDED.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then EXCLUDED.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then EXCLUDED.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then EXCLUDED.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then EXCLUDED.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then EXCLUDED.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then EXCLUDED.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then EXCLUDED.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then EXCLUDED.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then EXCLUDED.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then EXCLUDED.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then EXCLUDED.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var,
        EXCLUDED.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then EXCLUDED.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var,
        EXCLUDED.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then EXCLUDED.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var,
        EXCLUDED.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then EXCLUDED.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var,
        EXCLUDED.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then EXCLUDED.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  value222 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p222_timestamp'::timestamptz,
:'p222_interval'::interval_entity,
:'p222_meter_id',
:'p222_measurement_location_id',
:'p222_count',
:'p222_quarter_hour_count',
:'p222_active_energy_l1_export_t0_max_wh',
:'p222_active_energy_l1_export_t0_min_wh',
:'p222_active_energy_l1_import_t0_max_wh',
:'p222_active_energy_l1_import_t0_min_wh',
:'p222_active_energy_l2_export_t0_max_wh',
:'p222_active_energy_l2_export_t0_min_wh',
:'p222_active_energy_l2_import_t0_max_wh',
:'p222_active_energy_l2_import_t0_min_wh',
:'p222_active_energy_l3_export_t0_max_wh',
:'p222_active_energy_l3_export_t0_min_wh',
:'p222_active_energy_l3_import_t0_max_wh',
:'p222_active_energy_l3_import_t0_min_wh',
:'p222_active_energy_total_export_t0_max_wh',
:'p222_active_energy_total_export_t0_min_wh',
:'p222_active_energy_total_import_t0_max_wh',
:'p222_active_energy_total_import_t0_min_wh',
:'p222_active_energy_total_import_t1_max_wh',
:'p222_active_energy_total_import_t1_min_wh',
:'p222_active_energy_total_import_t2_max_wh',
:'p222_active_energy_total_import_t2_min_wh',
:'p222_active_power_l1_net_t0_avg_w',
:'p222_active_power_l1_net_t0_max_w',
:'p222_active_power_l1_net_t0_max_timestamp',
:'p222_active_power_l1_net_t0_min_w',
:'p222_active_power_l1_net_t0_min_timestamp',
:'p222_active_power_l2_net_t0_avg_w',
:'p222_active_power_l2_net_t0_max_w',
:'p222_active_power_l2_net_t0_max_timestamp',
:'p222_active_power_l2_net_t0_min_w',
:'p222_active_power_l2_net_t0_min_timestamp',
:'p222_active_power_l3_net_t0_avg_w',
:'p222_active_power_l3_net_t0_max_w',
:'p222_active_power_l3_net_t0_max_timestamp',
:'p222_active_power_l3_net_t0_min_w',
:'p222_active_power_l3_net_t0_min_timestamp',
:'p222_current_l1_any_t0_avg_a',
:'p222_current_l1_any_t0_max_a',
:'p222_current_l1_any_t0_max_timestamp',
:'p222_current_l1_any_t0_min_a',
:'p222_current_l1_any_t0_min_timestamp',
:'p222_current_l2_any_t0_avg_a',
:'p222_current_l2_any_t0_max_a',
:'p222_current_l2_any_t0_max_timestamp',
:'p222_current_l2_any_t0_min_a',
:'p222_current_l2_any_t0_min_timestamp',
:'p222_current_l3_any_t0_avg_a',
:'p222_current_l3_any_t0_max_a',
:'p222_current_l3_any_t0_max_timestamp',
:'p222_current_l3_any_t0_min_a',
:'p222_current_l3_any_t0_min_timestamp',
:'p222_derived_active_power_l1_export_t0_avg_w',
:'p222_derived_active_power_l1_export_t0_max_w',
:'p222_derived_active_power_l1_export_t0_max_timestamp',
:'p222_derived_active_power_l1_export_t0_min_w',
:'p222_derived_active_power_l1_export_t0_min_timestamp',
:'p222_derived_active_power_l1_import_t0_avg_w',
:'p222_derived_active_power_l1_import_t0_max_w',
:'p222_derived_active_power_l1_import_t0_max_timestamp',
:'p222_derived_active_power_l1_import_t0_min_w',
:'p222_derived_active_power_l1_import_t0_min_timestamp',
:'p222_derived_active_power_l2_export_t0_avg_w',
:'p222_derived_active_power_l2_export_t0_max_w',
:'p222_derived_active_power_l2_export_t0_max_timestamp',
:'p222_derived_active_power_l2_export_t0_min_w',
:'p222_derived_active_power_l2_export_t0_min_timestamp',
:'p222_derived_active_power_l2_import_t0_avg_w',
:'p222_derived_active_power_l2_import_t0_max_w',
:'p222_derived_active_power_l2_import_t0_max_timestamp',
:'p222_derived_active_power_l2_import_t0_min_w',
:'p222_derived_active_power_l2_import_t0_min_timestamp',
:'p222_derived_active_power_l3_export_t0_avg_w',
:'p222_derived_active_power_l3_export_t0_max_w',
:'p222_derived_active_power_l3_export_t0_max_timestamp',
:'p222_derived_active_power_l3_export_t0_min_w',
:'p222_derived_active_power_l3_export_t0_min_timestamp',
:'p222_derived_active_power_l3_import_t0_avg_w',
:'p222_derived_active_power_l3_import_t0_max_w',
:'p222_derived_active_power_l3_import_t0_max_timestamp',
:'p222_derived_active_power_l3_import_t0_min_w',
:'p222_derived_active_power_l3_import_t0_min_timestamp',
:'p222_derived_active_power_total_export_t0_avg_w',
:'p222_derived_active_power_total_export_t0_max_w',
:'p222_derived_active_power_total_export_t0_max_timestamp',
:'p222_derived_active_power_total_export_t0_min_w',
:'p222_derived_active_power_total_export_t0_min_timestamp',
:'p222_derived_active_power_total_import_t0_avg_w',
:'p222_derived_active_power_total_import_t0_max_w',
:'p222_derived_active_power_total_import_t0_max_timestamp',
:'p222_derived_active_power_total_import_t0_min_w',
:'p222_derived_active_power_total_import_t0_min_timestamp',
:'p222_derived_active_power_total_import_t1_avg_w',
:'p222_derived_active_power_total_import_t1_max_w',
:'p222_derived_active_power_total_import_t1_max_timestamp',
:'p222_derived_active_power_total_import_t1_min_w',
:'p222_derived_active_power_total_import_t1_min_timestamp',
:'p222_derived_active_power_total_import_t2_avg_w',
:'p222_derived_active_power_total_import_t2_max_w',
:'p222_derived_active_power_total_import_t2_max_timestamp',
:'p222_derived_active_power_total_import_t2_min_w',
:'p222_derived_active_power_total_import_t2_min_timestamp',
:'p222_derived_reactive_power_l1_export_t0_avg_var',
:'p222_derived_reactive_power_l1_export_t0_max_var',
:'p222_derived_reactive_power_l1_export_t0_max_timestamp',
:'p222_derived_reactive_power_l1_export_t0_min_var',
:'p222_derived_reactive_power_l1_export_t0_min_timestamp',
:'p222_derived_reactive_power_l1_import_t0_avg_var',
:'p222_derived_reactive_power_l1_import_t0_max_var',
:'p222_derived_reactive_power_l1_import_t0_max_timestamp',
:'p222_derived_reactive_power_l1_import_t0_min_var',
:'p222_derived_reactive_power_l1_import_t0_min_timestamp',
:'p222_derived_reactive_power_l2_export_t0_avg_var',
:'p222_derived_reactive_power_l2_export_t0_max_var',
:'p222_derived_reactive_power_l2_export_t0_max_timestamp',
:'p222_derived_reactive_power_l2_export_t0_min_var',
:'p222_derived_reactive_power_l2_export_t0_min_timestamp',
:'p222_derived_reactive_power_l2_import_t0_avg_var',
:'p222_derived_reactive_power_l2_import_t0_max_var',
:'p222_derived_reactive_power_l2_import_t0_max_timestamp',
:'p222_derived_reactive_power_l2_import_t0_min_var',
:'p222_derived_reactive_power_l2_import_t0_min_timestamp',
:'p222_derived_reactive_power_l3_export_t0_avg_var',
:'p222_derived_reactive_power_l3_export_t0_max_var',
:'p222_derived_reactive_power_l3_export_t0_max_timestamp',
:'p222_derived_reactive_power_l3_export_t0_min_var',
:'p222_derived_reactive_power_l3_export_t0_min_timestamp',
:'p222_derived_reactive_power_l3_import_t0_avg_var',
:'p222_derived_reactive_power_l3_import_t0_max_var',
:'p222_derived_reactive_power_l3_import_t0_max_timestamp',
:'p222_derived_reactive_power_l3_import_t0_min_var',
:'p222_derived_reactive_power_l3_import_t0_min_timestamp',
:'p222_derived_reactive_power_total_export_t0_avg_var',
:'p222_derived_reactive_power_total_export_t0_max_var',
:'p222_derived_reactive_power_total_export_t0_max_timestamp',
:'p222_derived_reactive_power_total_export_t0_min_var',
:'p222_derived_reactive_power_total_export_t0_min_timestamp',
:'p222_derived_reactive_power_total_import_t0_avg_var',
:'p222_derived_reactive_power_total_import_t0_max_var',
:'p222_derived_reactive_power_total_import_t0_max_timestamp',
:'p222_derived_reactive_power_total_import_t0_min_var',
:'p222_derived_reactive_power_total_import_t0_min_timestamp',
:'p222_reactive_energy_l1_export_t0_max_varh',
:'p222_reactive_energy_l1_export_t0_min_varh',
:'p222_reactive_energy_l1_import_t0_max_varh',
:'p222_reactive_energy_l1_import_t0_min_varh',
:'p222_reactive_energy_l2_export_t0_max_varh',
:'p222_reactive_energy_l2_export_t0_min_varh',
:'p222_reactive_energy_l2_import_t0_max_varh',
:'p222_reactive_energy_l2_import_t0_min_varh',
:'p222_reactive_energy_l3_export_t0_max_varh',
:'p222_reactive_energy_l3_export_t0_min_varh',
:'p222_reactive_energy_l3_import_t0_max_varh',
:'p222_reactive_energy_l3_import_t0_min_varh',
:'p222_reactive_energy_total_export_t0_max_varh',
:'p222_reactive_energy_total_export_t0_min_varh',
:'p222_reactive_energy_total_import_t0_max_varh',
:'p222_reactive_energy_total_import_t0_min_varh',
:'p222_reactive_power_l1_net_t0_avg_var',
:'p222_reactive_power_l1_net_t0_max_var',
:'p222_reactive_power_l1_net_t0_max_timestamp',
:'p222_reactive_power_l1_net_t0_min_var',
:'p222_reactive_power_l1_net_t0_min_timestamp',
:'p222_reactive_power_l2_net_t0_avg_var',
:'p222_reactive_power_l2_net_t0_max_var',
:'p222_reactive_power_l2_net_t0_max_timestamp',
:'p222_reactive_power_l2_net_t0_min_var',
:'p222_reactive_power_l2_net_t0_min_timestamp',
:'p222_reactive_power_l3_net_t0_avg_var',
:'p222_reactive_power_l3_net_t0_max_var',
:'p222_reactive_power_l3_net_t0_max_timestamp',
:'p222_reactive_power_l3_net_t0_min_var',
:'p222_reactive_power_l3_net_t0_min_timestamp',
:'p222_voltage_l1_any_t0_avg_v',
:'p222_voltage_l1_any_t0_max_v',
:'p222_voltage_l1_any_t0_max_timestamp',
:'p222_voltage_l1_any_t0_min_v',
:'p222_voltage_l1_any_t0_min_timestamp',
:'p222_voltage_l2_any_t0_avg_v',
:'p222_voltage_l2_any_t0_max_v',
:'p222_voltage_l2_any_t0_max_timestamp',
:'p222_voltage_l2_any_t0_min_v',
:'p222_voltage_l2_any_t0_min_timestamp',
:'p222_voltage_l3_any_t0_avg_v',
:'p222_voltage_l3_any_t0_max_v',
:'p222_voltage_l3_any_t0_max_timestamp',
:'p222_voltage_l3_any_t0_min_v',
:'p222_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w,
        EXCLUDED.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then EXCLUDED.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w,
        EXCLUDED.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then EXCLUDED.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l1_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l1_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w,
        EXCLUDED.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then EXCLUDED.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w,
        EXCLUDED.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then EXCLUDED.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w,
        EXCLUDED.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then EXCLUDED.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w,
        EXCLUDED.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then EXCLUDED.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l2_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l2_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w,
        EXCLUDED.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then EXCLUDED.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w,
        EXCLUDED.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then EXCLUDED.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w,
        EXCLUDED.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then EXCLUDED.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w,
        EXCLUDED.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then EXCLUDED.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_l3_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_l3_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w,
        EXCLUDED.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then EXCLUDED.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w,
        EXCLUDED.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then EXCLUDED.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_export_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_export_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w,
        EXCLUDED.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then EXCLUDED.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w,
        EXCLUDED.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then EXCLUDED.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t0_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w,
        EXCLUDED.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then EXCLUDED.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w,
        EXCLUDED.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then EXCLUDED.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t1_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t1_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w,
        EXCLUDED.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then EXCLUDED.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w,
        EXCLUDED.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then EXCLUDED.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.count + EXCLUDED.derived_active_power_total_import_t2_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_active_power_total_import_t2_max_w = greatest(
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w,
        EXCLUDED.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then EXCLUDED.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w,
        EXCLUDED.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when EXCLUDED.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then EXCLUDED.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then EXCLUDED.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then EXCLUDED.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l1_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then EXCLUDED.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then EXCLUDED.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then EXCLUDED.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then EXCLUDED.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l2_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then EXCLUDED.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then EXCLUDED.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then EXCLUDED.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then EXCLUDED.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_l3_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then EXCLUDED.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var,
        EXCLUDED.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then EXCLUDED.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_export_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_export_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var,
        EXCLUDED.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then EXCLUDED.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var,
        EXCLUDED.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then EXCLUDED.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.derived_reactive_power_total_import_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      derived_reactive_power_total_import_t0_max_var = greatest(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var,
        EXCLUDED.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then EXCLUDED.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var,
        EXCLUDED.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when EXCLUDED.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then EXCLUDED.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  old41 as (
    select
      abb_b2x_aggregates.*
    from
      abb_b2x_aggregates
    where
      abb_b2x_aggregates.timestamp =:'p41_timestamp'::timestamptz
      and abb_b2x_aggregates.interval =:'p41_interval'::interval_entity
      and abb_b2x_aggregates.meter_id =:'p41_meter_id'
      and abb_b2x_aggregates.measurement_location_id =:'p41_measurement_location_id'
  ),
  new41 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p41_timestamp'::timestamptz,
:'p41_interval'::interval_entity,
:'p41_meter_id',
:'p41_measurement_location_id',
:'p41_count',
:'p41_quarter_hour_count',
:'p41_active_energy_l1_export_t0_max_wh',
:'p41_active_energy_l1_export_t0_min_wh',
:'p41_active_energy_l1_import_t0_max_wh',
:'p41_active_energy_l1_import_t0_min_wh',
:'p41_active_energy_l2_export_t0_max_wh',
:'p41_active_energy_l2_export_t0_min_wh',
:'p41_active_energy_l2_import_t0_max_wh',
:'p41_active_energy_l2_import_t0_min_wh',
:'p41_active_energy_l3_export_t0_max_wh',
:'p41_active_energy_l3_export_t0_min_wh',
:'p41_active_energy_l3_import_t0_max_wh',
:'p41_active_energy_l3_import_t0_min_wh',
:'p41_active_energy_total_export_t0_max_wh',
:'p41_active_energy_total_export_t0_min_wh',
:'p41_active_energy_total_import_t0_max_wh',
:'p41_active_energy_total_import_t0_min_wh',
:'p41_active_energy_total_import_t1_max_wh',
:'p41_active_energy_total_import_t1_min_wh',
:'p41_active_energy_total_import_t2_max_wh',
:'p41_active_energy_total_import_t2_min_wh',
:'p41_active_power_l1_net_t0_avg_w',
:'p41_active_power_l1_net_t0_max_w',
:'p41_active_power_l1_net_t0_max_timestamp',
:'p41_active_power_l1_net_t0_min_w',
:'p41_active_power_l1_net_t0_min_timestamp',
:'p41_active_power_l2_net_t0_avg_w',
:'p41_active_power_l2_net_t0_max_w',
:'p41_active_power_l2_net_t0_max_timestamp',
:'p41_active_power_l2_net_t0_min_w',
:'p41_active_power_l2_net_t0_min_timestamp',
:'p41_active_power_l3_net_t0_avg_w',
:'p41_active_power_l3_net_t0_max_w',
:'p41_active_power_l3_net_t0_max_timestamp',
:'p41_active_power_l3_net_t0_min_w',
:'p41_active_power_l3_net_t0_min_timestamp',
:'p41_current_l1_any_t0_avg_a',
:'p41_current_l1_any_t0_max_a',
:'p41_current_l1_any_t0_max_timestamp',
:'p41_current_l1_any_t0_min_a',
:'p41_current_l1_any_t0_min_timestamp',
:'p41_current_l2_any_t0_avg_a',
:'p41_current_l2_any_t0_max_a',
:'p41_current_l2_any_t0_max_timestamp',
:'p41_current_l2_any_t0_min_a',
:'p41_current_l2_any_t0_min_timestamp',
:'p41_current_l3_any_t0_avg_a',
:'p41_current_l3_any_t0_max_a',
:'p41_current_l3_any_t0_max_timestamp',
:'p41_current_l3_any_t0_min_a',
:'p41_current_l3_any_t0_min_timestamp',
:'p41_derived_active_power_l1_export_t0_avg_w',
:'p41_derived_active_power_l1_export_t0_max_w',
:'p41_derived_active_power_l1_export_t0_max_timestamp',
:'p41_derived_active_power_l1_export_t0_min_w',
:'p41_derived_active_power_l1_export_t0_min_timestamp',
:'p41_derived_active_power_l1_import_t0_avg_w',
:'p41_derived_active_power_l1_import_t0_max_w',
:'p41_derived_active_power_l1_import_t0_max_timestamp',
:'p41_derived_active_power_l1_import_t0_min_w',
:'p41_derived_active_power_l1_import_t0_min_timestamp',
:'p41_derived_active_power_l2_export_t0_avg_w',
:'p41_derived_active_power_l2_export_t0_max_w',
:'p41_derived_active_power_l2_export_t0_max_timestamp',
:'p41_derived_active_power_l2_export_t0_min_w',
:'p41_derived_active_power_l2_export_t0_min_timestamp',
:'p41_derived_active_power_l2_import_t0_avg_w',
:'p41_derived_active_power_l2_import_t0_max_w',
:'p41_derived_active_power_l2_import_t0_max_timestamp',
:'p41_derived_active_power_l2_import_t0_min_w',
:'p41_derived_active_power_l2_import_t0_min_timestamp',
:'p41_derived_active_power_l3_export_t0_avg_w',
:'p41_derived_active_power_l3_export_t0_max_w',
:'p41_derived_active_power_l3_export_t0_max_timestamp',
:'p41_derived_active_power_l3_export_t0_min_w',
:'p41_derived_active_power_l3_export_t0_min_timestamp',
:'p41_derived_active_power_l3_import_t0_avg_w',
:'p41_derived_active_power_l3_import_t0_max_w',
:'p41_derived_active_power_l3_import_t0_max_timestamp',
:'p41_derived_active_power_l3_import_t0_min_w',
:'p41_derived_active_power_l3_import_t0_min_timestamp',
:'p41_derived_active_power_total_export_t0_avg_w',
:'p41_derived_active_power_total_export_t0_max_w',
:'p41_derived_active_power_total_export_t0_max_timestamp',
:'p41_derived_active_power_total_export_t0_min_w',
:'p41_derived_active_power_total_export_t0_min_timestamp',
:'p41_derived_active_power_total_import_t0_avg_w',
:'p41_derived_active_power_total_import_t0_max_w',
:'p41_derived_active_power_total_import_t0_max_timestamp',
:'p41_derived_active_power_total_import_t0_min_w',
:'p41_derived_active_power_total_import_t0_min_timestamp',
:'p41_derived_active_power_total_import_t1_avg_w',
:'p41_derived_active_power_total_import_t1_max_w',
:'p41_derived_active_power_total_import_t1_max_timestamp',
:'p41_derived_active_power_total_import_t1_min_w',
:'p41_derived_active_power_total_import_t1_min_timestamp',
:'p41_derived_active_power_total_import_t2_avg_w',
:'p41_derived_active_power_total_import_t2_max_w',
:'p41_derived_active_power_total_import_t2_max_timestamp',
:'p41_derived_active_power_total_import_t2_min_w',
:'p41_derived_active_power_total_import_t2_min_timestamp',
:'p41_derived_reactive_power_l1_export_t0_avg_var',
:'p41_derived_reactive_power_l1_export_t0_max_var',
:'p41_derived_reactive_power_l1_export_t0_max_timestamp',
:'p41_derived_reactive_power_l1_export_t0_min_var',
:'p41_derived_reactive_power_l1_export_t0_min_timestamp',
:'p41_derived_reactive_power_l1_import_t0_avg_var',
:'p41_derived_reactive_power_l1_import_t0_max_var',
:'p41_derived_reactive_power_l1_import_t0_max_timestamp',
:'p41_derived_reactive_power_l1_import_t0_min_var',
:'p41_derived_reactive_power_l1_import_t0_min_timestamp',
:'p41_derived_reactive_power_l2_export_t0_avg_var',
:'p41_derived_reactive_power_l2_export_t0_max_var',
:'p41_derived_reactive_power_l2_export_t0_max_timestamp',
:'p41_derived_reactive_power_l2_export_t0_min_var',
:'p41_derived_reactive_power_l2_export_t0_min_timestamp',
:'p41_derived_reactive_power_l2_import_t0_avg_var',
:'p41_derived_reactive_power_l2_import_t0_max_var',
:'p41_derived_reactive_power_l2_import_t0_max_timestamp',
:'p41_derived_reactive_power_l2_import_t0_min_var',
:'p41_derived_reactive_power_l2_import_t0_min_timestamp',
:'p41_derived_reactive_power_l3_export_t0_avg_var',
:'p41_derived_reactive_power_l3_export_t0_max_var',
:'p41_derived_reactive_power_l3_export_t0_max_timestamp',
:'p41_derived_reactive_power_l3_export_t0_min_var',
:'p41_derived_reactive_power_l3_export_t0_min_timestamp',
:'p41_derived_reactive_power_l3_import_t0_avg_var',
:'p41_derived_reactive_power_l3_import_t0_max_var',
:'p41_derived_reactive_power_l3_import_t0_max_timestamp',
:'p41_derived_reactive_power_l3_import_t0_min_var',
:'p41_derived_reactive_power_l3_import_t0_min_timestamp',
:'p41_derived_reactive_power_total_export_t0_avg_var',
:'p41_derived_reactive_power_total_export_t0_max_var',
:'p41_derived_reactive_power_total_export_t0_max_timestamp',
:'p41_derived_reactive_power_total_export_t0_min_var',
:'p41_derived_reactive_power_total_export_t0_min_timestamp',
:'p41_derived_reactive_power_total_import_t0_avg_var',
:'p41_derived_reactive_power_total_import_t0_max_var',
:'p41_derived_reactive_power_total_import_t0_max_timestamp',
:'p41_derived_reactive_power_total_import_t0_min_var',
:'p41_derived_reactive_power_total_import_t0_min_timestamp',
:'p41_reactive_energy_l1_export_t0_max_varh',
:'p41_reactive_energy_l1_export_t0_min_varh',
:'p41_reactive_energy_l1_import_t0_max_varh',
:'p41_reactive_energy_l1_import_t0_min_varh',
:'p41_reactive_energy_l2_export_t0_max_varh',
:'p41_reactive_energy_l2_export_t0_min_varh',
:'p41_reactive_energy_l2_import_t0_max_varh',
:'p41_reactive_energy_l2_import_t0_min_varh',
:'p41_reactive_energy_l3_export_t0_max_varh',
:'p41_reactive_energy_l3_export_t0_min_varh',
:'p41_reactive_energy_l3_import_t0_max_varh',
:'p41_reactive_energy_l3_import_t0_min_varh',
:'p41_reactive_energy_total_export_t0_max_varh',
:'p41_reactive_energy_total_export_t0_min_varh',
:'p41_reactive_energy_total_import_t0_max_varh',
:'p41_reactive_energy_total_import_t0_min_varh',
:'p41_reactive_power_l1_net_t0_avg_var',
:'p41_reactive_power_l1_net_t0_max_var',
:'p41_reactive_power_l1_net_t0_max_timestamp',
:'p41_reactive_power_l1_net_t0_min_var',
:'p41_reactive_power_l1_net_t0_min_timestamp',
:'p41_reactive_power_l2_net_t0_avg_var',
:'p41_reactive_power_l2_net_t0_max_var',
:'p41_reactive_power_l2_net_t0_max_timestamp',
:'p41_reactive_power_l2_net_t0_min_var',
:'p41_reactive_power_l2_net_t0_min_timestamp',
:'p41_reactive_power_l3_net_t0_avg_var',
:'p41_reactive_power_l3_net_t0_max_var',
:'p41_reactive_power_l3_net_t0_max_timestamp',
:'p41_reactive_power_l3_net_t0_min_var',
:'p41_reactive_power_l3_net_t0_min_timestamp',
:'p41_voltage_l1_any_t0_avg_v',
:'p41_voltage_l1_any_t0_max_v',
:'p41_voltage_l1_any_t0_max_timestamp',
:'p41_voltage_l1_any_t0_min_v',
:'p41_voltage_l1_any_t0_min_timestamp',
:'p41_voltage_l2_any_t0_avg_v',
:'p41_voltage_l2_any_t0_max_v',
:'p41_voltage_l2_any_t0_max_timestamp',
:'p41_voltage_l2_any_t0_min_v',
:'p41_voltage_l2_any_t0_min_timestamp',
:'p41_voltage_l3_any_t0_avg_v',
:'p41_voltage_l3_any_t0_max_v',
:'p41_voltage_l3_any_t0_max_timestamp',
:'p41_voltage_l3_any_t0_min_v',
:'p41_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      quarter_hour_count = 1,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  delta41 as (
    select
      date_trunc(
        'day',
        new41.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' daily_timestamp,
      date_trunc(
        'month',
        new41.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' monthly_timestamp,
      new41.timestamp,
      new41.interval,
      new41.meter_id,
      new41.measurement_location_id,
      case
        when old41.timestamp is null then 1
        else 0
      end new_count,
      new41.derived_active_power_l1_export_t0_avg_w - coalesce(old41.derived_active_power_l1_export_t0_avg_w, 0) derived_active_power_l1_export_t0_avg_w,
      greatest(
        new41.derived_active_power_l1_export_t0_max_w,
        coalesce(
          old41.derived_active_power_l1_export_t0_max_w,
          new41.derived_active_power_l1_export_t0_max_w
        )
      ) derived_active_power_l1_export_t0_max_w,
      case
        when new41.derived_active_power_l1_export_t0_max_w > coalesce(
          old41.derived_active_power_l1_export_t0_max_w,
          new41.derived_active_power_l1_export_t0_max_w
        ) then new41.derived_active_power_l1_export_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_l1_export_t0_max_timestamp,
          new41.derived_active_power_l1_export_t0_max_timestamp
        )
      end derived_active_power_l1_export_t0_max_timestamp,
      least(
        new41.derived_active_power_l1_export_t0_min_w,
        coalesce(
          old41.derived_active_power_l1_export_t0_min_w,
          new41.derived_active_power_l1_export_t0_min_w
        )
      ) derived_active_power_l1_export_t0_min_w,
      case
        when new41.derived_active_power_l1_export_t0_min_w < coalesce(
          old41.derived_active_power_l1_export_t0_min_w,
          new41.derived_active_power_l1_export_t0_min_w
        ) then new41.derived_active_power_l1_export_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_l1_export_t0_min_timestamp,
          new41.derived_active_power_l1_export_t0_min_timestamp
        )
      end derived_active_power_l1_export_t0_min_timestamp,
      new41.derived_active_power_l1_import_t0_avg_w - coalesce(old41.derived_active_power_l1_import_t0_avg_w, 0) derived_active_power_l1_import_t0_avg_w,
      greatest(
        new41.derived_active_power_l1_import_t0_max_w,
        coalesce(
          old41.derived_active_power_l1_import_t0_max_w,
          new41.derived_active_power_l1_import_t0_max_w
        )
      ) derived_active_power_l1_import_t0_max_w,
      case
        when new41.derived_active_power_l1_import_t0_max_w > coalesce(
          old41.derived_active_power_l1_import_t0_max_w,
          new41.derived_active_power_l1_import_t0_max_w
        ) then new41.derived_active_power_l1_import_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_l1_import_t0_max_timestamp,
          new41.derived_active_power_l1_import_t0_max_timestamp
        )
      end derived_active_power_l1_import_t0_max_timestamp,
      least(
        new41.derived_active_power_l1_import_t0_min_w,
        coalesce(
          old41.derived_active_power_l1_import_t0_min_w,
          new41.derived_active_power_l1_import_t0_min_w
        )
      ) derived_active_power_l1_import_t0_min_w,
      case
        when new41.derived_active_power_l1_import_t0_min_w < coalesce(
          old41.derived_active_power_l1_import_t0_min_w,
          new41.derived_active_power_l1_import_t0_min_w
        ) then new41.derived_active_power_l1_import_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_l1_import_t0_min_timestamp,
          new41.derived_active_power_l1_import_t0_min_timestamp
        )
      end derived_active_power_l1_import_t0_min_timestamp,
      new41.derived_active_power_l2_export_t0_avg_w - coalesce(old41.derived_active_power_l2_export_t0_avg_w, 0) derived_active_power_l2_export_t0_avg_w,
      greatest(
        new41.derived_active_power_l2_export_t0_max_w,
        coalesce(
          old41.derived_active_power_l2_export_t0_max_w,
          new41.derived_active_power_l2_export_t0_max_w
        )
      ) derived_active_power_l2_export_t0_max_w,
      case
        when new41.derived_active_power_l2_export_t0_max_w > coalesce(
          old41.derived_active_power_l2_export_t0_max_w,
          new41.derived_active_power_l2_export_t0_max_w
        ) then new41.derived_active_power_l2_export_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_l2_export_t0_max_timestamp,
          new41.derived_active_power_l2_export_t0_max_timestamp
        )
      end derived_active_power_l2_export_t0_max_timestamp,
      least(
        new41.derived_active_power_l2_export_t0_min_w,
        coalesce(
          old41.derived_active_power_l2_export_t0_min_w,
          new41.derived_active_power_l2_export_t0_min_w
        )
      ) derived_active_power_l2_export_t0_min_w,
      case
        when new41.derived_active_power_l2_export_t0_min_w < coalesce(
          old41.derived_active_power_l2_export_t0_min_w,
          new41.derived_active_power_l2_export_t0_min_w
        ) then new41.derived_active_power_l2_export_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_l2_export_t0_min_timestamp,
          new41.derived_active_power_l2_export_t0_min_timestamp
        )
      end derived_active_power_l2_export_t0_min_timestamp,
      new41.derived_active_power_l2_import_t0_avg_w - coalesce(old41.derived_active_power_l2_import_t0_avg_w, 0) derived_active_power_l2_import_t0_avg_w,
      greatest(
        new41.derived_active_power_l2_import_t0_max_w,
        coalesce(
          old41.derived_active_power_l2_import_t0_max_w,
          new41.derived_active_power_l2_import_t0_max_w
        )
      ) derived_active_power_l2_import_t0_max_w,
      case
        when new41.derived_active_power_l2_import_t0_max_w > coalesce(
          old41.derived_active_power_l2_import_t0_max_w,
          new41.derived_active_power_l2_import_t0_max_w
        ) then new41.derived_active_power_l2_import_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_l2_import_t0_max_timestamp,
          new41.derived_active_power_l2_import_t0_max_timestamp
        )
      end derived_active_power_l2_import_t0_max_timestamp,
      least(
        new41.derived_active_power_l2_import_t0_min_w,
        coalesce(
          old41.derived_active_power_l2_import_t0_min_w,
          new41.derived_active_power_l2_import_t0_min_w
        )
      ) derived_active_power_l2_import_t0_min_w,
      case
        when new41.derived_active_power_l2_import_t0_min_w < coalesce(
          old41.derived_active_power_l2_import_t0_min_w,
          new41.derived_active_power_l2_import_t0_min_w
        ) then new41.derived_active_power_l2_import_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_l2_import_t0_min_timestamp,
          new41.derived_active_power_l2_import_t0_min_timestamp
        )
      end derived_active_power_l2_import_t0_min_timestamp,
      new41.derived_active_power_l3_export_t0_avg_w - coalesce(old41.derived_active_power_l3_export_t0_avg_w, 0) derived_active_power_l3_export_t0_avg_w,
      greatest(
        new41.derived_active_power_l3_export_t0_max_w,
        coalesce(
          old41.derived_active_power_l3_export_t0_max_w,
          new41.derived_active_power_l3_export_t0_max_w
        )
      ) derived_active_power_l3_export_t0_max_w,
      case
        when new41.derived_active_power_l3_export_t0_max_w > coalesce(
          old41.derived_active_power_l3_export_t0_max_w,
          new41.derived_active_power_l3_export_t0_max_w
        ) then new41.derived_active_power_l3_export_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_l3_export_t0_max_timestamp,
          new41.derived_active_power_l3_export_t0_max_timestamp
        )
      end derived_active_power_l3_export_t0_max_timestamp,
      least(
        new41.derived_active_power_l3_export_t0_min_w,
        coalesce(
          old41.derived_active_power_l3_export_t0_min_w,
          new41.derived_active_power_l3_export_t0_min_w
        )
      ) derived_active_power_l3_export_t0_min_w,
      case
        when new41.derived_active_power_l3_export_t0_min_w < coalesce(
          old41.derived_active_power_l3_export_t0_min_w,
          new41.derived_active_power_l3_export_t0_min_w
        ) then new41.derived_active_power_l3_export_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_l3_export_t0_min_timestamp,
          new41.derived_active_power_l3_export_t0_min_timestamp
        )
      end derived_active_power_l3_export_t0_min_timestamp,
      new41.derived_active_power_l3_import_t0_avg_w - coalesce(old41.derived_active_power_l3_import_t0_avg_w, 0) derived_active_power_l3_import_t0_avg_w,
      greatest(
        new41.derived_active_power_l3_import_t0_max_w,
        coalesce(
          old41.derived_active_power_l3_import_t0_max_w,
          new41.derived_active_power_l3_import_t0_max_w
        )
      ) derived_active_power_l3_import_t0_max_w,
      case
        when new41.derived_active_power_l3_import_t0_max_w > coalesce(
          old41.derived_active_power_l3_import_t0_max_w,
          new41.derived_active_power_l3_import_t0_max_w
        ) then new41.derived_active_power_l3_import_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_l3_import_t0_max_timestamp,
          new41.derived_active_power_l3_import_t0_max_timestamp
        )
      end derived_active_power_l3_import_t0_max_timestamp,
      least(
        new41.derived_active_power_l3_import_t0_min_w,
        coalesce(
          old41.derived_active_power_l3_import_t0_min_w,
          new41.derived_active_power_l3_import_t0_min_w
        )
      ) derived_active_power_l3_import_t0_min_w,
      case
        when new41.derived_active_power_l3_import_t0_min_w < coalesce(
          old41.derived_active_power_l3_import_t0_min_w,
          new41.derived_active_power_l3_import_t0_min_w
        ) then new41.derived_active_power_l3_import_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_l3_import_t0_min_timestamp,
          new41.derived_active_power_l3_import_t0_min_timestamp
        )
      end derived_active_power_l3_import_t0_min_timestamp,
      new41.derived_active_power_total_export_t0_avg_w - coalesce(
        old41.derived_active_power_total_export_t0_avg_w,
        0
      ) derived_active_power_total_export_t0_avg_w,
      greatest(
        new41.derived_active_power_total_export_t0_max_w,
        coalesce(
          old41.derived_active_power_total_export_t0_max_w,
          new41.derived_active_power_total_export_t0_max_w
        )
      ) derived_active_power_total_export_t0_max_w,
      case
        when new41.derived_active_power_total_export_t0_max_w > coalesce(
          old41.derived_active_power_total_export_t0_max_w,
          new41.derived_active_power_total_export_t0_max_w
        ) then new41.derived_active_power_total_export_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_total_export_t0_max_timestamp,
          new41.derived_active_power_total_export_t0_max_timestamp
        )
      end derived_active_power_total_export_t0_max_timestamp,
      least(
        new41.derived_active_power_total_export_t0_min_w,
        coalesce(
          old41.derived_active_power_total_export_t0_min_w,
          new41.derived_active_power_total_export_t0_min_w
        )
      ) derived_active_power_total_export_t0_min_w,
      case
        when new41.derived_active_power_total_export_t0_min_w < coalesce(
          old41.derived_active_power_total_export_t0_min_w,
          new41.derived_active_power_total_export_t0_min_w
        ) then new41.derived_active_power_total_export_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_total_export_t0_min_timestamp,
          new41.derived_active_power_total_export_t0_min_timestamp
        )
      end derived_active_power_total_export_t0_min_timestamp,
      new41.derived_active_power_total_import_t0_avg_w - coalesce(
        old41.derived_active_power_total_import_t0_avg_w,
        0
      ) derived_active_power_total_import_t0_avg_w,
      greatest(
        new41.derived_active_power_total_import_t0_max_w,
        coalesce(
          old41.derived_active_power_total_import_t0_max_w,
          new41.derived_active_power_total_import_t0_max_w
        )
      ) derived_active_power_total_import_t0_max_w,
      case
        when new41.derived_active_power_total_import_t0_max_w > coalesce(
          old41.derived_active_power_total_import_t0_max_w,
          new41.derived_active_power_total_import_t0_max_w
        ) then new41.derived_active_power_total_import_t0_max_timestamp
        else coalesce(
          old41.derived_active_power_total_import_t0_max_timestamp,
          new41.derived_active_power_total_import_t0_max_timestamp
        )
      end derived_active_power_total_import_t0_max_timestamp,
      least(
        new41.derived_active_power_total_import_t0_min_w,
        coalesce(
          old41.derived_active_power_total_import_t0_min_w,
          new41.derived_active_power_total_import_t0_min_w
        )
      ) derived_active_power_total_import_t0_min_w,
      case
        when new41.derived_active_power_total_import_t0_min_w < coalesce(
          old41.derived_active_power_total_import_t0_min_w,
          new41.derived_active_power_total_import_t0_min_w
        ) then new41.derived_active_power_total_import_t0_min_timestamp
        else coalesce(
          old41.derived_active_power_total_import_t0_min_timestamp,
          new41.derived_active_power_total_import_t0_min_timestamp
        )
      end derived_active_power_total_import_t0_min_timestamp,
      new41.derived_active_power_total_import_t1_avg_w - coalesce(
        old41.derived_active_power_total_import_t1_avg_w,
        0
      ) derived_active_power_total_import_t1_avg_w,
      greatest(
        new41.derived_active_power_total_import_t1_max_w,
        coalesce(
          old41.derived_active_power_total_import_t1_max_w,
          new41.derived_active_power_total_import_t1_max_w
        )
      ) derived_active_power_total_import_t1_max_w,
      case
        when new41.derived_active_power_total_import_t1_max_w > coalesce(
          old41.derived_active_power_total_import_t1_max_w,
          new41.derived_active_power_total_import_t1_max_w
        ) then new41.derived_active_power_total_import_t1_max_timestamp
        else coalesce(
          old41.derived_active_power_total_import_t1_max_timestamp,
          new41.derived_active_power_total_import_t1_max_timestamp
        )
      end derived_active_power_total_import_t1_max_timestamp,
      least(
        new41.derived_active_power_total_import_t1_min_w,
        coalesce(
          old41.derived_active_power_total_import_t1_min_w,
          new41.derived_active_power_total_import_t1_min_w
        )
      ) derived_active_power_total_import_t1_min_w,
      case
        when new41.derived_active_power_total_import_t1_min_w < coalesce(
          old41.derived_active_power_total_import_t1_min_w,
          new41.derived_active_power_total_import_t1_min_w
        ) then new41.derived_active_power_total_import_t1_min_timestamp
        else coalesce(
          old41.derived_active_power_total_import_t1_min_timestamp,
          new41.derived_active_power_total_import_t1_min_timestamp
        )
      end derived_active_power_total_import_t1_min_timestamp,
      new41.derived_active_power_total_import_t2_avg_w - coalesce(
        old41.derived_active_power_total_import_t2_avg_w,
        0
      ) derived_active_power_total_import_t2_avg_w,
      greatest(
        new41.derived_active_power_total_import_t2_max_w,
        coalesce(
          old41.derived_active_power_total_import_t2_max_w,
          new41.derived_active_power_total_import_t2_max_w
        )
      ) derived_active_power_total_import_t2_max_w,
      case
        when new41.derived_active_power_total_import_t2_max_w > coalesce(
          old41.derived_active_power_total_import_t2_max_w,
          new41.derived_active_power_total_import_t2_max_w
        ) then new41.derived_active_power_total_import_t2_max_timestamp
        else coalesce(
          old41.derived_active_power_total_import_t2_max_timestamp,
          new41.derived_active_power_total_import_t2_max_timestamp
        )
      end derived_active_power_total_import_t2_max_timestamp,
      least(
        new41.derived_active_power_total_import_t2_min_w,
        coalesce(
          old41.derived_active_power_total_import_t2_min_w,
          new41.derived_active_power_total_import_t2_min_w
        )
      ) derived_active_power_total_import_t2_min_w,
      case
        when new41.derived_active_power_total_import_t2_min_w < coalesce(
          old41.derived_active_power_total_import_t2_min_w,
          new41.derived_active_power_total_import_t2_min_w
        ) then new41.derived_active_power_total_import_t2_min_timestamp
        else coalesce(
          old41.derived_active_power_total_import_t2_min_timestamp,
          new41.derived_active_power_total_import_t2_min_timestamp
        )
      end derived_active_power_total_import_t2_min_timestamp,
      new41.derived_reactive_power_l1_export_t0_avg_var - coalesce(
        old41.derived_reactive_power_l1_export_t0_avg_var,
        0
      ) derived_reactive_power_l1_export_t0_avg_var,
      greatest(
        new41.derived_reactive_power_l1_export_t0_max_var,
        coalesce(
          old41.derived_reactive_power_l1_export_t0_max_var,
          new41.derived_reactive_power_l1_export_t0_max_var
        )
      ) derived_reactive_power_l1_export_t0_max_var,
      case
        when new41.derived_reactive_power_l1_export_t0_max_var > coalesce(
          old41.derived_reactive_power_l1_export_t0_max_var,
          new41.derived_reactive_power_l1_export_t0_max_var
        ) then new41.derived_reactive_power_l1_export_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_l1_export_t0_max_timestamp,
          new41.derived_reactive_power_l1_export_t0_max_timestamp
        )
      end derived_reactive_power_l1_export_t0_max_timestamp,
      least(
        new41.derived_reactive_power_l1_export_t0_min_var,
        coalesce(
          old41.derived_reactive_power_l1_export_t0_min_var,
          new41.derived_reactive_power_l1_export_t0_min_var
        )
      ) derived_reactive_power_l1_export_t0_min_var,
      case
        when new41.derived_reactive_power_l1_export_t0_min_var < coalesce(
          old41.derived_reactive_power_l1_export_t0_min_var,
          new41.derived_reactive_power_l1_export_t0_min_var
        ) then new41.derived_reactive_power_l1_export_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_l1_export_t0_min_timestamp,
          new41.derived_reactive_power_l1_export_t0_min_timestamp
        )
      end derived_reactive_power_l1_export_t0_min_timestamp,
      new41.derived_reactive_power_l1_import_t0_avg_var - coalesce(
        old41.derived_reactive_power_l1_import_t0_avg_var,
        0
      ) derived_reactive_power_l1_import_t0_avg_var,
      greatest(
        new41.derived_reactive_power_l1_import_t0_max_var,
        coalesce(
          old41.derived_reactive_power_l1_import_t0_max_var,
          new41.derived_reactive_power_l1_import_t0_max_var
        )
      ) derived_reactive_power_l1_import_t0_max_var,
      case
        when new41.derived_reactive_power_l1_import_t0_max_var > coalesce(
          old41.derived_reactive_power_l1_import_t0_max_var,
          new41.derived_reactive_power_l1_import_t0_max_var
        ) then new41.derived_reactive_power_l1_import_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_l1_import_t0_max_timestamp,
          new41.derived_reactive_power_l1_import_t0_max_timestamp
        )
      end derived_reactive_power_l1_import_t0_max_timestamp,
      least(
        new41.derived_reactive_power_l1_import_t0_min_var,
        coalesce(
          old41.derived_reactive_power_l1_import_t0_min_var,
          new41.derived_reactive_power_l1_import_t0_min_var
        )
      ) derived_reactive_power_l1_import_t0_min_var,
      case
        when new41.derived_reactive_power_l1_import_t0_min_var < coalesce(
          old41.derived_reactive_power_l1_import_t0_min_var,
          new41.derived_reactive_power_l1_import_t0_min_var
        ) then new41.derived_reactive_power_l1_import_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_l1_import_t0_min_timestamp,
          new41.derived_reactive_power_l1_import_t0_min_timestamp
        )
      end derived_reactive_power_l1_import_t0_min_timestamp,
      new41.derived_reactive_power_l2_export_t0_avg_var - coalesce(
        old41.derived_reactive_power_l2_export_t0_avg_var,
        0
      ) derived_reactive_power_l2_export_t0_avg_var,
      greatest(
        new41.derived_reactive_power_l2_export_t0_max_var,
        coalesce(
          old41.derived_reactive_power_l2_export_t0_max_var,
          new41.derived_reactive_power_l2_export_t0_max_var
        )
      ) derived_reactive_power_l2_export_t0_max_var,
      case
        when new41.derived_reactive_power_l2_export_t0_max_var > coalesce(
          old41.derived_reactive_power_l2_export_t0_max_var,
          new41.derived_reactive_power_l2_export_t0_max_var
        ) then new41.derived_reactive_power_l2_export_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_l2_export_t0_max_timestamp,
          new41.derived_reactive_power_l2_export_t0_max_timestamp
        )
      end derived_reactive_power_l2_export_t0_max_timestamp,
      least(
        new41.derived_reactive_power_l2_export_t0_min_var,
        coalesce(
          old41.derived_reactive_power_l2_export_t0_min_var,
          new41.derived_reactive_power_l2_export_t0_min_var
        )
      ) derived_reactive_power_l2_export_t0_min_var,
      case
        when new41.derived_reactive_power_l2_export_t0_min_var < coalesce(
          old41.derived_reactive_power_l2_export_t0_min_var,
          new41.derived_reactive_power_l2_export_t0_min_var
        ) then new41.derived_reactive_power_l2_export_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_l2_export_t0_min_timestamp,
          new41.derived_reactive_power_l2_export_t0_min_timestamp
        )
      end derived_reactive_power_l2_export_t0_min_timestamp,
      new41.derived_reactive_power_l2_import_t0_avg_var - coalesce(
        old41.derived_reactive_power_l2_import_t0_avg_var,
        0
      ) derived_reactive_power_l2_import_t0_avg_var,
      greatest(
        new41.derived_reactive_power_l2_import_t0_max_var,
        coalesce(
          old41.derived_reactive_power_l2_import_t0_max_var,
          new41.derived_reactive_power_l2_import_t0_max_var
        )
      ) derived_reactive_power_l2_import_t0_max_var,
      case
        when new41.derived_reactive_power_l2_import_t0_max_var > coalesce(
          old41.derived_reactive_power_l2_import_t0_max_var,
          new41.derived_reactive_power_l2_import_t0_max_var
        ) then new41.derived_reactive_power_l2_import_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_l2_import_t0_max_timestamp,
          new41.derived_reactive_power_l2_import_t0_max_timestamp
        )
      end derived_reactive_power_l2_import_t0_max_timestamp,
      least(
        new41.derived_reactive_power_l2_import_t0_min_var,
        coalesce(
          old41.derived_reactive_power_l2_import_t0_min_var,
          new41.derived_reactive_power_l2_import_t0_min_var
        )
      ) derived_reactive_power_l2_import_t0_min_var,
      case
        when new41.derived_reactive_power_l2_import_t0_min_var < coalesce(
          old41.derived_reactive_power_l2_import_t0_min_var,
          new41.derived_reactive_power_l2_import_t0_min_var
        ) then new41.derived_reactive_power_l2_import_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_l2_import_t0_min_timestamp,
          new41.derived_reactive_power_l2_import_t0_min_timestamp
        )
      end derived_reactive_power_l2_import_t0_min_timestamp,
      new41.derived_reactive_power_l3_export_t0_avg_var - coalesce(
        old41.derived_reactive_power_l3_export_t0_avg_var,
        0
      ) derived_reactive_power_l3_export_t0_avg_var,
      greatest(
        new41.derived_reactive_power_l3_export_t0_max_var,
        coalesce(
          old41.derived_reactive_power_l3_export_t0_max_var,
          new41.derived_reactive_power_l3_export_t0_max_var
        )
      ) derived_reactive_power_l3_export_t0_max_var,
      case
        when new41.derived_reactive_power_l3_export_t0_max_var > coalesce(
          old41.derived_reactive_power_l3_export_t0_max_var,
          new41.derived_reactive_power_l3_export_t0_max_var
        ) then new41.derived_reactive_power_l3_export_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_l3_export_t0_max_timestamp,
          new41.derived_reactive_power_l3_export_t0_max_timestamp
        )
      end derived_reactive_power_l3_export_t0_max_timestamp,
      least(
        new41.derived_reactive_power_l3_export_t0_min_var,
        coalesce(
          old41.derived_reactive_power_l3_export_t0_min_var,
          new41.derived_reactive_power_l3_export_t0_min_var
        )
      ) derived_reactive_power_l3_export_t0_min_var,
      case
        when new41.derived_reactive_power_l3_export_t0_min_var < coalesce(
          old41.derived_reactive_power_l3_export_t0_min_var,
          new41.derived_reactive_power_l3_export_t0_min_var
        ) then new41.derived_reactive_power_l3_export_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_l3_export_t0_min_timestamp,
          new41.derived_reactive_power_l3_export_t0_min_timestamp
        )
      end derived_reactive_power_l3_export_t0_min_timestamp,
      new41.derived_reactive_power_l3_import_t0_avg_var - coalesce(
        old41.derived_reactive_power_l3_import_t0_avg_var,
        0
      ) derived_reactive_power_l3_import_t0_avg_var,
      greatest(
        new41.derived_reactive_power_l3_import_t0_max_var,
        coalesce(
          old41.derived_reactive_power_l3_import_t0_max_var,
          new41.derived_reactive_power_l3_import_t0_max_var
        )
      ) derived_reactive_power_l3_import_t0_max_var,
      case
        when new41.derived_reactive_power_l3_import_t0_max_var > coalesce(
          old41.derived_reactive_power_l3_import_t0_max_var,
          new41.derived_reactive_power_l3_import_t0_max_var
        ) then new41.derived_reactive_power_l3_import_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_l3_import_t0_max_timestamp,
          new41.derived_reactive_power_l3_import_t0_max_timestamp
        )
      end derived_reactive_power_l3_import_t0_max_timestamp,
      least(
        new41.derived_reactive_power_l3_import_t0_min_var,
        coalesce(
          old41.derived_reactive_power_l3_import_t0_min_var,
          new41.derived_reactive_power_l3_import_t0_min_var
        )
      ) derived_reactive_power_l3_import_t0_min_var,
      case
        when new41.derived_reactive_power_l3_import_t0_min_var < coalesce(
          old41.derived_reactive_power_l3_import_t0_min_var,
          new41.derived_reactive_power_l3_import_t0_min_var
        ) then new41.derived_reactive_power_l3_import_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_l3_import_t0_min_timestamp,
          new41.derived_reactive_power_l3_import_t0_min_timestamp
        )
      end derived_reactive_power_l3_import_t0_min_timestamp,
      new41.derived_reactive_power_total_export_t0_avg_var - coalesce(
        old41.derived_reactive_power_total_export_t0_avg_var,
        0
      ) derived_reactive_power_total_export_t0_avg_var,
      greatest(
        new41.derived_reactive_power_total_export_t0_max_var,
        coalesce(
          old41.derived_reactive_power_total_export_t0_max_var,
          new41.derived_reactive_power_total_export_t0_max_var
        )
      ) derived_reactive_power_total_export_t0_max_var,
      case
        when new41.derived_reactive_power_total_export_t0_max_var > coalesce(
          old41.derived_reactive_power_total_export_t0_max_var,
          new41.derived_reactive_power_total_export_t0_max_var
        ) then new41.derived_reactive_power_total_export_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_total_export_t0_max_timestamp,
          new41.derived_reactive_power_total_export_t0_max_timestamp
        )
      end derived_reactive_power_total_export_t0_max_timestamp,
      least(
        new41.derived_reactive_power_total_export_t0_min_var,
        coalesce(
          old41.derived_reactive_power_total_export_t0_min_var,
          new41.derived_reactive_power_total_export_t0_min_var
        )
      ) derived_reactive_power_total_export_t0_min_var,
      case
        when new41.derived_reactive_power_total_export_t0_min_var < coalesce(
          old41.derived_reactive_power_total_export_t0_min_var,
          new41.derived_reactive_power_total_export_t0_min_var
        ) then new41.derived_reactive_power_total_export_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_total_export_t0_min_timestamp,
          new41.derived_reactive_power_total_export_t0_min_timestamp
        )
      end derived_reactive_power_total_export_t0_min_timestamp,
      new41.derived_reactive_power_total_import_t0_avg_var - coalesce(
        old41.derived_reactive_power_total_import_t0_avg_var,
        0
      ) derived_reactive_power_total_import_t0_avg_var,
      greatest(
        new41.derived_reactive_power_total_import_t0_max_var,
        coalesce(
          old41.derived_reactive_power_total_import_t0_max_var,
          new41.derived_reactive_power_total_import_t0_max_var
        )
      ) derived_reactive_power_total_import_t0_max_var,
      case
        when new41.derived_reactive_power_total_import_t0_max_var > coalesce(
          old41.derived_reactive_power_total_import_t0_max_var,
          new41.derived_reactive_power_total_import_t0_max_var
        ) then new41.derived_reactive_power_total_import_t0_max_timestamp
        else coalesce(
          old41.derived_reactive_power_total_import_t0_max_timestamp,
          new41.derived_reactive_power_total_import_t0_max_timestamp
        )
      end derived_reactive_power_total_import_t0_max_timestamp,
      least(
        new41.derived_reactive_power_total_import_t0_min_var,
        coalesce(
          old41.derived_reactive_power_total_import_t0_min_var,
          new41.derived_reactive_power_total_import_t0_min_var
        )
      ) derived_reactive_power_total_import_t0_min_var,
      case
        when new41.derived_reactive_power_total_import_t0_min_var < coalesce(
          old41.derived_reactive_power_total_import_t0_min_var,
          new41.derived_reactive_power_total_import_t0_min_var
        ) then new41.derived_reactive_power_total_import_t0_min_timestamp
        else coalesce(
          old41.derived_reactive_power_total_import_t0_min_timestamp,
          new41.derived_reactive_power_total_import_t0_min_timestamp
        )
      end derived_reactive_power_total_import_t0_min_timestamp
    from
      new41
      left join old41 on old41.timestamp = new41.timestamp
      and old41.interval = new41.interval
      and old41.meter_id = new41.meter_id
      and old41.measurement_location_id = new41.measurement_location_id
  ),
  daily41 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta41.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta41.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta41.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta41.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta41.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta41.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta41.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta41.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta41.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta41.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta41.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta41.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta41.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta41.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta41.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta41.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta41.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta41.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta41.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta41.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta41.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta41.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta41.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta41.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta41.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta41.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta41.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta41.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta41.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta41.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta41.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta41.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta41.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta41.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta41.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta41.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta41.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta41.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta41.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta41.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta41.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta41.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta41.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta41.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta41.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta41.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta41.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta41.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta41.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta41.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta41.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta41.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta41.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta41.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta41.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta41.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta41.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta41.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta41.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta41.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta41.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta41.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta41.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta41.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta41.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta41.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta41.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta41.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta41.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta41.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta41.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta41.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta41.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta41.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta41.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta41.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta41.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta41.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta41.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta41.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta41.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta41.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta41.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta41.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta41.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta41.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta41.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta41.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta41.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta41.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta41.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta41.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta41.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta41
    where
      abb_b2x_aggregates.timestamp = delta41.daily_timestamp
      and abb_b2x_aggregates.interval = 'day'::interval_entity
      and abb_b2x_aggregates.meter_id = delta41.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta41.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  monthly41 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta41.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta41.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta41.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta41.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta41.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta41.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta41.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta41.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta41.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta41.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta41.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta41.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta41.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta41.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta41.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta41.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta41.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta41.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta41.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta41.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta41.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta41.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta41.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta41.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta41.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta41.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta41.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta41.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta41.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta41.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta41.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta41.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta41.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta41.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta41.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta41.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta41.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta41.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta41.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta41.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta41.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta41.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta41.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta41.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta41.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta41.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta41.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta41.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta41.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta41.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta41.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta41.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta41.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta41.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta41.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta41.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta41.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta41.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta41.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta41.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta41.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta41.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta41.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta41.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta41.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta41.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta41.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta41.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta41.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta41.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta41.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta41.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta41.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta41.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta41.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta41.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta41.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta41.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta41.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta41.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta41.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta41.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta41.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta41.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta41.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta41.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta41.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta41.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta41.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta41.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta41.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta41.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta41.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta41.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta41.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta41.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta41.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta41.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta41.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta41.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta41
    where
      abb_b2x_aggregates.timestamp = delta41.monthly_timestamp
      and abb_b2x_aggregates.interval = 'month'::interval_entity
      and abb_b2x_aggregates.meter_id = delta41.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta41.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  old44 as (
    select
      abb_b2x_aggregates.*
    from
      abb_b2x_aggregates
    where
      abb_b2x_aggregates.timestamp =:'p44_timestamp'::timestamptz
      and abb_b2x_aggregates.interval =:'p44_interval'::interval_entity
      and abb_b2x_aggregates.meter_id =:'p44_meter_id'
      and abb_b2x_aggregates.measurement_location_id =:'p44_measurement_location_id'
  ),
  new44 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p44_timestamp'::timestamptz,
:'p44_interval'::interval_entity,
:'p44_meter_id',
:'p44_measurement_location_id',
:'p44_count',
:'p44_quarter_hour_count',
:'p44_active_energy_l1_export_t0_max_wh',
:'p44_active_energy_l1_export_t0_min_wh',
:'p44_active_energy_l1_import_t0_max_wh',
:'p44_active_energy_l1_import_t0_min_wh',
:'p44_active_energy_l2_export_t0_max_wh',
:'p44_active_energy_l2_export_t0_min_wh',
:'p44_active_energy_l2_import_t0_max_wh',
:'p44_active_energy_l2_import_t0_min_wh',
:'p44_active_energy_l3_export_t0_max_wh',
:'p44_active_energy_l3_export_t0_min_wh',
:'p44_active_energy_l3_import_t0_max_wh',
:'p44_active_energy_l3_import_t0_min_wh',
:'p44_active_energy_total_export_t0_max_wh',
:'p44_active_energy_total_export_t0_min_wh',
:'p44_active_energy_total_import_t0_max_wh',
:'p44_active_energy_total_import_t0_min_wh',
:'p44_active_energy_total_import_t1_max_wh',
:'p44_active_energy_total_import_t1_min_wh',
:'p44_active_energy_total_import_t2_max_wh',
:'p44_active_energy_total_import_t2_min_wh',
:'p44_active_power_l1_net_t0_avg_w',
:'p44_active_power_l1_net_t0_max_w',
:'p44_active_power_l1_net_t0_max_timestamp',
:'p44_active_power_l1_net_t0_min_w',
:'p44_active_power_l1_net_t0_min_timestamp',
:'p44_active_power_l2_net_t0_avg_w',
:'p44_active_power_l2_net_t0_max_w',
:'p44_active_power_l2_net_t0_max_timestamp',
:'p44_active_power_l2_net_t0_min_w',
:'p44_active_power_l2_net_t0_min_timestamp',
:'p44_active_power_l3_net_t0_avg_w',
:'p44_active_power_l3_net_t0_max_w',
:'p44_active_power_l3_net_t0_max_timestamp',
:'p44_active_power_l3_net_t0_min_w',
:'p44_active_power_l3_net_t0_min_timestamp',
:'p44_current_l1_any_t0_avg_a',
:'p44_current_l1_any_t0_max_a',
:'p44_current_l1_any_t0_max_timestamp',
:'p44_current_l1_any_t0_min_a',
:'p44_current_l1_any_t0_min_timestamp',
:'p44_current_l2_any_t0_avg_a',
:'p44_current_l2_any_t0_max_a',
:'p44_current_l2_any_t0_max_timestamp',
:'p44_current_l2_any_t0_min_a',
:'p44_current_l2_any_t0_min_timestamp',
:'p44_current_l3_any_t0_avg_a',
:'p44_current_l3_any_t0_max_a',
:'p44_current_l3_any_t0_max_timestamp',
:'p44_current_l3_any_t0_min_a',
:'p44_current_l3_any_t0_min_timestamp',
:'p44_derived_active_power_l1_export_t0_avg_w',
:'p44_derived_active_power_l1_export_t0_max_w',
:'p44_derived_active_power_l1_export_t0_max_timestamp',
:'p44_derived_active_power_l1_export_t0_min_w',
:'p44_derived_active_power_l1_export_t0_min_timestamp',
:'p44_derived_active_power_l1_import_t0_avg_w',
:'p44_derived_active_power_l1_import_t0_max_w',
:'p44_derived_active_power_l1_import_t0_max_timestamp',
:'p44_derived_active_power_l1_import_t0_min_w',
:'p44_derived_active_power_l1_import_t0_min_timestamp',
:'p44_derived_active_power_l2_export_t0_avg_w',
:'p44_derived_active_power_l2_export_t0_max_w',
:'p44_derived_active_power_l2_export_t0_max_timestamp',
:'p44_derived_active_power_l2_export_t0_min_w',
:'p44_derived_active_power_l2_export_t0_min_timestamp',
:'p44_derived_active_power_l2_import_t0_avg_w',
:'p44_derived_active_power_l2_import_t0_max_w',
:'p44_derived_active_power_l2_import_t0_max_timestamp',
:'p44_derived_active_power_l2_import_t0_min_w',
:'p44_derived_active_power_l2_import_t0_min_timestamp',
:'p44_derived_active_power_l3_export_t0_avg_w',
:'p44_derived_active_power_l3_export_t0_max_w',
:'p44_derived_active_power_l3_export_t0_max_timestamp',
:'p44_derived_active_power_l3_export_t0_min_w',
:'p44_derived_active_power_l3_export_t0_min_timestamp',
:'p44_derived_active_power_l3_import_t0_avg_w',
:'p44_derived_active_power_l3_import_t0_max_w',
:'p44_derived_active_power_l3_import_t0_max_timestamp',
:'p44_derived_active_power_l3_import_t0_min_w',
:'p44_derived_active_power_l3_import_t0_min_timestamp',
:'p44_derived_active_power_total_export_t0_avg_w',
:'p44_derived_active_power_total_export_t0_max_w',
:'p44_derived_active_power_total_export_t0_max_timestamp',
:'p44_derived_active_power_total_export_t0_min_w',
:'p44_derived_active_power_total_export_t0_min_timestamp',
:'p44_derived_active_power_total_import_t0_avg_w',
:'p44_derived_active_power_total_import_t0_max_w',
:'p44_derived_active_power_total_import_t0_max_timestamp',
:'p44_derived_active_power_total_import_t0_min_w',
:'p44_derived_active_power_total_import_t0_min_timestamp',
:'p44_derived_active_power_total_import_t1_avg_w',
:'p44_derived_active_power_total_import_t1_max_w',
:'p44_derived_active_power_total_import_t1_max_timestamp',
:'p44_derived_active_power_total_import_t1_min_w',
:'p44_derived_active_power_total_import_t1_min_timestamp',
:'p44_derived_active_power_total_import_t2_avg_w',
:'p44_derived_active_power_total_import_t2_max_w',
:'p44_derived_active_power_total_import_t2_max_timestamp',
:'p44_derived_active_power_total_import_t2_min_w',
:'p44_derived_active_power_total_import_t2_min_timestamp',
:'p44_derived_reactive_power_l1_export_t0_avg_var',
:'p44_derived_reactive_power_l1_export_t0_max_var',
:'p44_derived_reactive_power_l1_export_t0_max_timestamp',
:'p44_derived_reactive_power_l1_export_t0_min_var',
:'p44_derived_reactive_power_l1_export_t0_min_timestamp',
:'p44_derived_reactive_power_l1_import_t0_avg_var',
:'p44_derived_reactive_power_l1_import_t0_max_var',
:'p44_derived_reactive_power_l1_import_t0_max_timestamp',
:'p44_derived_reactive_power_l1_import_t0_min_var',
:'p44_derived_reactive_power_l1_import_t0_min_timestamp',
:'p44_derived_reactive_power_l2_export_t0_avg_var',
:'p44_derived_reactive_power_l2_export_t0_max_var',
:'p44_derived_reactive_power_l2_export_t0_max_timestamp',
:'p44_derived_reactive_power_l2_export_t0_min_var',
:'p44_derived_reactive_power_l2_export_t0_min_timestamp',
:'p44_derived_reactive_power_l2_import_t0_avg_var',
:'p44_derived_reactive_power_l2_import_t0_max_var',
:'p44_derived_reactive_power_l2_import_t0_max_timestamp',
:'p44_derived_reactive_power_l2_import_t0_min_var',
:'p44_derived_reactive_power_l2_import_t0_min_timestamp',
:'p44_derived_reactive_power_l3_export_t0_avg_var',
:'p44_derived_reactive_power_l3_export_t0_max_var',
:'p44_derived_reactive_power_l3_export_t0_max_timestamp',
:'p44_derived_reactive_power_l3_export_t0_min_var',
:'p44_derived_reactive_power_l3_export_t0_min_timestamp',
:'p44_derived_reactive_power_l3_import_t0_avg_var',
:'p44_derived_reactive_power_l3_import_t0_max_var',
:'p44_derived_reactive_power_l3_import_t0_max_timestamp',
:'p44_derived_reactive_power_l3_import_t0_min_var',
:'p44_derived_reactive_power_l3_import_t0_min_timestamp',
:'p44_derived_reactive_power_total_export_t0_avg_var',
:'p44_derived_reactive_power_total_export_t0_max_var',
:'p44_derived_reactive_power_total_export_t0_max_timestamp',
:'p44_derived_reactive_power_total_export_t0_min_var',
:'p44_derived_reactive_power_total_export_t0_min_timestamp',
:'p44_derived_reactive_power_total_import_t0_avg_var',
:'p44_derived_reactive_power_total_import_t0_max_var',
:'p44_derived_reactive_power_total_import_t0_max_timestamp',
:'p44_derived_reactive_power_total_import_t0_min_var',
:'p44_derived_reactive_power_total_import_t0_min_timestamp',
:'p44_reactive_energy_l1_export_t0_max_varh',
:'p44_reactive_energy_l1_export_t0_min_varh',
:'p44_reactive_energy_l1_import_t0_max_varh',
:'p44_reactive_energy_l1_import_t0_min_varh',
:'p44_reactive_energy_l2_export_t0_max_varh',
:'p44_reactive_energy_l2_export_t0_min_varh',
:'p44_reactive_energy_l2_import_t0_max_varh',
:'p44_reactive_energy_l2_import_t0_min_varh',
:'p44_reactive_energy_l3_export_t0_max_varh',
:'p44_reactive_energy_l3_export_t0_min_varh',
:'p44_reactive_energy_l3_import_t0_max_varh',
:'p44_reactive_energy_l3_import_t0_min_varh',
:'p44_reactive_energy_total_export_t0_max_varh',
:'p44_reactive_energy_total_export_t0_min_varh',
:'p44_reactive_energy_total_import_t0_max_varh',
:'p44_reactive_energy_total_import_t0_min_varh',
:'p44_reactive_power_l1_net_t0_avg_var',
:'p44_reactive_power_l1_net_t0_max_var',
:'p44_reactive_power_l1_net_t0_max_timestamp',
:'p44_reactive_power_l1_net_t0_min_var',
:'p44_reactive_power_l1_net_t0_min_timestamp',
:'p44_reactive_power_l2_net_t0_avg_var',
:'p44_reactive_power_l2_net_t0_max_var',
:'p44_reactive_power_l2_net_t0_max_timestamp',
:'p44_reactive_power_l2_net_t0_min_var',
:'p44_reactive_power_l2_net_t0_min_timestamp',
:'p44_reactive_power_l3_net_t0_avg_var',
:'p44_reactive_power_l3_net_t0_max_var',
:'p44_reactive_power_l3_net_t0_max_timestamp',
:'p44_reactive_power_l3_net_t0_min_var',
:'p44_reactive_power_l3_net_t0_min_timestamp',
:'p44_voltage_l1_any_t0_avg_v',
:'p44_voltage_l1_any_t0_max_v',
:'p44_voltage_l1_any_t0_max_timestamp',
:'p44_voltage_l1_any_t0_min_v',
:'p44_voltage_l1_any_t0_min_timestamp',
:'p44_voltage_l2_any_t0_avg_v',
:'p44_voltage_l2_any_t0_max_v',
:'p44_voltage_l2_any_t0_max_timestamp',
:'p44_voltage_l2_any_t0_min_v',
:'p44_voltage_l2_any_t0_min_timestamp',
:'p44_voltage_l3_any_t0_avg_v',
:'p44_voltage_l3_any_t0_max_v',
:'p44_voltage_l3_any_t0_max_timestamp',
:'p44_voltage_l3_any_t0_min_v',
:'p44_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      quarter_hour_count = 1,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  delta44 as (
    select
      date_trunc(
        'day',
        new44.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' daily_timestamp,
      date_trunc(
        'month',
        new44.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' monthly_timestamp,
      new44.timestamp,
      new44.interval,
      new44.meter_id,
      new44.measurement_location_id,
      case
        when old44.timestamp is null then 1
        else 0
      end new_count,
      new44.derived_active_power_l1_export_t0_avg_w - coalesce(old44.derived_active_power_l1_export_t0_avg_w, 0) derived_active_power_l1_export_t0_avg_w,
      greatest(
        new44.derived_active_power_l1_export_t0_max_w,
        coalesce(
          old44.derived_active_power_l1_export_t0_max_w,
          new44.derived_active_power_l1_export_t0_max_w
        )
      ) derived_active_power_l1_export_t0_max_w,
      case
        when new44.derived_active_power_l1_export_t0_max_w > coalesce(
          old44.derived_active_power_l1_export_t0_max_w,
          new44.derived_active_power_l1_export_t0_max_w
        ) then new44.derived_active_power_l1_export_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_l1_export_t0_max_timestamp,
          new44.derived_active_power_l1_export_t0_max_timestamp
        )
      end derived_active_power_l1_export_t0_max_timestamp,
      least(
        new44.derived_active_power_l1_export_t0_min_w,
        coalesce(
          old44.derived_active_power_l1_export_t0_min_w,
          new44.derived_active_power_l1_export_t0_min_w
        )
      ) derived_active_power_l1_export_t0_min_w,
      case
        when new44.derived_active_power_l1_export_t0_min_w < coalesce(
          old44.derived_active_power_l1_export_t0_min_w,
          new44.derived_active_power_l1_export_t0_min_w
        ) then new44.derived_active_power_l1_export_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_l1_export_t0_min_timestamp,
          new44.derived_active_power_l1_export_t0_min_timestamp
        )
      end derived_active_power_l1_export_t0_min_timestamp,
      new44.derived_active_power_l1_import_t0_avg_w - coalesce(old44.derived_active_power_l1_import_t0_avg_w, 0) derived_active_power_l1_import_t0_avg_w,
      greatest(
        new44.derived_active_power_l1_import_t0_max_w,
        coalesce(
          old44.derived_active_power_l1_import_t0_max_w,
          new44.derived_active_power_l1_import_t0_max_w
        )
      ) derived_active_power_l1_import_t0_max_w,
      case
        when new44.derived_active_power_l1_import_t0_max_w > coalesce(
          old44.derived_active_power_l1_import_t0_max_w,
          new44.derived_active_power_l1_import_t0_max_w
        ) then new44.derived_active_power_l1_import_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_l1_import_t0_max_timestamp,
          new44.derived_active_power_l1_import_t0_max_timestamp
        )
      end derived_active_power_l1_import_t0_max_timestamp,
      least(
        new44.derived_active_power_l1_import_t0_min_w,
        coalesce(
          old44.derived_active_power_l1_import_t0_min_w,
          new44.derived_active_power_l1_import_t0_min_w
        )
      ) derived_active_power_l1_import_t0_min_w,
      case
        when new44.derived_active_power_l1_import_t0_min_w < coalesce(
          old44.derived_active_power_l1_import_t0_min_w,
          new44.derived_active_power_l1_import_t0_min_w
        ) then new44.derived_active_power_l1_import_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_l1_import_t0_min_timestamp,
          new44.derived_active_power_l1_import_t0_min_timestamp
        )
      end derived_active_power_l1_import_t0_min_timestamp,
      new44.derived_active_power_l2_export_t0_avg_w - coalesce(old44.derived_active_power_l2_export_t0_avg_w, 0) derived_active_power_l2_export_t0_avg_w,
      greatest(
        new44.derived_active_power_l2_export_t0_max_w,
        coalesce(
          old44.derived_active_power_l2_export_t0_max_w,
          new44.derived_active_power_l2_export_t0_max_w
        )
      ) derived_active_power_l2_export_t0_max_w,
      case
        when new44.derived_active_power_l2_export_t0_max_w > coalesce(
          old44.derived_active_power_l2_export_t0_max_w,
          new44.derived_active_power_l2_export_t0_max_w
        ) then new44.derived_active_power_l2_export_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_l2_export_t0_max_timestamp,
          new44.derived_active_power_l2_export_t0_max_timestamp
        )
      end derived_active_power_l2_export_t0_max_timestamp,
      least(
        new44.derived_active_power_l2_export_t0_min_w,
        coalesce(
          old44.derived_active_power_l2_export_t0_min_w,
          new44.derived_active_power_l2_export_t0_min_w
        )
      ) derived_active_power_l2_export_t0_min_w,
      case
        when new44.derived_active_power_l2_export_t0_min_w < coalesce(
          old44.derived_active_power_l2_export_t0_min_w,
          new44.derived_active_power_l2_export_t0_min_w
        ) then new44.derived_active_power_l2_export_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_l2_export_t0_min_timestamp,
          new44.derived_active_power_l2_export_t0_min_timestamp
        )
      end derived_active_power_l2_export_t0_min_timestamp,
      new44.derived_active_power_l2_import_t0_avg_w - coalesce(old44.derived_active_power_l2_import_t0_avg_w, 0) derived_active_power_l2_import_t0_avg_w,
      greatest(
        new44.derived_active_power_l2_import_t0_max_w,
        coalesce(
          old44.derived_active_power_l2_import_t0_max_w,
          new44.derived_active_power_l2_import_t0_max_w
        )
      ) derived_active_power_l2_import_t0_max_w,
      case
        when new44.derived_active_power_l2_import_t0_max_w > coalesce(
          old44.derived_active_power_l2_import_t0_max_w,
          new44.derived_active_power_l2_import_t0_max_w
        ) then new44.derived_active_power_l2_import_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_l2_import_t0_max_timestamp,
          new44.derived_active_power_l2_import_t0_max_timestamp
        )
      end derived_active_power_l2_import_t0_max_timestamp,
      least(
        new44.derived_active_power_l2_import_t0_min_w,
        coalesce(
          old44.derived_active_power_l2_import_t0_min_w,
          new44.derived_active_power_l2_import_t0_min_w
        )
      ) derived_active_power_l2_import_t0_min_w,
      case
        when new44.derived_active_power_l2_import_t0_min_w < coalesce(
          old44.derived_active_power_l2_import_t0_min_w,
          new44.derived_active_power_l2_import_t0_min_w
        ) then new44.derived_active_power_l2_import_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_l2_import_t0_min_timestamp,
          new44.derived_active_power_l2_import_t0_min_timestamp
        )
      end derived_active_power_l2_import_t0_min_timestamp,
      new44.derived_active_power_l3_export_t0_avg_w - coalesce(old44.derived_active_power_l3_export_t0_avg_w, 0) derived_active_power_l3_export_t0_avg_w,
      greatest(
        new44.derived_active_power_l3_export_t0_max_w,
        coalesce(
          old44.derived_active_power_l3_export_t0_max_w,
          new44.derived_active_power_l3_export_t0_max_w
        )
      ) derived_active_power_l3_export_t0_max_w,
      case
        when new44.derived_active_power_l3_export_t0_max_w > coalesce(
          old44.derived_active_power_l3_export_t0_max_w,
          new44.derived_active_power_l3_export_t0_max_w
        ) then new44.derived_active_power_l3_export_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_l3_export_t0_max_timestamp,
          new44.derived_active_power_l3_export_t0_max_timestamp
        )
      end derived_active_power_l3_export_t0_max_timestamp,
      least(
        new44.derived_active_power_l3_export_t0_min_w,
        coalesce(
          old44.derived_active_power_l3_export_t0_min_w,
          new44.derived_active_power_l3_export_t0_min_w
        )
      ) derived_active_power_l3_export_t0_min_w,
      case
        when new44.derived_active_power_l3_export_t0_min_w < coalesce(
          old44.derived_active_power_l3_export_t0_min_w,
          new44.derived_active_power_l3_export_t0_min_w
        ) then new44.derived_active_power_l3_export_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_l3_export_t0_min_timestamp,
          new44.derived_active_power_l3_export_t0_min_timestamp
        )
      end derived_active_power_l3_export_t0_min_timestamp,
      new44.derived_active_power_l3_import_t0_avg_w - coalesce(old44.derived_active_power_l3_import_t0_avg_w, 0) derived_active_power_l3_import_t0_avg_w,
      greatest(
        new44.derived_active_power_l3_import_t0_max_w,
        coalesce(
          old44.derived_active_power_l3_import_t0_max_w,
          new44.derived_active_power_l3_import_t0_max_w
        )
      ) derived_active_power_l3_import_t0_max_w,
      case
        when new44.derived_active_power_l3_import_t0_max_w > coalesce(
          old44.derived_active_power_l3_import_t0_max_w,
          new44.derived_active_power_l3_import_t0_max_w
        ) then new44.derived_active_power_l3_import_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_l3_import_t0_max_timestamp,
          new44.derived_active_power_l3_import_t0_max_timestamp
        )
      end derived_active_power_l3_import_t0_max_timestamp,
      least(
        new44.derived_active_power_l3_import_t0_min_w,
        coalesce(
          old44.derived_active_power_l3_import_t0_min_w,
          new44.derived_active_power_l3_import_t0_min_w
        )
      ) derived_active_power_l3_import_t0_min_w,
      case
        when new44.derived_active_power_l3_import_t0_min_w < coalesce(
          old44.derived_active_power_l3_import_t0_min_w,
          new44.derived_active_power_l3_import_t0_min_w
        ) then new44.derived_active_power_l3_import_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_l3_import_t0_min_timestamp,
          new44.derived_active_power_l3_import_t0_min_timestamp
        )
      end derived_active_power_l3_import_t0_min_timestamp,
      new44.derived_active_power_total_export_t0_avg_w - coalesce(
        old44.derived_active_power_total_export_t0_avg_w,
        0
      ) derived_active_power_total_export_t0_avg_w,
      greatest(
        new44.derived_active_power_total_export_t0_max_w,
        coalesce(
          old44.derived_active_power_total_export_t0_max_w,
          new44.derived_active_power_total_export_t0_max_w
        )
      ) derived_active_power_total_export_t0_max_w,
      case
        when new44.derived_active_power_total_export_t0_max_w > coalesce(
          old44.derived_active_power_total_export_t0_max_w,
          new44.derived_active_power_total_export_t0_max_w
        ) then new44.derived_active_power_total_export_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_total_export_t0_max_timestamp,
          new44.derived_active_power_total_export_t0_max_timestamp
        )
      end derived_active_power_total_export_t0_max_timestamp,
      least(
        new44.derived_active_power_total_export_t0_min_w,
        coalesce(
          old44.derived_active_power_total_export_t0_min_w,
          new44.derived_active_power_total_export_t0_min_w
        )
      ) derived_active_power_total_export_t0_min_w,
      case
        when new44.derived_active_power_total_export_t0_min_w < coalesce(
          old44.derived_active_power_total_export_t0_min_w,
          new44.derived_active_power_total_export_t0_min_w
        ) then new44.derived_active_power_total_export_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_total_export_t0_min_timestamp,
          new44.derived_active_power_total_export_t0_min_timestamp
        )
      end derived_active_power_total_export_t0_min_timestamp,
      new44.derived_active_power_total_import_t0_avg_w - coalesce(
        old44.derived_active_power_total_import_t0_avg_w,
        0
      ) derived_active_power_total_import_t0_avg_w,
      greatest(
        new44.derived_active_power_total_import_t0_max_w,
        coalesce(
          old44.derived_active_power_total_import_t0_max_w,
          new44.derived_active_power_total_import_t0_max_w
        )
      ) derived_active_power_total_import_t0_max_w,
      case
        when new44.derived_active_power_total_import_t0_max_w > coalesce(
          old44.derived_active_power_total_import_t0_max_w,
          new44.derived_active_power_total_import_t0_max_w
        ) then new44.derived_active_power_total_import_t0_max_timestamp
        else coalesce(
          old44.derived_active_power_total_import_t0_max_timestamp,
          new44.derived_active_power_total_import_t0_max_timestamp
        )
      end derived_active_power_total_import_t0_max_timestamp,
      least(
        new44.derived_active_power_total_import_t0_min_w,
        coalesce(
          old44.derived_active_power_total_import_t0_min_w,
          new44.derived_active_power_total_import_t0_min_w
        )
      ) derived_active_power_total_import_t0_min_w,
      case
        when new44.derived_active_power_total_import_t0_min_w < coalesce(
          old44.derived_active_power_total_import_t0_min_w,
          new44.derived_active_power_total_import_t0_min_w
        ) then new44.derived_active_power_total_import_t0_min_timestamp
        else coalesce(
          old44.derived_active_power_total_import_t0_min_timestamp,
          new44.derived_active_power_total_import_t0_min_timestamp
        )
      end derived_active_power_total_import_t0_min_timestamp,
      new44.derived_active_power_total_import_t1_avg_w - coalesce(
        old44.derived_active_power_total_import_t1_avg_w,
        0
      ) derived_active_power_total_import_t1_avg_w,
      greatest(
        new44.derived_active_power_total_import_t1_max_w,
        coalesce(
          old44.derived_active_power_total_import_t1_max_w,
          new44.derived_active_power_total_import_t1_max_w
        )
      ) derived_active_power_total_import_t1_max_w,
      case
        when new44.derived_active_power_total_import_t1_max_w > coalesce(
          old44.derived_active_power_total_import_t1_max_w,
          new44.derived_active_power_total_import_t1_max_w
        ) then new44.derived_active_power_total_import_t1_max_timestamp
        else coalesce(
          old44.derived_active_power_total_import_t1_max_timestamp,
          new44.derived_active_power_total_import_t1_max_timestamp
        )
      end derived_active_power_total_import_t1_max_timestamp,
      least(
        new44.derived_active_power_total_import_t1_min_w,
        coalesce(
          old44.derived_active_power_total_import_t1_min_w,
          new44.derived_active_power_total_import_t1_min_w
        )
      ) derived_active_power_total_import_t1_min_w,
      case
        when new44.derived_active_power_total_import_t1_min_w < coalesce(
          old44.derived_active_power_total_import_t1_min_w,
          new44.derived_active_power_total_import_t1_min_w
        ) then new44.derived_active_power_total_import_t1_min_timestamp
        else coalesce(
          old44.derived_active_power_total_import_t1_min_timestamp,
          new44.derived_active_power_total_import_t1_min_timestamp
        )
      end derived_active_power_total_import_t1_min_timestamp,
      new44.derived_active_power_total_import_t2_avg_w - coalesce(
        old44.derived_active_power_total_import_t2_avg_w,
        0
      ) derived_active_power_total_import_t2_avg_w,
      greatest(
        new44.derived_active_power_total_import_t2_max_w,
        coalesce(
          old44.derived_active_power_total_import_t2_max_w,
          new44.derived_active_power_total_import_t2_max_w
        )
      ) derived_active_power_total_import_t2_max_w,
      case
        when new44.derived_active_power_total_import_t2_max_w > coalesce(
          old44.derived_active_power_total_import_t2_max_w,
          new44.derived_active_power_total_import_t2_max_w
        ) then new44.derived_active_power_total_import_t2_max_timestamp
        else coalesce(
          old44.derived_active_power_total_import_t2_max_timestamp,
          new44.derived_active_power_total_import_t2_max_timestamp
        )
      end derived_active_power_total_import_t2_max_timestamp,
      least(
        new44.derived_active_power_total_import_t2_min_w,
        coalesce(
          old44.derived_active_power_total_import_t2_min_w,
          new44.derived_active_power_total_import_t2_min_w
        )
      ) derived_active_power_total_import_t2_min_w,
      case
        when new44.derived_active_power_total_import_t2_min_w < coalesce(
          old44.derived_active_power_total_import_t2_min_w,
          new44.derived_active_power_total_import_t2_min_w
        ) then new44.derived_active_power_total_import_t2_min_timestamp
        else coalesce(
          old44.derived_active_power_total_import_t2_min_timestamp,
          new44.derived_active_power_total_import_t2_min_timestamp
        )
      end derived_active_power_total_import_t2_min_timestamp,
      new44.derived_reactive_power_l1_export_t0_avg_var - coalesce(
        old44.derived_reactive_power_l1_export_t0_avg_var,
        0
      ) derived_reactive_power_l1_export_t0_avg_var,
      greatest(
        new44.derived_reactive_power_l1_export_t0_max_var,
        coalesce(
          old44.derived_reactive_power_l1_export_t0_max_var,
          new44.derived_reactive_power_l1_export_t0_max_var
        )
      ) derived_reactive_power_l1_export_t0_max_var,
      case
        when new44.derived_reactive_power_l1_export_t0_max_var > coalesce(
          old44.derived_reactive_power_l1_export_t0_max_var,
          new44.derived_reactive_power_l1_export_t0_max_var
        ) then new44.derived_reactive_power_l1_export_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_l1_export_t0_max_timestamp,
          new44.derived_reactive_power_l1_export_t0_max_timestamp
        )
      end derived_reactive_power_l1_export_t0_max_timestamp,
      least(
        new44.derived_reactive_power_l1_export_t0_min_var,
        coalesce(
          old44.derived_reactive_power_l1_export_t0_min_var,
          new44.derived_reactive_power_l1_export_t0_min_var
        )
      ) derived_reactive_power_l1_export_t0_min_var,
      case
        when new44.derived_reactive_power_l1_export_t0_min_var < coalesce(
          old44.derived_reactive_power_l1_export_t0_min_var,
          new44.derived_reactive_power_l1_export_t0_min_var
        ) then new44.derived_reactive_power_l1_export_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_l1_export_t0_min_timestamp,
          new44.derived_reactive_power_l1_export_t0_min_timestamp
        )
      end derived_reactive_power_l1_export_t0_min_timestamp,
      new44.derived_reactive_power_l1_import_t0_avg_var - coalesce(
        old44.derived_reactive_power_l1_import_t0_avg_var,
        0
      ) derived_reactive_power_l1_import_t0_avg_var,
      greatest(
        new44.derived_reactive_power_l1_import_t0_max_var,
        coalesce(
          old44.derived_reactive_power_l1_import_t0_max_var,
          new44.derived_reactive_power_l1_import_t0_max_var
        )
      ) derived_reactive_power_l1_import_t0_max_var,
      case
        when new44.derived_reactive_power_l1_import_t0_max_var > coalesce(
          old44.derived_reactive_power_l1_import_t0_max_var,
          new44.derived_reactive_power_l1_import_t0_max_var
        ) then new44.derived_reactive_power_l1_import_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_l1_import_t0_max_timestamp,
          new44.derived_reactive_power_l1_import_t0_max_timestamp
        )
      end derived_reactive_power_l1_import_t0_max_timestamp,
      least(
        new44.derived_reactive_power_l1_import_t0_min_var,
        coalesce(
          old44.derived_reactive_power_l1_import_t0_min_var,
          new44.derived_reactive_power_l1_import_t0_min_var
        )
      ) derived_reactive_power_l1_import_t0_min_var,
      case
        when new44.derived_reactive_power_l1_import_t0_min_var < coalesce(
          old44.derived_reactive_power_l1_import_t0_min_var,
          new44.derived_reactive_power_l1_import_t0_min_var
        ) then new44.derived_reactive_power_l1_import_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_l1_import_t0_min_timestamp,
          new44.derived_reactive_power_l1_import_t0_min_timestamp
        )
      end derived_reactive_power_l1_import_t0_min_timestamp,
      new44.derived_reactive_power_l2_export_t0_avg_var - coalesce(
        old44.derived_reactive_power_l2_export_t0_avg_var,
        0
      ) derived_reactive_power_l2_export_t0_avg_var,
      greatest(
        new44.derived_reactive_power_l2_export_t0_max_var,
        coalesce(
          old44.derived_reactive_power_l2_export_t0_max_var,
          new44.derived_reactive_power_l2_export_t0_max_var
        )
      ) derived_reactive_power_l2_export_t0_max_var,
      case
        when new44.derived_reactive_power_l2_export_t0_max_var > coalesce(
          old44.derived_reactive_power_l2_export_t0_max_var,
          new44.derived_reactive_power_l2_export_t0_max_var
        ) then new44.derived_reactive_power_l2_export_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_l2_export_t0_max_timestamp,
          new44.derived_reactive_power_l2_export_t0_max_timestamp
        )
      end derived_reactive_power_l2_export_t0_max_timestamp,
      least(
        new44.derived_reactive_power_l2_export_t0_min_var,
        coalesce(
          old44.derived_reactive_power_l2_export_t0_min_var,
          new44.derived_reactive_power_l2_export_t0_min_var
        )
      ) derived_reactive_power_l2_export_t0_min_var,
      case
        when new44.derived_reactive_power_l2_export_t0_min_var < coalesce(
          old44.derived_reactive_power_l2_export_t0_min_var,
          new44.derived_reactive_power_l2_export_t0_min_var
        ) then new44.derived_reactive_power_l2_export_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_l2_export_t0_min_timestamp,
          new44.derived_reactive_power_l2_export_t0_min_timestamp
        )
      end derived_reactive_power_l2_export_t0_min_timestamp,
      new44.derived_reactive_power_l2_import_t0_avg_var - coalesce(
        old44.derived_reactive_power_l2_import_t0_avg_var,
        0
      ) derived_reactive_power_l2_import_t0_avg_var,
      greatest(
        new44.derived_reactive_power_l2_import_t0_max_var,
        coalesce(
          old44.derived_reactive_power_l2_import_t0_max_var,
          new44.derived_reactive_power_l2_import_t0_max_var
        )
      ) derived_reactive_power_l2_import_t0_max_var,
      case
        when new44.derived_reactive_power_l2_import_t0_max_var > coalesce(
          old44.derived_reactive_power_l2_import_t0_max_var,
          new44.derived_reactive_power_l2_import_t0_max_var
        ) then new44.derived_reactive_power_l2_import_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_l2_import_t0_max_timestamp,
          new44.derived_reactive_power_l2_import_t0_max_timestamp
        )
      end derived_reactive_power_l2_import_t0_max_timestamp,
      least(
        new44.derived_reactive_power_l2_import_t0_min_var,
        coalesce(
          old44.derived_reactive_power_l2_import_t0_min_var,
          new44.derived_reactive_power_l2_import_t0_min_var
        )
      ) derived_reactive_power_l2_import_t0_min_var,
      case
        when new44.derived_reactive_power_l2_import_t0_min_var < coalesce(
          old44.derived_reactive_power_l2_import_t0_min_var,
          new44.derived_reactive_power_l2_import_t0_min_var
        ) then new44.derived_reactive_power_l2_import_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_l2_import_t0_min_timestamp,
          new44.derived_reactive_power_l2_import_t0_min_timestamp
        )
      end derived_reactive_power_l2_import_t0_min_timestamp,
      new44.derived_reactive_power_l3_export_t0_avg_var - coalesce(
        old44.derived_reactive_power_l3_export_t0_avg_var,
        0
      ) derived_reactive_power_l3_export_t0_avg_var,
      greatest(
        new44.derived_reactive_power_l3_export_t0_max_var,
        coalesce(
          old44.derived_reactive_power_l3_export_t0_max_var,
          new44.derived_reactive_power_l3_export_t0_max_var
        )
      ) derived_reactive_power_l3_export_t0_max_var,
      case
        when new44.derived_reactive_power_l3_export_t0_max_var > coalesce(
          old44.derived_reactive_power_l3_export_t0_max_var,
          new44.derived_reactive_power_l3_export_t0_max_var
        ) then new44.derived_reactive_power_l3_export_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_l3_export_t0_max_timestamp,
          new44.derived_reactive_power_l3_export_t0_max_timestamp
        )
      end derived_reactive_power_l3_export_t0_max_timestamp,
      least(
        new44.derived_reactive_power_l3_export_t0_min_var,
        coalesce(
          old44.derived_reactive_power_l3_export_t0_min_var,
          new44.derived_reactive_power_l3_export_t0_min_var
        )
      ) derived_reactive_power_l3_export_t0_min_var,
      case
        when new44.derived_reactive_power_l3_export_t0_min_var < coalesce(
          old44.derived_reactive_power_l3_export_t0_min_var,
          new44.derived_reactive_power_l3_export_t0_min_var
        ) then new44.derived_reactive_power_l3_export_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_l3_export_t0_min_timestamp,
          new44.derived_reactive_power_l3_export_t0_min_timestamp
        )
      end derived_reactive_power_l3_export_t0_min_timestamp,
      new44.derived_reactive_power_l3_import_t0_avg_var - coalesce(
        old44.derived_reactive_power_l3_import_t0_avg_var,
        0
      ) derived_reactive_power_l3_import_t0_avg_var,
      greatest(
        new44.derived_reactive_power_l3_import_t0_max_var,
        coalesce(
          old44.derived_reactive_power_l3_import_t0_max_var,
          new44.derived_reactive_power_l3_import_t0_max_var
        )
      ) derived_reactive_power_l3_import_t0_max_var,
      case
        when new44.derived_reactive_power_l3_import_t0_max_var > coalesce(
          old44.derived_reactive_power_l3_import_t0_max_var,
          new44.derived_reactive_power_l3_import_t0_max_var
        ) then new44.derived_reactive_power_l3_import_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_l3_import_t0_max_timestamp,
          new44.derived_reactive_power_l3_import_t0_max_timestamp
        )
      end derived_reactive_power_l3_import_t0_max_timestamp,
      least(
        new44.derived_reactive_power_l3_import_t0_min_var,
        coalesce(
          old44.derived_reactive_power_l3_import_t0_min_var,
          new44.derived_reactive_power_l3_import_t0_min_var
        )
      ) derived_reactive_power_l3_import_t0_min_var,
      case
        when new44.derived_reactive_power_l3_import_t0_min_var < coalesce(
          old44.derived_reactive_power_l3_import_t0_min_var,
          new44.derived_reactive_power_l3_import_t0_min_var
        ) then new44.derived_reactive_power_l3_import_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_l3_import_t0_min_timestamp,
          new44.derived_reactive_power_l3_import_t0_min_timestamp
        )
      end derived_reactive_power_l3_import_t0_min_timestamp,
      new44.derived_reactive_power_total_export_t0_avg_var - coalesce(
        old44.derived_reactive_power_total_export_t0_avg_var,
        0
      ) derived_reactive_power_total_export_t0_avg_var,
      greatest(
        new44.derived_reactive_power_total_export_t0_max_var,
        coalesce(
          old44.derived_reactive_power_total_export_t0_max_var,
          new44.derived_reactive_power_total_export_t0_max_var
        )
      ) derived_reactive_power_total_export_t0_max_var,
      case
        when new44.derived_reactive_power_total_export_t0_max_var > coalesce(
          old44.derived_reactive_power_total_export_t0_max_var,
          new44.derived_reactive_power_total_export_t0_max_var
        ) then new44.derived_reactive_power_total_export_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_total_export_t0_max_timestamp,
          new44.derived_reactive_power_total_export_t0_max_timestamp
        )
      end derived_reactive_power_total_export_t0_max_timestamp,
      least(
        new44.derived_reactive_power_total_export_t0_min_var,
        coalesce(
          old44.derived_reactive_power_total_export_t0_min_var,
          new44.derived_reactive_power_total_export_t0_min_var
        )
      ) derived_reactive_power_total_export_t0_min_var,
      case
        when new44.derived_reactive_power_total_export_t0_min_var < coalesce(
          old44.derived_reactive_power_total_export_t0_min_var,
          new44.derived_reactive_power_total_export_t0_min_var
        ) then new44.derived_reactive_power_total_export_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_total_export_t0_min_timestamp,
          new44.derived_reactive_power_total_export_t0_min_timestamp
        )
      end derived_reactive_power_total_export_t0_min_timestamp,
      new44.derived_reactive_power_total_import_t0_avg_var - coalesce(
        old44.derived_reactive_power_total_import_t0_avg_var,
        0
      ) derived_reactive_power_total_import_t0_avg_var,
      greatest(
        new44.derived_reactive_power_total_import_t0_max_var,
        coalesce(
          old44.derived_reactive_power_total_import_t0_max_var,
          new44.derived_reactive_power_total_import_t0_max_var
        )
      ) derived_reactive_power_total_import_t0_max_var,
      case
        when new44.derived_reactive_power_total_import_t0_max_var > coalesce(
          old44.derived_reactive_power_total_import_t0_max_var,
          new44.derived_reactive_power_total_import_t0_max_var
        ) then new44.derived_reactive_power_total_import_t0_max_timestamp
        else coalesce(
          old44.derived_reactive_power_total_import_t0_max_timestamp,
          new44.derived_reactive_power_total_import_t0_max_timestamp
        )
      end derived_reactive_power_total_import_t0_max_timestamp,
      least(
        new44.derived_reactive_power_total_import_t0_min_var,
        coalesce(
          old44.derived_reactive_power_total_import_t0_min_var,
          new44.derived_reactive_power_total_import_t0_min_var
        )
      ) derived_reactive_power_total_import_t0_min_var,
      case
        when new44.derived_reactive_power_total_import_t0_min_var < coalesce(
          old44.derived_reactive_power_total_import_t0_min_var,
          new44.derived_reactive_power_total_import_t0_min_var
        ) then new44.derived_reactive_power_total_import_t0_min_timestamp
        else coalesce(
          old44.derived_reactive_power_total_import_t0_min_timestamp,
          new44.derived_reactive_power_total_import_t0_min_timestamp
        )
      end derived_reactive_power_total_import_t0_min_timestamp
    from
      new44
      left join old44 on old44.timestamp = new44.timestamp
      and old44.interval = new44.interval
      and old44.meter_id = new44.meter_id
      and old44.measurement_location_id = new44.measurement_location_id
  ),
  daily44 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta44.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta44.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta44.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta44.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta44.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta44.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta44.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta44.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta44.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta44.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta44.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta44.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta44.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta44.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta44.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta44.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta44.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta44.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta44.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta44.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta44.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta44.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta44.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta44.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta44.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta44.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta44.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta44.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta44.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta44.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta44.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta44.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta44.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta44.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta44.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta44.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta44.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta44.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta44.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta44.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta44.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta44.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta44.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta44.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta44.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta44.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta44.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta44.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta44.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta44.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta44.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta44.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta44.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta44.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta44.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta44.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta44.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta44.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta44.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta44.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta44.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta44.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta44.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta44.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta44.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta44.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta44.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta44.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta44.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta44.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta44.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta44.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta44.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta44.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta44.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta44.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta44.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta44.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta44.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta44.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta44.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta44.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta44.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta44.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta44.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta44.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta44.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta44.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta44.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta44.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta44.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta44.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta44.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta44
    where
      abb_b2x_aggregates.timestamp = delta44.daily_timestamp
      and abb_b2x_aggregates.interval = 'day'::interval_entity
      and abb_b2x_aggregates.meter_id = delta44.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta44.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  monthly44 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta44.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta44.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta44.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta44.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta44.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta44.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta44.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta44.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta44.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta44.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta44.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta44.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta44.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta44.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta44.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta44.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta44.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta44.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta44.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta44.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta44.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta44.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta44.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta44.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta44.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta44.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta44.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta44.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta44.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta44.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta44.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta44.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta44.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta44.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta44.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta44.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta44.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta44.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta44.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta44.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta44.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta44.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta44.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta44.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta44.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta44.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta44.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta44.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta44.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta44.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta44.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta44.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta44.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta44.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta44.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta44.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta44.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta44.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta44.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta44.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta44.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta44.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta44.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta44.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta44.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta44.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta44.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta44.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta44.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta44.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta44.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta44.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta44.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta44.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta44.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta44.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta44.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta44.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta44.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta44.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta44.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta44.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta44.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta44.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta44.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta44.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta44.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta44.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta44.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta44.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta44.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta44.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta44.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta44.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta44.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta44.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta44.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta44.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta44.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta44.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta44
    where
      abb_b2x_aggregates.timestamp = delta44.monthly_timestamp
      and abb_b2x_aggregates.interval = 'month'::interval_entity
      and abb_b2x_aggregates.meter_id = delta44.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta44.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  old131 as (
    select
      abb_b2x_aggregates.*
    from
      abb_b2x_aggregates
    where
      abb_b2x_aggregates.timestamp =:'p131_timestamp'::timestamptz
      and abb_b2x_aggregates.interval =:'p131_interval'::interval_entity
      and abb_b2x_aggregates.meter_id =:'p131_meter_id'
      and abb_b2x_aggregates.measurement_location_id =:'p131_measurement_location_id'
  ),
  new131 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p131_timestamp'::timestamptz,
:'p131_interval'::interval_entity,
:'p131_meter_id',
:'p131_measurement_location_id',
:'p131_count',
:'p131_quarter_hour_count',
:'p131_active_energy_l1_export_t0_max_wh',
:'p131_active_energy_l1_export_t0_min_wh',
:'p131_active_energy_l1_import_t0_max_wh',
:'p131_active_energy_l1_import_t0_min_wh',
:'p131_active_energy_l2_export_t0_max_wh',
:'p131_active_energy_l2_export_t0_min_wh',
:'p131_active_energy_l2_import_t0_max_wh',
:'p131_active_energy_l2_import_t0_min_wh',
:'p131_active_energy_l3_export_t0_max_wh',
:'p131_active_energy_l3_export_t0_min_wh',
:'p131_active_energy_l3_import_t0_max_wh',
:'p131_active_energy_l3_import_t0_min_wh',
:'p131_active_energy_total_export_t0_max_wh',
:'p131_active_energy_total_export_t0_min_wh',
:'p131_active_energy_total_import_t0_max_wh',
:'p131_active_energy_total_import_t0_min_wh',
:'p131_active_energy_total_import_t1_max_wh',
:'p131_active_energy_total_import_t1_min_wh',
:'p131_active_energy_total_import_t2_max_wh',
:'p131_active_energy_total_import_t2_min_wh',
:'p131_active_power_l1_net_t0_avg_w',
:'p131_active_power_l1_net_t0_max_w',
:'p131_active_power_l1_net_t0_max_timestamp',
:'p131_active_power_l1_net_t0_min_w',
:'p131_active_power_l1_net_t0_min_timestamp',
:'p131_active_power_l2_net_t0_avg_w',
:'p131_active_power_l2_net_t0_max_w',
:'p131_active_power_l2_net_t0_max_timestamp',
:'p131_active_power_l2_net_t0_min_w',
:'p131_active_power_l2_net_t0_min_timestamp',
:'p131_active_power_l3_net_t0_avg_w',
:'p131_active_power_l3_net_t0_max_w',
:'p131_active_power_l3_net_t0_max_timestamp',
:'p131_active_power_l3_net_t0_min_w',
:'p131_active_power_l3_net_t0_min_timestamp',
:'p131_current_l1_any_t0_avg_a',
:'p131_current_l1_any_t0_max_a',
:'p131_current_l1_any_t0_max_timestamp',
:'p131_current_l1_any_t0_min_a',
:'p131_current_l1_any_t0_min_timestamp',
:'p131_current_l2_any_t0_avg_a',
:'p131_current_l2_any_t0_max_a',
:'p131_current_l2_any_t0_max_timestamp',
:'p131_current_l2_any_t0_min_a',
:'p131_current_l2_any_t0_min_timestamp',
:'p131_current_l3_any_t0_avg_a',
:'p131_current_l3_any_t0_max_a',
:'p131_current_l3_any_t0_max_timestamp',
:'p131_current_l3_any_t0_min_a',
:'p131_current_l3_any_t0_min_timestamp',
:'p131_derived_active_power_l1_export_t0_avg_w',
:'p131_derived_active_power_l1_export_t0_max_w',
:'p131_derived_active_power_l1_export_t0_max_timestamp',
:'p131_derived_active_power_l1_export_t0_min_w',
:'p131_derived_active_power_l1_export_t0_min_timestamp',
:'p131_derived_active_power_l1_import_t0_avg_w',
:'p131_derived_active_power_l1_import_t0_max_w',
:'p131_derived_active_power_l1_import_t0_max_timestamp',
:'p131_derived_active_power_l1_import_t0_min_w',
:'p131_derived_active_power_l1_import_t0_min_timestamp',
:'p131_derived_active_power_l2_export_t0_avg_w',
:'p131_derived_active_power_l2_export_t0_max_w',
:'p131_derived_active_power_l2_export_t0_max_timestamp',
:'p131_derived_active_power_l2_export_t0_min_w',
:'p131_derived_active_power_l2_export_t0_min_timestamp',
:'p131_derived_active_power_l2_import_t0_avg_w',
:'p131_derived_active_power_l2_import_t0_max_w',
:'p131_derived_active_power_l2_import_t0_max_timestamp',
:'p131_derived_active_power_l2_import_t0_min_w',
:'p131_derived_active_power_l2_import_t0_min_timestamp',
:'p131_derived_active_power_l3_export_t0_avg_w',
:'p131_derived_active_power_l3_export_t0_max_w',
:'p131_derived_active_power_l3_export_t0_max_timestamp',
:'p131_derived_active_power_l3_export_t0_min_w',
:'p131_derived_active_power_l3_export_t0_min_timestamp',
:'p131_derived_active_power_l3_import_t0_avg_w',
:'p131_derived_active_power_l3_import_t0_max_w',
:'p131_derived_active_power_l3_import_t0_max_timestamp',
:'p131_derived_active_power_l3_import_t0_min_w',
:'p131_derived_active_power_l3_import_t0_min_timestamp',
:'p131_derived_active_power_total_export_t0_avg_w',
:'p131_derived_active_power_total_export_t0_max_w',
:'p131_derived_active_power_total_export_t0_max_timestamp',
:'p131_derived_active_power_total_export_t0_min_w',
:'p131_derived_active_power_total_export_t0_min_timestamp',
:'p131_derived_active_power_total_import_t0_avg_w',
:'p131_derived_active_power_total_import_t0_max_w',
:'p131_derived_active_power_total_import_t0_max_timestamp',
:'p131_derived_active_power_total_import_t0_min_w',
:'p131_derived_active_power_total_import_t0_min_timestamp',
:'p131_derived_active_power_total_import_t1_avg_w',
:'p131_derived_active_power_total_import_t1_max_w',
:'p131_derived_active_power_total_import_t1_max_timestamp',
:'p131_derived_active_power_total_import_t1_min_w',
:'p131_derived_active_power_total_import_t1_min_timestamp',
:'p131_derived_active_power_total_import_t2_avg_w',
:'p131_derived_active_power_total_import_t2_max_w',
:'p131_derived_active_power_total_import_t2_max_timestamp',
:'p131_derived_active_power_total_import_t2_min_w',
:'p131_derived_active_power_total_import_t2_min_timestamp',
:'p131_derived_reactive_power_l1_export_t0_avg_var',
:'p131_derived_reactive_power_l1_export_t0_max_var',
:'p131_derived_reactive_power_l1_export_t0_max_timestamp',
:'p131_derived_reactive_power_l1_export_t0_min_var',
:'p131_derived_reactive_power_l1_export_t0_min_timestamp',
:'p131_derived_reactive_power_l1_import_t0_avg_var',
:'p131_derived_reactive_power_l1_import_t0_max_var',
:'p131_derived_reactive_power_l1_import_t0_max_timestamp',
:'p131_derived_reactive_power_l1_import_t0_min_var',
:'p131_derived_reactive_power_l1_import_t0_min_timestamp',
:'p131_derived_reactive_power_l2_export_t0_avg_var',
:'p131_derived_reactive_power_l2_export_t0_max_var',
:'p131_derived_reactive_power_l2_export_t0_max_timestamp',
:'p131_derived_reactive_power_l2_export_t0_min_var',
:'p131_derived_reactive_power_l2_export_t0_min_timestamp',
:'p131_derived_reactive_power_l2_import_t0_avg_var',
:'p131_derived_reactive_power_l2_import_t0_max_var',
:'p131_derived_reactive_power_l2_import_t0_max_timestamp',
:'p131_derived_reactive_power_l2_import_t0_min_var',
:'p131_derived_reactive_power_l2_import_t0_min_timestamp',
:'p131_derived_reactive_power_l3_export_t0_avg_var',
:'p131_derived_reactive_power_l3_export_t0_max_var',
:'p131_derived_reactive_power_l3_export_t0_max_timestamp',
:'p131_derived_reactive_power_l3_export_t0_min_var',
:'p131_derived_reactive_power_l3_export_t0_min_timestamp',
:'p131_derived_reactive_power_l3_import_t0_avg_var',
:'p131_derived_reactive_power_l3_import_t0_max_var',
:'p131_derived_reactive_power_l3_import_t0_max_timestamp',
:'p131_derived_reactive_power_l3_import_t0_min_var',
:'p131_derived_reactive_power_l3_import_t0_min_timestamp',
:'p131_derived_reactive_power_total_export_t0_avg_var',
:'p131_derived_reactive_power_total_export_t0_max_var',
:'p131_derived_reactive_power_total_export_t0_max_timestamp',
:'p131_derived_reactive_power_total_export_t0_min_var',
:'p131_derived_reactive_power_total_export_t0_min_timestamp',
:'p131_derived_reactive_power_total_import_t0_avg_var',
:'p131_derived_reactive_power_total_import_t0_max_var',
:'p131_derived_reactive_power_total_import_t0_max_timestamp',
:'p131_derived_reactive_power_total_import_t0_min_var',
:'p131_derived_reactive_power_total_import_t0_min_timestamp',
:'p131_reactive_energy_l1_export_t0_max_varh',
:'p131_reactive_energy_l1_export_t0_min_varh',
:'p131_reactive_energy_l1_import_t0_max_varh',
:'p131_reactive_energy_l1_import_t0_min_varh',
:'p131_reactive_energy_l2_export_t0_max_varh',
:'p131_reactive_energy_l2_export_t0_min_varh',
:'p131_reactive_energy_l2_import_t0_max_varh',
:'p131_reactive_energy_l2_import_t0_min_varh',
:'p131_reactive_energy_l3_export_t0_max_varh',
:'p131_reactive_energy_l3_export_t0_min_varh',
:'p131_reactive_energy_l3_import_t0_max_varh',
:'p131_reactive_energy_l3_import_t0_min_varh',
:'p131_reactive_energy_total_export_t0_max_varh',
:'p131_reactive_energy_total_export_t0_min_varh',
:'p131_reactive_energy_total_import_t0_max_varh',
:'p131_reactive_energy_total_import_t0_min_varh',
:'p131_reactive_power_l1_net_t0_avg_var',
:'p131_reactive_power_l1_net_t0_max_var',
:'p131_reactive_power_l1_net_t0_max_timestamp',
:'p131_reactive_power_l1_net_t0_min_var',
:'p131_reactive_power_l1_net_t0_min_timestamp',
:'p131_reactive_power_l2_net_t0_avg_var',
:'p131_reactive_power_l2_net_t0_max_var',
:'p131_reactive_power_l2_net_t0_max_timestamp',
:'p131_reactive_power_l2_net_t0_min_var',
:'p131_reactive_power_l2_net_t0_min_timestamp',
:'p131_reactive_power_l3_net_t0_avg_var',
:'p131_reactive_power_l3_net_t0_max_var',
:'p131_reactive_power_l3_net_t0_max_timestamp',
:'p131_reactive_power_l3_net_t0_min_var',
:'p131_reactive_power_l3_net_t0_min_timestamp',
:'p131_voltage_l1_any_t0_avg_v',
:'p131_voltage_l1_any_t0_max_v',
:'p131_voltage_l1_any_t0_max_timestamp',
:'p131_voltage_l1_any_t0_min_v',
:'p131_voltage_l1_any_t0_min_timestamp',
:'p131_voltage_l2_any_t0_avg_v',
:'p131_voltage_l2_any_t0_max_v',
:'p131_voltage_l2_any_t0_max_timestamp',
:'p131_voltage_l2_any_t0_min_v',
:'p131_voltage_l2_any_t0_min_timestamp',
:'p131_voltage_l3_any_t0_avg_v',
:'p131_voltage_l3_any_t0_max_v',
:'p131_voltage_l3_any_t0_max_timestamp',
:'p131_voltage_l3_any_t0_min_v',
:'p131_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      quarter_hour_count = 1,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  delta131 as (
    select
      date_trunc(
        'day',
        new131.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' daily_timestamp,
      date_trunc(
        'month',
        new131.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' monthly_timestamp,
      new131.timestamp,
      new131.interval,
      new131.meter_id,
      new131.measurement_location_id,
      case
        when old131.timestamp is null then 1
        else 0
      end new_count,
      new131.derived_active_power_l1_export_t0_avg_w - coalesce(old131.derived_active_power_l1_export_t0_avg_w, 0) derived_active_power_l1_export_t0_avg_w,
      greatest(
        new131.derived_active_power_l1_export_t0_max_w,
        coalesce(
          old131.derived_active_power_l1_export_t0_max_w,
          new131.derived_active_power_l1_export_t0_max_w
        )
      ) derived_active_power_l1_export_t0_max_w,
      case
        when new131.derived_active_power_l1_export_t0_max_w > coalesce(
          old131.derived_active_power_l1_export_t0_max_w,
          new131.derived_active_power_l1_export_t0_max_w
        ) then new131.derived_active_power_l1_export_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_l1_export_t0_max_timestamp,
          new131.derived_active_power_l1_export_t0_max_timestamp
        )
      end derived_active_power_l1_export_t0_max_timestamp,
      least(
        new131.derived_active_power_l1_export_t0_min_w,
        coalesce(
          old131.derived_active_power_l1_export_t0_min_w,
          new131.derived_active_power_l1_export_t0_min_w
        )
      ) derived_active_power_l1_export_t0_min_w,
      case
        when new131.derived_active_power_l1_export_t0_min_w < coalesce(
          old131.derived_active_power_l1_export_t0_min_w,
          new131.derived_active_power_l1_export_t0_min_w
        ) then new131.derived_active_power_l1_export_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_l1_export_t0_min_timestamp,
          new131.derived_active_power_l1_export_t0_min_timestamp
        )
      end derived_active_power_l1_export_t0_min_timestamp,
      new131.derived_active_power_l1_import_t0_avg_w - coalesce(old131.derived_active_power_l1_import_t0_avg_w, 0) derived_active_power_l1_import_t0_avg_w,
      greatest(
        new131.derived_active_power_l1_import_t0_max_w,
        coalesce(
          old131.derived_active_power_l1_import_t0_max_w,
          new131.derived_active_power_l1_import_t0_max_w
        )
      ) derived_active_power_l1_import_t0_max_w,
      case
        when new131.derived_active_power_l1_import_t0_max_w > coalesce(
          old131.derived_active_power_l1_import_t0_max_w,
          new131.derived_active_power_l1_import_t0_max_w
        ) then new131.derived_active_power_l1_import_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_l1_import_t0_max_timestamp,
          new131.derived_active_power_l1_import_t0_max_timestamp
        )
      end derived_active_power_l1_import_t0_max_timestamp,
      least(
        new131.derived_active_power_l1_import_t0_min_w,
        coalesce(
          old131.derived_active_power_l1_import_t0_min_w,
          new131.derived_active_power_l1_import_t0_min_w
        )
      ) derived_active_power_l1_import_t0_min_w,
      case
        when new131.derived_active_power_l1_import_t0_min_w < coalesce(
          old131.derived_active_power_l1_import_t0_min_w,
          new131.derived_active_power_l1_import_t0_min_w
        ) then new131.derived_active_power_l1_import_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_l1_import_t0_min_timestamp,
          new131.derived_active_power_l1_import_t0_min_timestamp
        )
      end derived_active_power_l1_import_t0_min_timestamp,
      new131.derived_active_power_l2_export_t0_avg_w - coalesce(old131.derived_active_power_l2_export_t0_avg_w, 0) derived_active_power_l2_export_t0_avg_w,
      greatest(
        new131.derived_active_power_l2_export_t0_max_w,
        coalesce(
          old131.derived_active_power_l2_export_t0_max_w,
          new131.derived_active_power_l2_export_t0_max_w
        )
      ) derived_active_power_l2_export_t0_max_w,
      case
        when new131.derived_active_power_l2_export_t0_max_w > coalesce(
          old131.derived_active_power_l2_export_t0_max_w,
          new131.derived_active_power_l2_export_t0_max_w
        ) then new131.derived_active_power_l2_export_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_l2_export_t0_max_timestamp,
          new131.derived_active_power_l2_export_t0_max_timestamp
        )
      end derived_active_power_l2_export_t0_max_timestamp,
      least(
        new131.derived_active_power_l2_export_t0_min_w,
        coalesce(
          old131.derived_active_power_l2_export_t0_min_w,
          new131.derived_active_power_l2_export_t0_min_w
        )
      ) derived_active_power_l2_export_t0_min_w,
      case
        when new131.derived_active_power_l2_export_t0_min_w < coalesce(
          old131.derived_active_power_l2_export_t0_min_w,
          new131.derived_active_power_l2_export_t0_min_w
        ) then new131.derived_active_power_l2_export_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_l2_export_t0_min_timestamp,
          new131.derived_active_power_l2_export_t0_min_timestamp
        )
      end derived_active_power_l2_export_t0_min_timestamp,
      new131.derived_active_power_l2_import_t0_avg_w - coalesce(old131.derived_active_power_l2_import_t0_avg_w, 0) derived_active_power_l2_import_t0_avg_w,
      greatest(
        new131.derived_active_power_l2_import_t0_max_w,
        coalesce(
          old131.derived_active_power_l2_import_t0_max_w,
          new131.derived_active_power_l2_import_t0_max_w
        )
      ) derived_active_power_l2_import_t0_max_w,
      case
        when new131.derived_active_power_l2_import_t0_max_w > coalesce(
          old131.derived_active_power_l2_import_t0_max_w,
          new131.derived_active_power_l2_import_t0_max_w
        ) then new131.derived_active_power_l2_import_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_l2_import_t0_max_timestamp,
          new131.derived_active_power_l2_import_t0_max_timestamp
        )
      end derived_active_power_l2_import_t0_max_timestamp,
      least(
        new131.derived_active_power_l2_import_t0_min_w,
        coalesce(
          old131.derived_active_power_l2_import_t0_min_w,
          new131.derived_active_power_l2_import_t0_min_w
        )
      ) derived_active_power_l2_import_t0_min_w,
      case
        when new131.derived_active_power_l2_import_t0_min_w < coalesce(
          old131.derived_active_power_l2_import_t0_min_w,
          new131.derived_active_power_l2_import_t0_min_w
        ) then new131.derived_active_power_l2_import_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_l2_import_t0_min_timestamp,
          new131.derived_active_power_l2_import_t0_min_timestamp
        )
      end derived_active_power_l2_import_t0_min_timestamp,
      new131.derived_active_power_l3_export_t0_avg_w - coalesce(old131.derived_active_power_l3_export_t0_avg_w, 0) derived_active_power_l3_export_t0_avg_w,
      greatest(
        new131.derived_active_power_l3_export_t0_max_w,
        coalesce(
          old131.derived_active_power_l3_export_t0_max_w,
          new131.derived_active_power_l3_export_t0_max_w
        )
      ) derived_active_power_l3_export_t0_max_w,
      case
        when new131.derived_active_power_l3_export_t0_max_w > coalesce(
          old131.derived_active_power_l3_export_t0_max_w,
          new131.derived_active_power_l3_export_t0_max_w
        ) then new131.derived_active_power_l3_export_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_l3_export_t0_max_timestamp,
          new131.derived_active_power_l3_export_t0_max_timestamp
        )
      end derived_active_power_l3_export_t0_max_timestamp,
      least(
        new131.derived_active_power_l3_export_t0_min_w,
        coalesce(
          old131.derived_active_power_l3_export_t0_min_w,
          new131.derived_active_power_l3_export_t0_min_w
        )
      ) derived_active_power_l3_export_t0_min_w,
      case
        when new131.derived_active_power_l3_export_t0_min_w < coalesce(
          old131.derived_active_power_l3_export_t0_min_w,
          new131.derived_active_power_l3_export_t0_min_w
        ) then new131.derived_active_power_l3_export_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_l3_export_t0_min_timestamp,
          new131.derived_active_power_l3_export_t0_min_timestamp
        )
      end derived_active_power_l3_export_t0_min_timestamp,
      new131.derived_active_power_l3_import_t0_avg_w - coalesce(old131.derived_active_power_l3_import_t0_avg_w, 0) derived_active_power_l3_import_t0_avg_w,
      greatest(
        new131.derived_active_power_l3_import_t0_max_w,
        coalesce(
          old131.derived_active_power_l3_import_t0_max_w,
          new131.derived_active_power_l3_import_t0_max_w
        )
      ) derived_active_power_l3_import_t0_max_w,
      case
        when new131.derived_active_power_l3_import_t0_max_w > coalesce(
          old131.derived_active_power_l3_import_t0_max_w,
          new131.derived_active_power_l3_import_t0_max_w
        ) then new131.derived_active_power_l3_import_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_l3_import_t0_max_timestamp,
          new131.derived_active_power_l3_import_t0_max_timestamp
        )
      end derived_active_power_l3_import_t0_max_timestamp,
      least(
        new131.derived_active_power_l3_import_t0_min_w,
        coalesce(
          old131.derived_active_power_l3_import_t0_min_w,
          new131.derived_active_power_l3_import_t0_min_w
        )
      ) derived_active_power_l3_import_t0_min_w,
      case
        when new131.derived_active_power_l3_import_t0_min_w < coalesce(
          old131.derived_active_power_l3_import_t0_min_w,
          new131.derived_active_power_l3_import_t0_min_w
        ) then new131.derived_active_power_l3_import_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_l3_import_t0_min_timestamp,
          new131.derived_active_power_l3_import_t0_min_timestamp
        )
      end derived_active_power_l3_import_t0_min_timestamp,
      new131.derived_active_power_total_export_t0_avg_w - coalesce(
        old131.derived_active_power_total_export_t0_avg_w,
        0
      ) derived_active_power_total_export_t0_avg_w,
      greatest(
        new131.derived_active_power_total_export_t0_max_w,
        coalesce(
          old131.derived_active_power_total_export_t0_max_w,
          new131.derived_active_power_total_export_t0_max_w
        )
      ) derived_active_power_total_export_t0_max_w,
      case
        when new131.derived_active_power_total_export_t0_max_w > coalesce(
          old131.derived_active_power_total_export_t0_max_w,
          new131.derived_active_power_total_export_t0_max_w
        ) then new131.derived_active_power_total_export_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_total_export_t0_max_timestamp,
          new131.derived_active_power_total_export_t0_max_timestamp
        )
      end derived_active_power_total_export_t0_max_timestamp,
      least(
        new131.derived_active_power_total_export_t0_min_w,
        coalesce(
          old131.derived_active_power_total_export_t0_min_w,
          new131.derived_active_power_total_export_t0_min_w
        )
      ) derived_active_power_total_export_t0_min_w,
      case
        when new131.derived_active_power_total_export_t0_min_w < coalesce(
          old131.derived_active_power_total_export_t0_min_w,
          new131.derived_active_power_total_export_t0_min_w
        ) then new131.derived_active_power_total_export_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_total_export_t0_min_timestamp,
          new131.derived_active_power_total_export_t0_min_timestamp
        )
      end derived_active_power_total_export_t0_min_timestamp,
      new131.derived_active_power_total_import_t0_avg_w - coalesce(
        old131.derived_active_power_total_import_t0_avg_w,
        0
      ) derived_active_power_total_import_t0_avg_w,
      greatest(
        new131.derived_active_power_total_import_t0_max_w,
        coalesce(
          old131.derived_active_power_total_import_t0_max_w,
          new131.derived_active_power_total_import_t0_max_w
        )
      ) derived_active_power_total_import_t0_max_w,
      case
        when new131.derived_active_power_total_import_t0_max_w > coalesce(
          old131.derived_active_power_total_import_t0_max_w,
          new131.derived_active_power_total_import_t0_max_w
        ) then new131.derived_active_power_total_import_t0_max_timestamp
        else coalesce(
          old131.derived_active_power_total_import_t0_max_timestamp,
          new131.derived_active_power_total_import_t0_max_timestamp
        )
      end derived_active_power_total_import_t0_max_timestamp,
      least(
        new131.derived_active_power_total_import_t0_min_w,
        coalesce(
          old131.derived_active_power_total_import_t0_min_w,
          new131.derived_active_power_total_import_t0_min_w
        )
      ) derived_active_power_total_import_t0_min_w,
      case
        when new131.derived_active_power_total_import_t0_min_w < coalesce(
          old131.derived_active_power_total_import_t0_min_w,
          new131.derived_active_power_total_import_t0_min_w
        ) then new131.derived_active_power_total_import_t0_min_timestamp
        else coalesce(
          old131.derived_active_power_total_import_t0_min_timestamp,
          new131.derived_active_power_total_import_t0_min_timestamp
        )
      end derived_active_power_total_import_t0_min_timestamp,
      new131.derived_active_power_total_import_t1_avg_w - coalesce(
        old131.derived_active_power_total_import_t1_avg_w,
        0
      ) derived_active_power_total_import_t1_avg_w,
      greatest(
        new131.derived_active_power_total_import_t1_max_w,
        coalesce(
          old131.derived_active_power_total_import_t1_max_w,
          new131.derived_active_power_total_import_t1_max_w
        )
      ) derived_active_power_total_import_t1_max_w,
      case
        when new131.derived_active_power_total_import_t1_max_w > coalesce(
          old131.derived_active_power_total_import_t1_max_w,
          new131.derived_active_power_total_import_t1_max_w
        ) then new131.derived_active_power_total_import_t1_max_timestamp
        else coalesce(
          old131.derived_active_power_total_import_t1_max_timestamp,
          new131.derived_active_power_total_import_t1_max_timestamp
        )
      end derived_active_power_total_import_t1_max_timestamp,
      least(
        new131.derived_active_power_total_import_t1_min_w,
        coalesce(
          old131.derived_active_power_total_import_t1_min_w,
          new131.derived_active_power_total_import_t1_min_w
        )
      ) derived_active_power_total_import_t1_min_w,
      case
        when new131.derived_active_power_total_import_t1_min_w < coalesce(
          old131.derived_active_power_total_import_t1_min_w,
          new131.derived_active_power_total_import_t1_min_w
        ) then new131.derived_active_power_total_import_t1_min_timestamp
        else coalesce(
          old131.derived_active_power_total_import_t1_min_timestamp,
          new131.derived_active_power_total_import_t1_min_timestamp
        )
      end derived_active_power_total_import_t1_min_timestamp,
      new131.derived_active_power_total_import_t2_avg_w - coalesce(
        old131.derived_active_power_total_import_t2_avg_w,
        0
      ) derived_active_power_total_import_t2_avg_w,
      greatest(
        new131.derived_active_power_total_import_t2_max_w,
        coalesce(
          old131.derived_active_power_total_import_t2_max_w,
          new131.derived_active_power_total_import_t2_max_w
        )
      ) derived_active_power_total_import_t2_max_w,
      case
        when new131.derived_active_power_total_import_t2_max_w > coalesce(
          old131.derived_active_power_total_import_t2_max_w,
          new131.derived_active_power_total_import_t2_max_w
        ) then new131.derived_active_power_total_import_t2_max_timestamp
        else coalesce(
          old131.derived_active_power_total_import_t2_max_timestamp,
          new131.derived_active_power_total_import_t2_max_timestamp
        )
      end derived_active_power_total_import_t2_max_timestamp,
      least(
        new131.derived_active_power_total_import_t2_min_w,
        coalesce(
          old131.derived_active_power_total_import_t2_min_w,
          new131.derived_active_power_total_import_t2_min_w
        )
      ) derived_active_power_total_import_t2_min_w,
      case
        when new131.derived_active_power_total_import_t2_min_w < coalesce(
          old131.derived_active_power_total_import_t2_min_w,
          new131.derived_active_power_total_import_t2_min_w
        ) then new131.derived_active_power_total_import_t2_min_timestamp
        else coalesce(
          old131.derived_active_power_total_import_t2_min_timestamp,
          new131.derived_active_power_total_import_t2_min_timestamp
        )
      end derived_active_power_total_import_t2_min_timestamp,
      new131.derived_reactive_power_l1_export_t0_avg_var - coalesce(
        old131.derived_reactive_power_l1_export_t0_avg_var,
        0
      ) derived_reactive_power_l1_export_t0_avg_var,
      greatest(
        new131.derived_reactive_power_l1_export_t0_max_var,
        coalesce(
          old131.derived_reactive_power_l1_export_t0_max_var,
          new131.derived_reactive_power_l1_export_t0_max_var
        )
      ) derived_reactive_power_l1_export_t0_max_var,
      case
        when new131.derived_reactive_power_l1_export_t0_max_var > coalesce(
          old131.derived_reactive_power_l1_export_t0_max_var,
          new131.derived_reactive_power_l1_export_t0_max_var
        ) then new131.derived_reactive_power_l1_export_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_l1_export_t0_max_timestamp,
          new131.derived_reactive_power_l1_export_t0_max_timestamp
        )
      end derived_reactive_power_l1_export_t0_max_timestamp,
      least(
        new131.derived_reactive_power_l1_export_t0_min_var,
        coalesce(
          old131.derived_reactive_power_l1_export_t0_min_var,
          new131.derived_reactive_power_l1_export_t0_min_var
        )
      ) derived_reactive_power_l1_export_t0_min_var,
      case
        when new131.derived_reactive_power_l1_export_t0_min_var < coalesce(
          old131.derived_reactive_power_l1_export_t0_min_var,
          new131.derived_reactive_power_l1_export_t0_min_var
        ) then new131.derived_reactive_power_l1_export_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_l1_export_t0_min_timestamp,
          new131.derived_reactive_power_l1_export_t0_min_timestamp
        )
      end derived_reactive_power_l1_export_t0_min_timestamp,
      new131.derived_reactive_power_l1_import_t0_avg_var - coalesce(
        old131.derived_reactive_power_l1_import_t0_avg_var,
        0
      ) derived_reactive_power_l1_import_t0_avg_var,
      greatest(
        new131.derived_reactive_power_l1_import_t0_max_var,
        coalesce(
          old131.derived_reactive_power_l1_import_t0_max_var,
          new131.derived_reactive_power_l1_import_t0_max_var
        )
      ) derived_reactive_power_l1_import_t0_max_var,
      case
        when new131.derived_reactive_power_l1_import_t0_max_var > coalesce(
          old131.derived_reactive_power_l1_import_t0_max_var,
          new131.derived_reactive_power_l1_import_t0_max_var
        ) then new131.derived_reactive_power_l1_import_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_l1_import_t0_max_timestamp,
          new131.derived_reactive_power_l1_import_t0_max_timestamp
        )
      end derived_reactive_power_l1_import_t0_max_timestamp,
      least(
        new131.derived_reactive_power_l1_import_t0_min_var,
        coalesce(
          old131.derived_reactive_power_l1_import_t0_min_var,
          new131.derived_reactive_power_l1_import_t0_min_var
        )
      ) derived_reactive_power_l1_import_t0_min_var,
      case
        when new131.derived_reactive_power_l1_import_t0_min_var < coalesce(
          old131.derived_reactive_power_l1_import_t0_min_var,
          new131.derived_reactive_power_l1_import_t0_min_var
        ) then new131.derived_reactive_power_l1_import_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_l1_import_t0_min_timestamp,
          new131.derived_reactive_power_l1_import_t0_min_timestamp
        )
      end derived_reactive_power_l1_import_t0_min_timestamp,
      new131.derived_reactive_power_l2_export_t0_avg_var - coalesce(
        old131.derived_reactive_power_l2_export_t0_avg_var,
        0
      ) derived_reactive_power_l2_export_t0_avg_var,
      greatest(
        new131.derived_reactive_power_l2_export_t0_max_var,
        coalesce(
          old131.derived_reactive_power_l2_export_t0_max_var,
          new131.derived_reactive_power_l2_export_t0_max_var
        )
      ) derived_reactive_power_l2_export_t0_max_var,
      case
        when new131.derived_reactive_power_l2_export_t0_max_var > coalesce(
          old131.derived_reactive_power_l2_export_t0_max_var,
          new131.derived_reactive_power_l2_export_t0_max_var
        ) then new131.derived_reactive_power_l2_export_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_l2_export_t0_max_timestamp,
          new131.derived_reactive_power_l2_export_t0_max_timestamp
        )
      end derived_reactive_power_l2_export_t0_max_timestamp,
      least(
        new131.derived_reactive_power_l2_export_t0_min_var,
        coalesce(
          old131.derived_reactive_power_l2_export_t0_min_var,
          new131.derived_reactive_power_l2_export_t0_min_var
        )
      ) derived_reactive_power_l2_export_t0_min_var,
      case
        when new131.derived_reactive_power_l2_export_t0_min_var < coalesce(
          old131.derived_reactive_power_l2_export_t0_min_var,
          new131.derived_reactive_power_l2_export_t0_min_var
        ) then new131.derived_reactive_power_l2_export_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_l2_export_t0_min_timestamp,
          new131.derived_reactive_power_l2_export_t0_min_timestamp
        )
      end derived_reactive_power_l2_export_t0_min_timestamp,
      new131.derived_reactive_power_l2_import_t0_avg_var - coalesce(
        old131.derived_reactive_power_l2_import_t0_avg_var,
        0
      ) derived_reactive_power_l2_import_t0_avg_var,
      greatest(
        new131.derived_reactive_power_l2_import_t0_max_var,
        coalesce(
          old131.derived_reactive_power_l2_import_t0_max_var,
          new131.derived_reactive_power_l2_import_t0_max_var
        )
      ) derived_reactive_power_l2_import_t0_max_var,
      case
        when new131.derived_reactive_power_l2_import_t0_max_var > coalesce(
          old131.derived_reactive_power_l2_import_t0_max_var,
          new131.derived_reactive_power_l2_import_t0_max_var
        ) then new131.derived_reactive_power_l2_import_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_l2_import_t0_max_timestamp,
          new131.derived_reactive_power_l2_import_t0_max_timestamp
        )
      end derived_reactive_power_l2_import_t0_max_timestamp,
      least(
        new131.derived_reactive_power_l2_import_t0_min_var,
        coalesce(
          old131.derived_reactive_power_l2_import_t0_min_var,
          new131.derived_reactive_power_l2_import_t0_min_var
        )
      ) derived_reactive_power_l2_import_t0_min_var,
      case
        when new131.derived_reactive_power_l2_import_t0_min_var < coalesce(
          old131.derived_reactive_power_l2_import_t0_min_var,
          new131.derived_reactive_power_l2_import_t0_min_var
        ) then new131.derived_reactive_power_l2_import_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_l2_import_t0_min_timestamp,
          new131.derived_reactive_power_l2_import_t0_min_timestamp
        )
      end derived_reactive_power_l2_import_t0_min_timestamp,
      new131.derived_reactive_power_l3_export_t0_avg_var - coalesce(
        old131.derived_reactive_power_l3_export_t0_avg_var,
        0
      ) derived_reactive_power_l3_export_t0_avg_var,
      greatest(
        new131.derived_reactive_power_l3_export_t0_max_var,
        coalesce(
          old131.derived_reactive_power_l3_export_t0_max_var,
          new131.derived_reactive_power_l3_export_t0_max_var
        )
      ) derived_reactive_power_l3_export_t0_max_var,
      case
        when new131.derived_reactive_power_l3_export_t0_max_var > coalesce(
          old131.derived_reactive_power_l3_export_t0_max_var,
          new131.derived_reactive_power_l3_export_t0_max_var
        ) then new131.derived_reactive_power_l3_export_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_l3_export_t0_max_timestamp,
          new131.derived_reactive_power_l3_export_t0_max_timestamp
        )
      end derived_reactive_power_l3_export_t0_max_timestamp,
      least(
        new131.derived_reactive_power_l3_export_t0_min_var,
        coalesce(
          old131.derived_reactive_power_l3_export_t0_min_var,
          new131.derived_reactive_power_l3_export_t0_min_var
        )
      ) derived_reactive_power_l3_export_t0_min_var,
      case
        when new131.derived_reactive_power_l3_export_t0_min_var < coalesce(
          old131.derived_reactive_power_l3_export_t0_min_var,
          new131.derived_reactive_power_l3_export_t0_min_var
        ) then new131.derived_reactive_power_l3_export_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_l3_export_t0_min_timestamp,
          new131.derived_reactive_power_l3_export_t0_min_timestamp
        )
      end derived_reactive_power_l3_export_t0_min_timestamp,
      new131.derived_reactive_power_l3_import_t0_avg_var - coalesce(
        old131.derived_reactive_power_l3_import_t0_avg_var,
        0
      ) derived_reactive_power_l3_import_t0_avg_var,
      greatest(
        new131.derived_reactive_power_l3_import_t0_max_var,
        coalesce(
          old131.derived_reactive_power_l3_import_t0_max_var,
          new131.derived_reactive_power_l3_import_t0_max_var
        )
      ) derived_reactive_power_l3_import_t0_max_var,
      case
        when new131.derived_reactive_power_l3_import_t0_max_var > coalesce(
          old131.derived_reactive_power_l3_import_t0_max_var,
          new131.derived_reactive_power_l3_import_t0_max_var
        ) then new131.derived_reactive_power_l3_import_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_l3_import_t0_max_timestamp,
          new131.derived_reactive_power_l3_import_t0_max_timestamp
        )
      end derived_reactive_power_l3_import_t0_max_timestamp,
      least(
        new131.derived_reactive_power_l3_import_t0_min_var,
        coalesce(
          old131.derived_reactive_power_l3_import_t0_min_var,
          new131.derived_reactive_power_l3_import_t0_min_var
        )
      ) derived_reactive_power_l3_import_t0_min_var,
      case
        when new131.derived_reactive_power_l3_import_t0_min_var < coalesce(
          old131.derived_reactive_power_l3_import_t0_min_var,
          new131.derived_reactive_power_l3_import_t0_min_var
        ) then new131.derived_reactive_power_l3_import_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_l3_import_t0_min_timestamp,
          new131.derived_reactive_power_l3_import_t0_min_timestamp
        )
      end derived_reactive_power_l3_import_t0_min_timestamp,
      new131.derived_reactive_power_total_export_t0_avg_var - coalesce(
        old131.derived_reactive_power_total_export_t0_avg_var,
        0
      ) derived_reactive_power_total_export_t0_avg_var,
      greatest(
        new131.derived_reactive_power_total_export_t0_max_var,
        coalesce(
          old131.derived_reactive_power_total_export_t0_max_var,
          new131.derived_reactive_power_total_export_t0_max_var
        )
      ) derived_reactive_power_total_export_t0_max_var,
      case
        when new131.derived_reactive_power_total_export_t0_max_var > coalesce(
          old131.derived_reactive_power_total_export_t0_max_var,
          new131.derived_reactive_power_total_export_t0_max_var
        ) then new131.derived_reactive_power_total_export_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_total_export_t0_max_timestamp,
          new131.derived_reactive_power_total_export_t0_max_timestamp
        )
      end derived_reactive_power_total_export_t0_max_timestamp,
      least(
        new131.derived_reactive_power_total_export_t0_min_var,
        coalesce(
          old131.derived_reactive_power_total_export_t0_min_var,
          new131.derived_reactive_power_total_export_t0_min_var
        )
      ) derived_reactive_power_total_export_t0_min_var,
      case
        when new131.derived_reactive_power_total_export_t0_min_var < coalesce(
          old131.derived_reactive_power_total_export_t0_min_var,
          new131.derived_reactive_power_total_export_t0_min_var
        ) then new131.derived_reactive_power_total_export_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_total_export_t0_min_timestamp,
          new131.derived_reactive_power_total_export_t0_min_timestamp
        )
      end derived_reactive_power_total_export_t0_min_timestamp,
      new131.derived_reactive_power_total_import_t0_avg_var - coalesce(
        old131.derived_reactive_power_total_import_t0_avg_var,
        0
      ) derived_reactive_power_total_import_t0_avg_var,
      greatest(
        new131.derived_reactive_power_total_import_t0_max_var,
        coalesce(
          old131.derived_reactive_power_total_import_t0_max_var,
          new131.derived_reactive_power_total_import_t0_max_var
        )
      ) derived_reactive_power_total_import_t0_max_var,
      case
        when new131.derived_reactive_power_total_import_t0_max_var > coalesce(
          old131.derived_reactive_power_total_import_t0_max_var,
          new131.derived_reactive_power_total_import_t0_max_var
        ) then new131.derived_reactive_power_total_import_t0_max_timestamp
        else coalesce(
          old131.derived_reactive_power_total_import_t0_max_timestamp,
          new131.derived_reactive_power_total_import_t0_max_timestamp
        )
      end derived_reactive_power_total_import_t0_max_timestamp,
      least(
        new131.derived_reactive_power_total_import_t0_min_var,
        coalesce(
          old131.derived_reactive_power_total_import_t0_min_var,
          new131.derived_reactive_power_total_import_t0_min_var
        )
      ) derived_reactive_power_total_import_t0_min_var,
      case
        when new131.derived_reactive_power_total_import_t0_min_var < coalesce(
          old131.derived_reactive_power_total_import_t0_min_var,
          new131.derived_reactive_power_total_import_t0_min_var
        ) then new131.derived_reactive_power_total_import_t0_min_timestamp
        else coalesce(
          old131.derived_reactive_power_total_import_t0_min_timestamp,
          new131.derived_reactive_power_total_import_t0_min_timestamp
        )
      end derived_reactive_power_total_import_t0_min_timestamp
    from
      new131
      left join old131 on old131.timestamp = new131.timestamp
      and old131.interval = new131.interval
      and old131.meter_id = new131.meter_id
      and old131.measurement_location_id = new131.measurement_location_id
  ),
  daily131 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta131.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta131.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta131.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta131.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta131.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta131.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta131.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta131.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta131.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta131.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta131.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta131.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta131.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta131.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta131.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta131.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta131.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta131.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta131.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta131.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta131.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta131.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta131.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta131.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta131.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta131.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta131.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta131.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta131.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta131.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta131.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta131.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta131.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta131.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta131.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta131.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta131.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta131.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta131.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta131.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta131.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta131.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta131.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta131.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta131.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta131.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta131.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta131.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta131.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta131.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta131.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta131.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta131.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta131.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta131.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta131.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta131.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta131.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta131.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta131.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta131.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta131.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta131.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta131.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta131.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta131.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta131.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta131.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta131.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta131.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta131.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta131.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta131.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta131.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta131.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta131.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta131.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta131.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta131.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta131.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta131.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta131.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta131.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta131.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta131.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta131.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta131.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta131.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta131.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta131.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta131.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta131.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta131.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta131
    where
      abb_b2x_aggregates.timestamp = delta131.daily_timestamp
      and abb_b2x_aggregates.interval = 'day'::interval_entity
      and abb_b2x_aggregates.meter_id = delta131.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta131.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  monthly131 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta131.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta131.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta131.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta131.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta131.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta131.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta131.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta131.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta131.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta131.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta131.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta131.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta131.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta131.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta131.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta131.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta131.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta131.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta131.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta131.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta131.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta131.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta131.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta131.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta131.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta131.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta131.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta131.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta131.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta131.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta131.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta131.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta131.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta131.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta131.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta131.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta131.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta131.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta131.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta131.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta131.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta131.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta131.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta131.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta131.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta131.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta131.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta131.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta131.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta131.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta131.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta131.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta131.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta131.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta131.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta131.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta131.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta131.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta131.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta131.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta131.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta131.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta131.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta131.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta131.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta131.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta131.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta131.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta131.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta131.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta131.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta131.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta131.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta131.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta131.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta131.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta131.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta131.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta131.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta131.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta131.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta131.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta131.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta131.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta131.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta131.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta131.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta131.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta131.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta131.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta131.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta131.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta131.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta131.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta131.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta131.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta131.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta131.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta131.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta131.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta131
    where
      abb_b2x_aggregates.timestamp = delta131.monthly_timestamp
      and abb_b2x_aggregates.interval = 'month'::interval_entity
      and abb_b2x_aggregates.meter_id = delta131.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta131.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  old134 as (
    select
      abb_b2x_aggregates.*
    from
      abb_b2x_aggregates
    where
      abb_b2x_aggregates.timestamp =:'p134_timestamp'::timestamptz
      and abb_b2x_aggregates.interval =:'p134_interval'::interval_entity
      and abb_b2x_aggregates.meter_id =:'p134_meter_id'
      and abb_b2x_aggregates.measurement_location_id =:'p134_measurement_location_id'
  ),
  new134 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p134_timestamp'::timestamptz,
:'p134_interval'::interval_entity,
:'p134_meter_id',
:'p134_measurement_location_id',
:'p134_count',
:'p134_quarter_hour_count',
:'p134_active_energy_l1_export_t0_max_wh',
:'p134_active_energy_l1_export_t0_min_wh',
:'p134_active_energy_l1_import_t0_max_wh',
:'p134_active_energy_l1_import_t0_min_wh',
:'p134_active_energy_l2_export_t0_max_wh',
:'p134_active_energy_l2_export_t0_min_wh',
:'p134_active_energy_l2_import_t0_max_wh',
:'p134_active_energy_l2_import_t0_min_wh',
:'p134_active_energy_l3_export_t0_max_wh',
:'p134_active_energy_l3_export_t0_min_wh',
:'p134_active_energy_l3_import_t0_max_wh',
:'p134_active_energy_l3_import_t0_min_wh',
:'p134_active_energy_total_export_t0_max_wh',
:'p134_active_energy_total_export_t0_min_wh',
:'p134_active_energy_total_import_t0_max_wh',
:'p134_active_energy_total_import_t0_min_wh',
:'p134_active_energy_total_import_t1_max_wh',
:'p134_active_energy_total_import_t1_min_wh',
:'p134_active_energy_total_import_t2_max_wh',
:'p134_active_energy_total_import_t2_min_wh',
:'p134_active_power_l1_net_t0_avg_w',
:'p134_active_power_l1_net_t0_max_w',
:'p134_active_power_l1_net_t0_max_timestamp',
:'p134_active_power_l1_net_t0_min_w',
:'p134_active_power_l1_net_t0_min_timestamp',
:'p134_active_power_l2_net_t0_avg_w',
:'p134_active_power_l2_net_t0_max_w',
:'p134_active_power_l2_net_t0_max_timestamp',
:'p134_active_power_l2_net_t0_min_w',
:'p134_active_power_l2_net_t0_min_timestamp',
:'p134_active_power_l3_net_t0_avg_w',
:'p134_active_power_l3_net_t0_max_w',
:'p134_active_power_l3_net_t0_max_timestamp',
:'p134_active_power_l3_net_t0_min_w',
:'p134_active_power_l3_net_t0_min_timestamp',
:'p134_current_l1_any_t0_avg_a',
:'p134_current_l1_any_t0_max_a',
:'p134_current_l1_any_t0_max_timestamp',
:'p134_current_l1_any_t0_min_a',
:'p134_current_l1_any_t0_min_timestamp',
:'p134_current_l2_any_t0_avg_a',
:'p134_current_l2_any_t0_max_a',
:'p134_current_l2_any_t0_max_timestamp',
:'p134_current_l2_any_t0_min_a',
:'p134_current_l2_any_t0_min_timestamp',
:'p134_current_l3_any_t0_avg_a',
:'p134_current_l3_any_t0_max_a',
:'p134_current_l3_any_t0_max_timestamp',
:'p134_current_l3_any_t0_min_a',
:'p134_current_l3_any_t0_min_timestamp',
:'p134_derived_active_power_l1_export_t0_avg_w',
:'p134_derived_active_power_l1_export_t0_max_w',
:'p134_derived_active_power_l1_export_t0_max_timestamp',
:'p134_derived_active_power_l1_export_t0_min_w',
:'p134_derived_active_power_l1_export_t0_min_timestamp',
:'p134_derived_active_power_l1_import_t0_avg_w',
:'p134_derived_active_power_l1_import_t0_max_w',
:'p134_derived_active_power_l1_import_t0_max_timestamp',
:'p134_derived_active_power_l1_import_t0_min_w',
:'p134_derived_active_power_l1_import_t0_min_timestamp',
:'p134_derived_active_power_l2_export_t0_avg_w',
:'p134_derived_active_power_l2_export_t0_max_w',
:'p134_derived_active_power_l2_export_t0_max_timestamp',
:'p134_derived_active_power_l2_export_t0_min_w',
:'p134_derived_active_power_l2_export_t0_min_timestamp',
:'p134_derived_active_power_l2_import_t0_avg_w',
:'p134_derived_active_power_l2_import_t0_max_w',
:'p134_derived_active_power_l2_import_t0_max_timestamp',
:'p134_derived_active_power_l2_import_t0_min_w',
:'p134_derived_active_power_l2_import_t0_min_timestamp',
:'p134_derived_active_power_l3_export_t0_avg_w',
:'p134_derived_active_power_l3_export_t0_max_w',
:'p134_derived_active_power_l3_export_t0_max_timestamp',
:'p134_derived_active_power_l3_export_t0_min_w',
:'p134_derived_active_power_l3_export_t0_min_timestamp',
:'p134_derived_active_power_l3_import_t0_avg_w',
:'p134_derived_active_power_l3_import_t0_max_w',
:'p134_derived_active_power_l3_import_t0_max_timestamp',
:'p134_derived_active_power_l3_import_t0_min_w',
:'p134_derived_active_power_l3_import_t0_min_timestamp',
:'p134_derived_active_power_total_export_t0_avg_w',
:'p134_derived_active_power_total_export_t0_max_w',
:'p134_derived_active_power_total_export_t0_max_timestamp',
:'p134_derived_active_power_total_export_t0_min_w',
:'p134_derived_active_power_total_export_t0_min_timestamp',
:'p134_derived_active_power_total_import_t0_avg_w',
:'p134_derived_active_power_total_import_t0_max_w',
:'p134_derived_active_power_total_import_t0_max_timestamp',
:'p134_derived_active_power_total_import_t0_min_w',
:'p134_derived_active_power_total_import_t0_min_timestamp',
:'p134_derived_active_power_total_import_t1_avg_w',
:'p134_derived_active_power_total_import_t1_max_w',
:'p134_derived_active_power_total_import_t1_max_timestamp',
:'p134_derived_active_power_total_import_t1_min_w',
:'p134_derived_active_power_total_import_t1_min_timestamp',
:'p134_derived_active_power_total_import_t2_avg_w',
:'p134_derived_active_power_total_import_t2_max_w',
:'p134_derived_active_power_total_import_t2_max_timestamp',
:'p134_derived_active_power_total_import_t2_min_w',
:'p134_derived_active_power_total_import_t2_min_timestamp',
:'p134_derived_reactive_power_l1_export_t0_avg_var',
:'p134_derived_reactive_power_l1_export_t0_max_var',
:'p134_derived_reactive_power_l1_export_t0_max_timestamp',
:'p134_derived_reactive_power_l1_export_t0_min_var',
:'p134_derived_reactive_power_l1_export_t0_min_timestamp',
:'p134_derived_reactive_power_l1_import_t0_avg_var',
:'p134_derived_reactive_power_l1_import_t0_max_var',
:'p134_derived_reactive_power_l1_import_t0_max_timestamp',
:'p134_derived_reactive_power_l1_import_t0_min_var',
:'p134_derived_reactive_power_l1_import_t0_min_timestamp',
:'p134_derived_reactive_power_l2_export_t0_avg_var',
:'p134_derived_reactive_power_l2_export_t0_max_var',
:'p134_derived_reactive_power_l2_export_t0_max_timestamp',
:'p134_derived_reactive_power_l2_export_t0_min_var',
:'p134_derived_reactive_power_l2_export_t0_min_timestamp',
:'p134_derived_reactive_power_l2_import_t0_avg_var',
:'p134_derived_reactive_power_l2_import_t0_max_var',
:'p134_derived_reactive_power_l2_import_t0_max_timestamp',
:'p134_derived_reactive_power_l2_import_t0_min_var',
:'p134_derived_reactive_power_l2_import_t0_min_timestamp',
:'p134_derived_reactive_power_l3_export_t0_avg_var',
:'p134_derived_reactive_power_l3_export_t0_max_var',
:'p134_derived_reactive_power_l3_export_t0_max_timestamp',
:'p134_derived_reactive_power_l3_export_t0_min_var',
:'p134_derived_reactive_power_l3_export_t0_min_timestamp',
:'p134_derived_reactive_power_l3_import_t0_avg_var',
:'p134_derived_reactive_power_l3_import_t0_max_var',
:'p134_derived_reactive_power_l3_import_t0_max_timestamp',
:'p134_derived_reactive_power_l3_import_t0_min_var',
:'p134_derived_reactive_power_l3_import_t0_min_timestamp',
:'p134_derived_reactive_power_total_export_t0_avg_var',
:'p134_derived_reactive_power_total_export_t0_max_var',
:'p134_derived_reactive_power_total_export_t0_max_timestamp',
:'p134_derived_reactive_power_total_export_t0_min_var',
:'p134_derived_reactive_power_total_export_t0_min_timestamp',
:'p134_derived_reactive_power_total_import_t0_avg_var',
:'p134_derived_reactive_power_total_import_t0_max_var',
:'p134_derived_reactive_power_total_import_t0_max_timestamp',
:'p134_derived_reactive_power_total_import_t0_min_var',
:'p134_derived_reactive_power_total_import_t0_min_timestamp',
:'p134_reactive_energy_l1_export_t0_max_varh',
:'p134_reactive_energy_l1_export_t0_min_varh',
:'p134_reactive_energy_l1_import_t0_max_varh',
:'p134_reactive_energy_l1_import_t0_min_varh',
:'p134_reactive_energy_l2_export_t0_max_varh',
:'p134_reactive_energy_l2_export_t0_min_varh',
:'p134_reactive_energy_l2_import_t0_max_varh',
:'p134_reactive_energy_l2_import_t0_min_varh',
:'p134_reactive_energy_l3_export_t0_max_varh',
:'p134_reactive_energy_l3_export_t0_min_varh',
:'p134_reactive_energy_l3_import_t0_max_varh',
:'p134_reactive_energy_l3_import_t0_min_varh',
:'p134_reactive_energy_total_export_t0_max_varh',
:'p134_reactive_energy_total_export_t0_min_varh',
:'p134_reactive_energy_total_import_t0_max_varh',
:'p134_reactive_energy_total_import_t0_min_varh',
:'p134_reactive_power_l1_net_t0_avg_var',
:'p134_reactive_power_l1_net_t0_max_var',
:'p134_reactive_power_l1_net_t0_max_timestamp',
:'p134_reactive_power_l1_net_t0_min_var',
:'p134_reactive_power_l1_net_t0_min_timestamp',
:'p134_reactive_power_l2_net_t0_avg_var',
:'p134_reactive_power_l2_net_t0_max_var',
:'p134_reactive_power_l2_net_t0_max_timestamp',
:'p134_reactive_power_l2_net_t0_min_var',
:'p134_reactive_power_l2_net_t0_min_timestamp',
:'p134_reactive_power_l3_net_t0_avg_var',
:'p134_reactive_power_l3_net_t0_max_var',
:'p134_reactive_power_l3_net_t0_max_timestamp',
:'p134_reactive_power_l3_net_t0_min_var',
:'p134_reactive_power_l3_net_t0_min_timestamp',
:'p134_voltage_l1_any_t0_avg_v',
:'p134_voltage_l1_any_t0_max_v',
:'p134_voltage_l1_any_t0_max_timestamp',
:'p134_voltage_l1_any_t0_min_v',
:'p134_voltage_l1_any_t0_min_timestamp',
:'p134_voltage_l2_any_t0_avg_v',
:'p134_voltage_l2_any_t0_max_v',
:'p134_voltage_l2_any_t0_max_timestamp',
:'p134_voltage_l2_any_t0_min_v',
:'p134_voltage_l2_any_t0_min_timestamp',
:'p134_voltage_l3_any_t0_avg_v',
:'p134_voltage_l3_any_t0_max_v',
:'p134_voltage_l3_any_t0_max_timestamp',
:'p134_voltage_l3_any_t0_min_v',
:'p134_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      quarter_hour_count = 1,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  delta134 as (
    select
      date_trunc(
        'day',
        new134.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' daily_timestamp,
      date_trunc(
        'month',
        new134.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' monthly_timestamp,
      new134.timestamp,
      new134.interval,
      new134.meter_id,
      new134.measurement_location_id,
      case
        when old134.timestamp is null then 1
        else 0
      end new_count,
      new134.derived_active_power_l1_export_t0_avg_w - coalesce(old134.derived_active_power_l1_export_t0_avg_w, 0) derived_active_power_l1_export_t0_avg_w,
      greatest(
        new134.derived_active_power_l1_export_t0_max_w,
        coalesce(
          old134.derived_active_power_l1_export_t0_max_w,
          new134.derived_active_power_l1_export_t0_max_w
        )
      ) derived_active_power_l1_export_t0_max_w,
      case
        when new134.derived_active_power_l1_export_t0_max_w > coalesce(
          old134.derived_active_power_l1_export_t0_max_w,
          new134.derived_active_power_l1_export_t0_max_w
        ) then new134.derived_active_power_l1_export_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_l1_export_t0_max_timestamp,
          new134.derived_active_power_l1_export_t0_max_timestamp
        )
      end derived_active_power_l1_export_t0_max_timestamp,
      least(
        new134.derived_active_power_l1_export_t0_min_w,
        coalesce(
          old134.derived_active_power_l1_export_t0_min_w,
          new134.derived_active_power_l1_export_t0_min_w
        )
      ) derived_active_power_l1_export_t0_min_w,
      case
        when new134.derived_active_power_l1_export_t0_min_w < coalesce(
          old134.derived_active_power_l1_export_t0_min_w,
          new134.derived_active_power_l1_export_t0_min_w
        ) then new134.derived_active_power_l1_export_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_l1_export_t0_min_timestamp,
          new134.derived_active_power_l1_export_t0_min_timestamp
        )
      end derived_active_power_l1_export_t0_min_timestamp,
      new134.derived_active_power_l1_import_t0_avg_w - coalesce(old134.derived_active_power_l1_import_t0_avg_w, 0) derived_active_power_l1_import_t0_avg_w,
      greatest(
        new134.derived_active_power_l1_import_t0_max_w,
        coalesce(
          old134.derived_active_power_l1_import_t0_max_w,
          new134.derived_active_power_l1_import_t0_max_w
        )
      ) derived_active_power_l1_import_t0_max_w,
      case
        when new134.derived_active_power_l1_import_t0_max_w > coalesce(
          old134.derived_active_power_l1_import_t0_max_w,
          new134.derived_active_power_l1_import_t0_max_w
        ) then new134.derived_active_power_l1_import_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_l1_import_t0_max_timestamp,
          new134.derived_active_power_l1_import_t0_max_timestamp
        )
      end derived_active_power_l1_import_t0_max_timestamp,
      least(
        new134.derived_active_power_l1_import_t0_min_w,
        coalesce(
          old134.derived_active_power_l1_import_t0_min_w,
          new134.derived_active_power_l1_import_t0_min_w
        )
      ) derived_active_power_l1_import_t0_min_w,
      case
        when new134.derived_active_power_l1_import_t0_min_w < coalesce(
          old134.derived_active_power_l1_import_t0_min_w,
          new134.derived_active_power_l1_import_t0_min_w
        ) then new134.derived_active_power_l1_import_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_l1_import_t0_min_timestamp,
          new134.derived_active_power_l1_import_t0_min_timestamp
        )
      end derived_active_power_l1_import_t0_min_timestamp,
      new134.derived_active_power_l2_export_t0_avg_w - coalesce(old134.derived_active_power_l2_export_t0_avg_w, 0) derived_active_power_l2_export_t0_avg_w,
      greatest(
        new134.derived_active_power_l2_export_t0_max_w,
        coalesce(
          old134.derived_active_power_l2_export_t0_max_w,
          new134.derived_active_power_l2_export_t0_max_w
        )
      ) derived_active_power_l2_export_t0_max_w,
      case
        when new134.derived_active_power_l2_export_t0_max_w > coalesce(
          old134.derived_active_power_l2_export_t0_max_w,
          new134.derived_active_power_l2_export_t0_max_w
        ) then new134.derived_active_power_l2_export_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_l2_export_t0_max_timestamp,
          new134.derived_active_power_l2_export_t0_max_timestamp
        )
      end derived_active_power_l2_export_t0_max_timestamp,
      least(
        new134.derived_active_power_l2_export_t0_min_w,
        coalesce(
          old134.derived_active_power_l2_export_t0_min_w,
          new134.derived_active_power_l2_export_t0_min_w
        )
      ) derived_active_power_l2_export_t0_min_w,
      case
        when new134.derived_active_power_l2_export_t0_min_w < coalesce(
          old134.derived_active_power_l2_export_t0_min_w,
          new134.derived_active_power_l2_export_t0_min_w
        ) then new134.derived_active_power_l2_export_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_l2_export_t0_min_timestamp,
          new134.derived_active_power_l2_export_t0_min_timestamp
        )
      end derived_active_power_l2_export_t0_min_timestamp,
      new134.derived_active_power_l2_import_t0_avg_w - coalesce(old134.derived_active_power_l2_import_t0_avg_w, 0) derived_active_power_l2_import_t0_avg_w,
      greatest(
        new134.derived_active_power_l2_import_t0_max_w,
        coalesce(
          old134.derived_active_power_l2_import_t0_max_w,
          new134.derived_active_power_l2_import_t0_max_w
        )
      ) derived_active_power_l2_import_t0_max_w,
      case
        when new134.derived_active_power_l2_import_t0_max_w > coalesce(
          old134.derived_active_power_l2_import_t0_max_w,
          new134.derived_active_power_l2_import_t0_max_w
        ) then new134.derived_active_power_l2_import_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_l2_import_t0_max_timestamp,
          new134.derived_active_power_l2_import_t0_max_timestamp
        )
      end derived_active_power_l2_import_t0_max_timestamp,
      least(
        new134.derived_active_power_l2_import_t0_min_w,
        coalesce(
          old134.derived_active_power_l2_import_t0_min_w,
          new134.derived_active_power_l2_import_t0_min_w
        )
      ) derived_active_power_l2_import_t0_min_w,
      case
        when new134.derived_active_power_l2_import_t0_min_w < coalesce(
          old134.derived_active_power_l2_import_t0_min_w,
          new134.derived_active_power_l2_import_t0_min_w
        ) then new134.derived_active_power_l2_import_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_l2_import_t0_min_timestamp,
          new134.derived_active_power_l2_import_t0_min_timestamp
        )
      end derived_active_power_l2_import_t0_min_timestamp,
      new134.derived_active_power_l3_export_t0_avg_w - coalesce(old134.derived_active_power_l3_export_t0_avg_w, 0) derived_active_power_l3_export_t0_avg_w,
      greatest(
        new134.derived_active_power_l3_export_t0_max_w,
        coalesce(
          old134.derived_active_power_l3_export_t0_max_w,
          new134.derived_active_power_l3_export_t0_max_w
        )
      ) derived_active_power_l3_export_t0_max_w,
      case
        when new134.derived_active_power_l3_export_t0_max_w > coalesce(
          old134.derived_active_power_l3_export_t0_max_w,
          new134.derived_active_power_l3_export_t0_max_w
        ) then new134.derived_active_power_l3_export_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_l3_export_t0_max_timestamp,
          new134.derived_active_power_l3_export_t0_max_timestamp
        )
      end derived_active_power_l3_export_t0_max_timestamp,
      least(
        new134.derived_active_power_l3_export_t0_min_w,
        coalesce(
          old134.derived_active_power_l3_export_t0_min_w,
          new134.derived_active_power_l3_export_t0_min_w
        )
      ) derived_active_power_l3_export_t0_min_w,
      case
        when new134.derived_active_power_l3_export_t0_min_w < coalesce(
          old134.derived_active_power_l3_export_t0_min_w,
          new134.derived_active_power_l3_export_t0_min_w
        ) then new134.derived_active_power_l3_export_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_l3_export_t0_min_timestamp,
          new134.derived_active_power_l3_export_t0_min_timestamp
        )
      end derived_active_power_l3_export_t0_min_timestamp,
      new134.derived_active_power_l3_import_t0_avg_w - coalesce(old134.derived_active_power_l3_import_t0_avg_w, 0) derived_active_power_l3_import_t0_avg_w,
      greatest(
        new134.derived_active_power_l3_import_t0_max_w,
        coalesce(
          old134.derived_active_power_l3_import_t0_max_w,
          new134.derived_active_power_l3_import_t0_max_w
        )
      ) derived_active_power_l3_import_t0_max_w,
      case
        when new134.derived_active_power_l3_import_t0_max_w > coalesce(
          old134.derived_active_power_l3_import_t0_max_w,
          new134.derived_active_power_l3_import_t0_max_w
        ) then new134.derived_active_power_l3_import_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_l3_import_t0_max_timestamp,
          new134.derived_active_power_l3_import_t0_max_timestamp
        )
      end derived_active_power_l3_import_t0_max_timestamp,
      least(
        new134.derived_active_power_l3_import_t0_min_w,
        coalesce(
          old134.derived_active_power_l3_import_t0_min_w,
          new134.derived_active_power_l3_import_t0_min_w
        )
      ) derived_active_power_l3_import_t0_min_w,
      case
        when new134.derived_active_power_l3_import_t0_min_w < coalesce(
          old134.derived_active_power_l3_import_t0_min_w,
          new134.derived_active_power_l3_import_t0_min_w
        ) then new134.derived_active_power_l3_import_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_l3_import_t0_min_timestamp,
          new134.derived_active_power_l3_import_t0_min_timestamp
        )
      end derived_active_power_l3_import_t0_min_timestamp,
      new134.derived_active_power_total_export_t0_avg_w - coalesce(
        old134.derived_active_power_total_export_t0_avg_w,
        0
      ) derived_active_power_total_export_t0_avg_w,
      greatest(
        new134.derived_active_power_total_export_t0_max_w,
        coalesce(
          old134.derived_active_power_total_export_t0_max_w,
          new134.derived_active_power_total_export_t0_max_w
        )
      ) derived_active_power_total_export_t0_max_w,
      case
        when new134.derived_active_power_total_export_t0_max_w > coalesce(
          old134.derived_active_power_total_export_t0_max_w,
          new134.derived_active_power_total_export_t0_max_w
        ) then new134.derived_active_power_total_export_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_total_export_t0_max_timestamp,
          new134.derived_active_power_total_export_t0_max_timestamp
        )
      end derived_active_power_total_export_t0_max_timestamp,
      least(
        new134.derived_active_power_total_export_t0_min_w,
        coalesce(
          old134.derived_active_power_total_export_t0_min_w,
          new134.derived_active_power_total_export_t0_min_w
        )
      ) derived_active_power_total_export_t0_min_w,
      case
        when new134.derived_active_power_total_export_t0_min_w < coalesce(
          old134.derived_active_power_total_export_t0_min_w,
          new134.derived_active_power_total_export_t0_min_w
        ) then new134.derived_active_power_total_export_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_total_export_t0_min_timestamp,
          new134.derived_active_power_total_export_t0_min_timestamp
        )
      end derived_active_power_total_export_t0_min_timestamp,
      new134.derived_active_power_total_import_t0_avg_w - coalesce(
        old134.derived_active_power_total_import_t0_avg_w,
        0
      ) derived_active_power_total_import_t0_avg_w,
      greatest(
        new134.derived_active_power_total_import_t0_max_w,
        coalesce(
          old134.derived_active_power_total_import_t0_max_w,
          new134.derived_active_power_total_import_t0_max_w
        )
      ) derived_active_power_total_import_t0_max_w,
      case
        when new134.derived_active_power_total_import_t0_max_w > coalesce(
          old134.derived_active_power_total_import_t0_max_w,
          new134.derived_active_power_total_import_t0_max_w
        ) then new134.derived_active_power_total_import_t0_max_timestamp
        else coalesce(
          old134.derived_active_power_total_import_t0_max_timestamp,
          new134.derived_active_power_total_import_t0_max_timestamp
        )
      end derived_active_power_total_import_t0_max_timestamp,
      least(
        new134.derived_active_power_total_import_t0_min_w,
        coalesce(
          old134.derived_active_power_total_import_t0_min_w,
          new134.derived_active_power_total_import_t0_min_w
        )
      ) derived_active_power_total_import_t0_min_w,
      case
        when new134.derived_active_power_total_import_t0_min_w < coalesce(
          old134.derived_active_power_total_import_t0_min_w,
          new134.derived_active_power_total_import_t0_min_w
        ) then new134.derived_active_power_total_import_t0_min_timestamp
        else coalesce(
          old134.derived_active_power_total_import_t0_min_timestamp,
          new134.derived_active_power_total_import_t0_min_timestamp
        )
      end derived_active_power_total_import_t0_min_timestamp,
      new134.derived_active_power_total_import_t1_avg_w - coalesce(
        old134.derived_active_power_total_import_t1_avg_w,
        0
      ) derived_active_power_total_import_t1_avg_w,
      greatest(
        new134.derived_active_power_total_import_t1_max_w,
        coalesce(
          old134.derived_active_power_total_import_t1_max_w,
          new134.derived_active_power_total_import_t1_max_w
        )
      ) derived_active_power_total_import_t1_max_w,
      case
        when new134.derived_active_power_total_import_t1_max_w > coalesce(
          old134.derived_active_power_total_import_t1_max_w,
          new134.derived_active_power_total_import_t1_max_w
        ) then new134.derived_active_power_total_import_t1_max_timestamp
        else coalesce(
          old134.derived_active_power_total_import_t1_max_timestamp,
          new134.derived_active_power_total_import_t1_max_timestamp
        )
      end derived_active_power_total_import_t1_max_timestamp,
      least(
        new134.derived_active_power_total_import_t1_min_w,
        coalesce(
          old134.derived_active_power_total_import_t1_min_w,
          new134.derived_active_power_total_import_t1_min_w
        )
      ) derived_active_power_total_import_t1_min_w,
      case
        when new134.derived_active_power_total_import_t1_min_w < coalesce(
          old134.derived_active_power_total_import_t1_min_w,
          new134.derived_active_power_total_import_t1_min_w
        ) then new134.derived_active_power_total_import_t1_min_timestamp
        else coalesce(
          old134.derived_active_power_total_import_t1_min_timestamp,
          new134.derived_active_power_total_import_t1_min_timestamp
        )
      end derived_active_power_total_import_t1_min_timestamp,
      new134.derived_active_power_total_import_t2_avg_w - coalesce(
        old134.derived_active_power_total_import_t2_avg_w,
        0
      ) derived_active_power_total_import_t2_avg_w,
      greatest(
        new134.derived_active_power_total_import_t2_max_w,
        coalesce(
          old134.derived_active_power_total_import_t2_max_w,
          new134.derived_active_power_total_import_t2_max_w
        )
      ) derived_active_power_total_import_t2_max_w,
      case
        when new134.derived_active_power_total_import_t2_max_w > coalesce(
          old134.derived_active_power_total_import_t2_max_w,
          new134.derived_active_power_total_import_t2_max_w
        ) then new134.derived_active_power_total_import_t2_max_timestamp
        else coalesce(
          old134.derived_active_power_total_import_t2_max_timestamp,
          new134.derived_active_power_total_import_t2_max_timestamp
        )
      end derived_active_power_total_import_t2_max_timestamp,
      least(
        new134.derived_active_power_total_import_t2_min_w,
        coalesce(
          old134.derived_active_power_total_import_t2_min_w,
          new134.derived_active_power_total_import_t2_min_w
        )
      ) derived_active_power_total_import_t2_min_w,
      case
        when new134.derived_active_power_total_import_t2_min_w < coalesce(
          old134.derived_active_power_total_import_t2_min_w,
          new134.derived_active_power_total_import_t2_min_w
        ) then new134.derived_active_power_total_import_t2_min_timestamp
        else coalesce(
          old134.derived_active_power_total_import_t2_min_timestamp,
          new134.derived_active_power_total_import_t2_min_timestamp
        )
      end derived_active_power_total_import_t2_min_timestamp,
      new134.derived_reactive_power_l1_export_t0_avg_var - coalesce(
        old134.derived_reactive_power_l1_export_t0_avg_var,
        0
      ) derived_reactive_power_l1_export_t0_avg_var,
      greatest(
        new134.derived_reactive_power_l1_export_t0_max_var,
        coalesce(
          old134.derived_reactive_power_l1_export_t0_max_var,
          new134.derived_reactive_power_l1_export_t0_max_var
        )
      ) derived_reactive_power_l1_export_t0_max_var,
      case
        when new134.derived_reactive_power_l1_export_t0_max_var > coalesce(
          old134.derived_reactive_power_l1_export_t0_max_var,
          new134.derived_reactive_power_l1_export_t0_max_var
        ) then new134.derived_reactive_power_l1_export_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_l1_export_t0_max_timestamp,
          new134.derived_reactive_power_l1_export_t0_max_timestamp
        )
      end derived_reactive_power_l1_export_t0_max_timestamp,
      least(
        new134.derived_reactive_power_l1_export_t0_min_var,
        coalesce(
          old134.derived_reactive_power_l1_export_t0_min_var,
          new134.derived_reactive_power_l1_export_t0_min_var
        )
      ) derived_reactive_power_l1_export_t0_min_var,
      case
        when new134.derived_reactive_power_l1_export_t0_min_var < coalesce(
          old134.derived_reactive_power_l1_export_t0_min_var,
          new134.derived_reactive_power_l1_export_t0_min_var
        ) then new134.derived_reactive_power_l1_export_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_l1_export_t0_min_timestamp,
          new134.derived_reactive_power_l1_export_t0_min_timestamp
        )
      end derived_reactive_power_l1_export_t0_min_timestamp,
      new134.derived_reactive_power_l1_import_t0_avg_var - coalesce(
        old134.derived_reactive_power_l1_import_t0_avg_var,
        0
      ) derived_reactive_power_l1_import_t0_avg_var,
      greatest(
        new134.derived_reactive_power_l1_import_t0_max_var,
        coalesce(
          old134.derived_reactive_power_l1_import_t0_max_var,
          new134.derived_reactive_power_l1_import_t0_max_var
        )
      ) derived_reactive_power_l1_import_t0_max_var,
      case
        when new134.derived_reactive_power_l1_import_t0_max_var > coalesce(
          old134.derived_reactive_power_l1_import_t0_max_var,
          new134.derived_reactive_power_l1_import_t0_max_var
        ) then new134.derived_reactive_power_l1_import_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_l1_import_t0_max_timestamp,
          new134.derived_reactive_power_l1_import_t0_max_timestamp
        )
      end derived_reactive_power_l1_import_t0_max_timestamp,
      least(
        new134.derived_reactive_power_l1_import_t0_min_var,
        coalesce(
          old134.derived_reactive_power_l1_import_t0_min_var,
          new134.derived_reactive_power_l1_import_t0_min_var
        )
      ) derived_reactive_power_l1_import_t0_min_var,
      case
        when new134.derived_reactive_power_l1_import_t0_min_var < coalesce(
          old134.derived_reactive_power_l1_import_t0_min_var,
          new134.derived_reactive_power_l1_import_t0_min_var
        ) then new134.derived_reactive_power_l1_import_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_l1_import_t0_min_timestamp,
          new134.derived_reactive_power_l1_import_t0_min_timestamp
        )
      end derived_reactive_power_l1_import_t0_min_timestamp,
      new134.derived_reactive_power_l2_export_t0_avg_var - coalesce(
        old134.derived_reactive_power_l2_export_t0_avg_var,
        0
      ) derived_reactive_power_l2_export_t0_avg_var,
      greatest(
        new134.derived_reactive_power_l2_export_t0_max_var,
        coalesce(
          old134.derived_reactive_power_l2_export_t0_max_var,
          new134.derived_reactive_power_l2_export_t0_max_var
        )
      ) derived_reactive_power_l2_export_t0_max_var,
      case
        when new134.derived_reactive_power_l2_export_t0_max_var > coalesce(
          old134.derived_reactive_power_l2_export_t0_max_var,
          new134.derived_reactive_power_l2_export_t0_max_var
        ) then new134.derived_reactive_power_l2_export_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_l2_export_t0_max_timestamp,
          new134.derived_reactive_power_l2_export_t0_max_timestamp
        )
      end derived_reactive_power_l2_export_t0_max_timestamp,
      least(
        new134.derived_reactive_power_l2_export_t0_min_var,
        coalesce(
          old134.derived_reactive_power_l2_export_t0_min_var,
          new134.derived_reactive_power_l2_export_t0_min_var
        )
      ) derived_reactive_power_l2_export_t0_min_var,
      case
        when new134.derived_reactive_power_l2_export_t0_min_var < coalesce(
          old134.derived_reactive_power_l2_export_t0_min_var,
          new134.derived_reactive_power_l2_export_t0_min_var
        ) then new134.derived_reactive_power_l2_export_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_l2_export_t0_min_timestamp,
          new134.derived_reactive_power_l2_export_t0_min_timestamp
        )
      end derived_reactive_power_l2_export_t0_min_timestamp,
      new134.derived_reactive_power_l2_import_t0_avg_var - coalesce(
        old134.derived_reactive_power_l2_import_t0_avg_var,
        0
      ) derived_reactive_power_l2_import_t0_avg_var,
      greatest(
        new134.derived_reactive_power_l2_import_t0_max_var,
        coalesce(
          old134.derived_reactive_power_l2_import_t0_max_var,
          new134.derived_reactive_power_l2_import_t0_max_var
        )
      ) derived_reactive_power_l2_import_t0_max_var,
      case
        when new134.derived_reactive_power_l2_import_t0_max_var > coalesce(
          old134.derived_reactive_power_l2_import_t0_max_var,
          new134.derived_reactive_power_l2_import_t0_max_var
        ) then new134.derived_reactive_power_l2_import_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_l2_import_t0_max_timestamp,
          new134.derived_reactive_power_l2_import_t0_max_timestamp
        )
      end derived_reactive_power_l2_import_t0_max_timestamp,
      least(
        new134.derived_reactive_power_l2_import_t0_min_var,
        coalesce(
          old134.derived_reactive_power_l2_import_t0_min_var,
          new134.derived_reactive_power_l2_import_t0_min_var
        )
      ) derived_reactive_power_l2_import_t0_min_var,
      case
        when new134.derived_reactive_power_l2_import_t0_min_var < coalesce(
          old134.derived_reactive_power_l2_import_t0_min_var,
          new134.derived_reactive_power_l2_import_t0_min_var
        ) then new134.derived_reactive_power_l2_import_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_l2_import_t0_min_timestamp,
          new134.derived_reactive_power_l2_import_t0_min_timestamp
        )
      end derived_reactive_power_l2_import_t0_min_timestamp,
      new134.derived_reactive_power_l3_export_t0_avg_var - coalesce(
        old134.derived_reactive_power_l3_export_t0_avg_var,
        0
      ) derived_reactive_power_l3_export_t0_avg_var,
      greatest(
        new134.derived_reactive_power_l3_export_t0_max_var,
        coalesce(
          old134.derived_reactive_power_l3_export_t0_max_var,
          new134.derived_reactive_power_l3_export_t0_max_var
        )
      ) derived_reactive_power_l3_export_t0_max_var,
      case
        when new134.derived_reactive_power_l3_export_t0_max_var > coalesce(
          old134.derived_reactive_power_l3_export_t0_max_var,
          new134.derived_reactive_power_l3_export_t0_max_var
        ) then new134.derived_reactive_power_l3_export_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_l3_export_t0_max_timestamp,
          new134.derived_reactive_power_l3_export_t0_max_timestamp
        )
      end derived_reactive_power_l3_export_t0_max_timestamp,
      least(
        new134.derived_reactive_power_l3_export_t0_min_var,
        coalesce(
          old134.derived_reactive_power_l3_export_t0_min_var,
          new134.derived_reactive_power_l3_export_t0_min_var
        )
      ) derived_reactive_power_l3_export_t0_min_var,
      case
        when new134.derived_reactive_power_l3_export_t0_min_var < coalesce(
          old134.derived_reactive_power_l3_export_t0_min_var,
          new134.derived_reactive_power_l3_export_t0_min_var
        ) then new134.derived_reactive_power_l3_export_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_l3_export_t0_min_timestamp,
          new134.derived_reactive_power_l3_export_t0_min_timestamp
        )
      end derived_reactive_power_l3_export_t0_min_timestamp,
      new134.derived_reactive_power_l3_import_t0_avg_var - coalesce(
        old134.derived_reactive_power_l3_import_t0_avg_var,
        0
      ) derived_reactive_power_l3_import_t0_avg_var,
      greatest(
        new134.derived_reactive_power_l3_import_t0_max_var,
        coalesce(
          old134.derived_reactive_power_l3_import_t0_max_var,
          new134.derived_reactive_power_l3_import_t0_max_var
        )
      ) derived_reactive_power_l3_import_t0_max_var,
      case
        when new134.derived_reactive_power_l3_import_t0_max_var > coalesce(
          old134.derived_reactive_power_l3_import_t0_max_var,
          new134.derived_reactive_power_l3_import_t0_max_var
        ) then new134.derived_reactive_power_l3_import_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_l3_import_t0_max_timestamp,
          new134.derived_reactive_power_l3_import_t0_max_timestamp
        )
      end derived_reactive_power_l3_import_t0_max_timestamp,
      least(
        new134.derived_reactive_power_l3_import_t0_min_var,
        coalesce(
          old134.derived_reactive_power_l3_import_t0_min_var,
          new134.derived_reactive_power_l3_import_t0_min_var
        )
      ) derived_reactive_power_l3_import_t0_min_var,
      case
        when new134.derived_reactive_power_l3_import_t0_min_var < coalesce(
          old134.derived_reactive_power_l3_import_t0_min_var,
          new134.derived_reactive_power_l3_import_t0_min_var
        ) then new134.derived_reactive_power_l3_import_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_l3_import_t0_min_timestamp,
          new134.derived_reactive_power_l3_import_t0_min_timestamp
        )
      end derived_reactive_power_l3_import_t0_min_timestamp,
      new134.derived_reactive_power_total_export_t0_avg_var - coalesce(
        old134.derived_reactive_power_total_export_t0_avg_var,
        0
      ) derived_reactive_power_total_export_t0_avg_var,
      greatest(
        new134.derived_reactive_power_total_export_t0_max_var,
        coalesce(
          old134.derived_reactive_power_total_export_t0_max_var,
          new134.derived_reactive_power_total_export_t0_max_var
        )
      ) derived_reactive_power_total_export_t0_max_var,
      case
        when new134.derived_reactive_power_total_export_t0_max_var > coalesce(
          old134.derived_reactive_power_total_export_t0_max_var,
          new134.derived_reactive_power_total_export_t0_max_var
        ) then new134.derived_reactive_power_total_export_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_total_export_t0_max_timestamp,
          new134.derived_reactive_power_total_export_t0_max_timestamp
        )
      end derived_reactive_power_total_export_t0_max_timestamp,
      least(
        new134.derived_reactive_power_total_export_t0_min_var,
        coalesce(
          old134.derived_reactive_power_total_export_t0_min_var,
          new134.derived_reactive_power_total_export_t0_min_var
        )
      ) derived_reactive_power_total_export_t0_min_var,
      case
        when new134.derived_reactive_power_total_export_t0_min_var < coalesce(
          old134.derived_reactive_power_total_export_t0_min_var,
          new134.derived_reactive_power_total_export_t0_min_var
        ) then new134.derived_reactive_power_total_export_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_total_export_t0_min_timestamp,
          new134.derived_reactive_power_total_export_t0_min_timestamp
        )
      end derived_reactive_power_total_export_t0_min_timestamp,
      new134.derived_reactive_power_total_import_t0_avg_var - coalesce(
        old134.derived_reactive_power_total_import_t0_avg_var,
        0
      ) derived_reactive_power_total_import_t0_avg_var,
      greatest(
        new134.derived_reactive_power_total_import_t0_max_var,
        coalesce(
          old134.derived_reactive_power_total_import_t0_max_var,
          new134.derived_reactive_power_total_import_t0_max_var
        )
      ) derived_reactive_power_total_import_t0_max_var,
      case
        when new134.derived_reactive_power_total_import_t0_max_var > coalesce(
          old134.derived_reactive_power_total_import_t0_max_var,
          new134.derived_reactive_power_total_import_t0_max_var
        ) then new134.derived_reactive_power_total_import_t0_max_timestamp
        else coalesce(
          old134.derived_reactive_power_total_import_t0_max_timestamp,
          new134.derived_reactive_power_total_import_t0_max_timestamp
        )
      end derived_reactive_power_total_import_t0_max_timestamp,
      least(
        new134.derived_reactive_power_total_import_t0_min_var,
        coalesce(
          old134.derived_reactive_power_total_import_t0_min_var,
          new134.derived_reactive_power_total_import_t0_min_var
        )
      ) derived_reactive_power_total_import_t0_min_var,
      case
        when new134.derived_reactive_power_total_import_t0_min_var < coalesce(
          old134.derived_reactive_power_total_import_t0_min_var,
          new134.derived_reactive_power_total_import_t0_min_var
        ) then new134.derived_reactive_power_total_import_t0_min_timestamp
        else coalesce(
          old134.derived_reactive_power_total_import_t0_min_timestamp,
          new134.derived_reactive_power_total_import_t0_min_timestamp
        )
      end derived_reactive_power_total_import_t0_min_timestamp
    from
      new134
      left join old134 on old134.timestamp = new134.timestamp
      and old134.interval = new134.interval
      and old134.meter_id = new134.meter_id
      and old134.measurement_location_id = new134.measurement_location_id
  ),
  daily134 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta134.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta134.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta134.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta134.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta134.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta134.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta134.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta134.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta134.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta134.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta134.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta134.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta134.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta134.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta134.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta134.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta134.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta134.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta134.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta134.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta134.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta134.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta134.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta134.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta134.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta134.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta134.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta134.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta134.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta134.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta134.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta134.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta134.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta134.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta134.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta134.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta134.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta134.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta134.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta134.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta134.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta134.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta134.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta134.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta134.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta134.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta134.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta134.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta134.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta134.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta134.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta134.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta134.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta134.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta134.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta134.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta134.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta134.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta134.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta134.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta134.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta134.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta134.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta134.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta134.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta134.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta134.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta134.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta134.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta134.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta134.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta134.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta134.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta134.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta134.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta134.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta134.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta134.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta134.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta134.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta134.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta134.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta134.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta134.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta134.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta134.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta134.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta134.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta134.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta134.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta134.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta134.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta134.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta134
    where
      abb_b2x_aggregates.timestamp = delta134.daily_timestamp
      and abb_b2x_aggregates.interval = 'day'::interval_entity
      and abb_b2x_aggregates.meter_id = delta134.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta134.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  monthly134 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta134.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta134.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta134.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta134.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta134.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta134.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta134.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta134.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta134.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta134.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta134.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta134.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta134.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta134.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta134.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta134.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta134.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta134.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta134.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta134.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta134.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta134.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta134.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta134.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta134.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta134.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta134.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta134.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta134.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta134.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta134.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta134.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta134.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta134.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta134.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta134.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta134.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta134.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta134.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta134.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta134.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta134.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta134.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta134.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta134.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta134.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta134.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta134.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta134.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta134.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta134.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta134.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta134.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta134.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta134.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta134.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta134.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta134.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta134.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta134.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta134.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta134.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta134.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta134.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta134.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta134.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta134.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta134.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta134.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta134.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta134.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta134.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta134.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta134.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta134.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta134.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta134.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta134.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta134.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta134.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta134.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta134.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta134.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta134.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta134.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta134.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta134.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta134.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta134.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta134.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta134.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta134.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta134.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta134.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta134.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta134.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta134.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta134.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta134.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta134.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta134
    where
      abb_b2x_aggregates.timestamp = delta134.monthly_timestamp
      and abb_b2x_aggregates.interval = 'month'::interval_entity
      and abb_b2x_aggregates.meter_id = delta134.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta134.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  old221 as (
    select
      abb_b2x_aggregates.*
    from
      abb_b2x_aggregates
    where
      abb_b2x_aggregates.timestamp =:'p221_timestamp'::timestamptz
      and abb_b2x_aggregates.interval =:'p221_interval'::interval_entity
      and abb_b2x_aggregates.meter_id =:'p221_meter_id'
      and abb_b2x_aggregates.measurement_location_id =:'p221_measurement_location_id'
  ),
  new221 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p221_timestamp'::timestamptz,
:'p221_interval'::interval_entity,
:'p221_meter_id',
:'p221_measurement_location_id',
:'p221_count',
:'p221_quarter_hour_count',
:'p221_active_energy_l1_export_t0_max_wh',
:'p221_active_energy_l1_export_t0_min_wh',
:'p221_active_energy_l1_import_t0_max_wh',
:'p221_active_energy_l1_import_t0_min_wh',
:'p221_active_energy_l2_export_t0_max_wh',
:'p221_active_energy_l2_export_t0_min_wh',
:'p221_active_energy_l2_import_t0_max_wh',
:'p221_active_energy_l2_import_t0_min_wh',
:'p221_active_energy_l3_export_t0_max_wh',
:'p221_active_energy_l3_export_t0_min_wh',
:'p221_active_energy_l3_import_t0_max_wh',
:'p221_active_energy_l3_import_t0_min_wh',
:'p221_active_energy_total_export_t0_max_wh',
:'p221_active_energy_total_export_t0_min_wh',
:'p221_active_energy_total_import_t0_max_wh',
:'p221_active_energy_total_import_t0_min_wh',
:'p221_active_energy_total_import_t1_max_wh',
:'p221_active_energy_total_import_t1_min_wh',
:'p221_active_energy_total_import_t2_max_wh',
:'p221_active_energy_total_import_t2_min_wh',
:'p221_active_power_l1_net_t0_avg_w',
:'p221_active_power_l1_net_t0_max_w',
:'p221_active_power_l1_net_t0_max_timestamp',
:'p221_active_power_l1_net_t0_min_w',
:'p221_active_power_l1_net_t0_min_timestamp',
:'p221_active_power_l2_net_t0_avg_w',
:'p221_active_power_l2_net_t0_max_w',
:'p221_active_power_l2_net_t0_max_timestamp',
:'p221_active_power_l2_net_t0_min_w',
:'p221_active_power_l2_net_t0_min_timestamp',
:'p221_active_power_l3_net_t0_avg_w',
:'p221_active_power_l3_net_t0_max_w',
:'p221_active_power_l3_net_t0_max_timestamp',
:'p221_active_power_l3_net_t0_min_w',
:'p221_active_power_l3_net_t0_min_timestamp',
:'p221_current_l1_any_t0_avg_a',
:'p221_current_l1_any_t0_max_a',
:'p221_current_l1_any_t0_max_timestamp',
:'p221_current_l1_any_t0_min_a',
:'p221_current_l1_any_t0_min_timestamp',
:'p221_current_l2_any_t0_avg_a',
:'p221_current_l2_any_t0_max_a',
:'p221_current_l2_any_t0_max_timestamp',
:'p221_current_l2_any_t0_min_a',
:'p221_current_l2_any_t0_min_timestamp',
:'p221_current_l3_any_t0_avg_a',
:'p221_current_l3_any_t0_max_a',
:'p221_current_l3_any_t0_max_timestamp',
:'p221_current_l3_any_t0_min_a',
:'p221_current_l3_any_t0_min_timestamp',
:'p221_derived_active_power_l1_export_t0_avg_w',
:'p221_derived_active_power_l1_export_t0_max_w',
:'p221_derived_active_power_l1_export_t0_max_timestamp',
:'p221_derived_active_power_l1_export_t0_min_w',
:'p221_derived_active_power_l1_export_t0_min_timestamp',
:'p221_derived_active_power_l1_import_t0_avg_w',
:'p221_derived_active_power_l1_import_t0_max_w',
:'p221_derived_active_power_l1_import_t0_max_timestamp',
:'p221_derived_active_power_l1_import_t0_min_w',
:'p221_derived_active_power_l1_import_t0_min_timestamp',
:'p221_derived_active_power_l2_export_t0_avg_w',
:'p221_derived_active_power_l2_export_t0_max_w',
:'p221_derived_active_power_l2_export_t0_max_timestamp',
:'p221_derived_active_power_l2_export_t0_min_w',
:'p221_derived_active_power_l2_export_t0_min_timestamp',
:'p221_derived_active_power_l2_import_t0_avg_w',
:'p221_derived_active_power_l2_import_t0_max_w',
:'p221_derived_active_power_l2_import_t0_max_timestamp',
:'p221_derived_active_power_l2_import_t0_min_w',
:'p221_derived_active_power_l2_import_t0_min_timestamp',
:'p221_derived_active_power_l3_export_t0_avg_w',
:'p221_derived_active_power_l3_export_t0_max_w',
:'p221_derived_active_power_l3_export_t0_max_timestamp',
:'p221_derived_active_power_l3_export_t0_min_w',
:'p221_derived_active_power_l3_export_t0_min_timestamp',
:'p221_derived_active_power_l3_import_t0_avg_w',
:'p221_derived_active_power_l3_import_t0_max_w',
:'p221_derived_active_power_l3_import_t0_max_timestamp',
:'p221_derived_active_power_l3_import_t0_min_w',
:'p221_derived_active_power_l3_import_t0_min_timestamp',
:'p221_derived_active_power_total_export_t0_avg_w',
:'p221_derived_active_power_total_export_t0_max_w',
:'p221_derived_active_power_total_export_t0_max_timestamp',
:'p221_derived_active_power_total_export_t0_min_w',
:'p221_derived_active_power_total_export_t0_min_timestamp',
:'p221_derived_active_power_total_import_t0_avg_w',
:'p221_derived_active_power_total_import_t0_max_w',
:'p221_derived_active_power_total_import_t0_max_timestamp',
:'p221_derived_active_power_total_import_t0_min_w',
:'p221_derived_active_power_total_import_t0_min_timestamp',
:'p221_derived_active_power_total_import_t1_avg_w',
:'p221_derived_active_power_total_import_t1_max_w',
:'p221_derived_active_power_total_import_t1_max_timestamp',
:'p221_derived_active_power_total_import_t1_min_w',
:'p221_derived_active_power_total_import_t1_min_timestamp',
:'p221_derived_active_power_total_import_t2_avg_w',
:'p221_derived_active_power_total_import_t2_max_w',
:'p221_derived_active_power_total_import_t2_max_timestamp',
:'p221_derived_active_power_total_import_t2_min_w',
:'p221_derived_active_power_total_import_t2_min_timestamp',
:'p221_derived_reactive_power_l1_export_t0_avg_var',
:'p221_derived_reactive_power_l1_export_t0_max_var',
:'p221_derived_reactive_power_l1_export_t0_max_timestamp',
:'p221_derived_reactive_power_l1_export_t0_min_var',
:'p221_derived_reactive_power_l1_export_t0_min_timestamp',
:'p221_derived_reactive_power_l1_import_t0_avg_var',
:'p221_derived_reactive_power_l1_import_t0_max_var',
:'p221_derived_reactive_power_l1_import_t0_max_timestamp',
:'p221_derived_reactive_power_l1_import_t0_min_var',
:'p221_derived_reactive_power_l1_import_t0_min_timestamp',
:'p221_derived_reactive_power_l2_export_t0_avg_var',
:'p221_derived_reactive_power_l2_export_t0_max_var',
:'p221_derived_reactive_power_l2_export_t0_max_timestamp',
:'p221_derived_reactive_power_l2_export_t0_min_var',
:'p221_derived_reactive_power_l2_export_t0_min_timestamp',
:'p221_derived_reactive_power_l2_import_t0_avg_var',
:'p221_derived_reactive_power_l2_import_t0_max_var',
:'p221_derived_reactive_power_l2_import_t0_max_timestamp',
:'p221_derived_reactive_power_l2_import_t0_min_var',
:'p221_derived_reactive_power_l2_import_t0_min_timestamp',
:'p221_derived_reactive_power_l3_export_t0_avg_var',
:'p221_derived_reactive_power_l3_export_t0_max_var',
:'p221_derived_reactive_power_l3_export_t0_max_timestamp',
:'p221_derived_reactive_power_l3_export_t0_min_var',
:'p221_derived_reactive_power_l3_export_t0_min_timestamp',
:'p221_derived_reactive_power_l3_import_t0_avg_var',
:'p221_derived_reactive_power_l3_import_t0_max_var',
:'p221_derived_reactive_power_l3_import_t0_max_timestamp',
:'p221_derived_reactive_power_l3_import_t0_min_var',
:'p221_derived_reactive_power_l3_import_t0_min_timestamp',
:'p221_derived_reactive_power_total_export_t0_avg_var',
:'p221_derived_reactive_power_total_export_t0_max_var',
:'p221_derived_reactive_power_total_export_t0_max_timestamp',
:'p221_derived_reactive_power_total_export_t0_min_var',
:'p221_derived_reactive_power_total_export_t0_min_timestamp',
:'p221_derived_reactive_power_total_import_t0_avg_var',
:'p221_derived_reactive_power_total_import_t0_max_var',
:'p221_derived_reactive_power_total_import_t0_max_timestamp',
:'p221_derived_reactive_power_total_import_t0_min_var',
:'p221_derived_reactive_power_total_import_t0_min_timestamp',
:'p221_reactive_energy_l1_export_t0_max_varh',
:'p221_reactive_energy_l1_export_t0_min_varh',
:'p221_reactive_energy_l1_import_t0_max_varh',
:'p221_reactive_energy_l1_import_t0_min_varh',
:'p221_reactive_energy_l2_export_t0_max_varh',
:'p221_reactive_energy_l2_export_t0_min_varh',
:'p221_reactive_energy_l2_import_t0_max_varh',
:'p221_reactive_energy_l2_import_t0_min_varh',
:'p221_reactive_energy_l3_export_t0_max_varh',
:'p221_reactive_energy_l3_export_t0_min_varh',
:'p221_reactive_energy_l3_import_t0_max_varh',
:'p221_reactive_energy_l3_import_t0_min_varh',
:'p221_reactive_energy_total_export_t0_max_varh',
:'p221_reactive_energy_total_export_t0_min_varh',
:'p221_reactive_energy_total_import_t0_max_varh',
:'p221_reactive_energy_total_import_t0_min_varh',
:'p221_reactive_power_l1_net_t0_avg_var',
:'p221_reactive_power_l1_net_t0_max_var',
:'p221_reactive_power_l1_net_t0_max_timestamp',
:'p221_reactive_power_l1_net_t0_min_var',
:'p221_reactive_power_l1_net_t0_min_timestamp',
:'p221_reactive_power_l2_net_t0_avg_var',
:'p221_reactive_power_l2_net_t0_max_var',
:'p221_reactive_power_l2_net_t0_max_timestamp',
:'p221_reactive_power_l2_net_t0_min_var',
:'p221_reactive_power_l2_net_t0_min_timestamp',
:'p221_reactive_power_l3_net_t0_avg_var',
:'p221_reactive_power_l3_net_t0_max_var',
:'p221_reactive_power_l3_net_t0_max_timestamp',
:'p221_reactive_power_l3_net_t0_min_var',
:'p221_reactive_power_l3_net_t0_min_timestamp',
:'p221_voltage_l1_any_t0_avg_v',
:'p221_voltage_l1_any_t0_max_v',
:'p221_voltage_l1_any_t0_max_timestamp',
:'p221_voltage_l1_any_t0_min_v',
:'p221_voltage_l1_any_t0_min_timestamp',
:'p221_voltage_l2_any_t0_avg_v',
:'p221_voltage_l2_any_t0_max_v',
:'p221_voltage_l2_any_t0_max_timestamp',
:'p221_voltage_l2_any_t0_min_v',
:'p221_voltage_l2_any_t0_min_timestamp',
:'p221_voltage_l3_any_t0_avg_v',
:'p221_voltage_l3_any_t0_max_v',
:'p221_voltage_l3_any_t0_max_timestamp',
:'p221_voltage_l3_any_t0_min_v',
:'p221_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      quarter_hour_count = 1,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  delta221 as (
    select
      date_trunc(
        'day',
        new221.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' daily_timestamp,
      date_trunc(
        'month',
        new221.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' monthly_timestamp,
      new221.timestamp,
      new221.interval,
      new221.meter_id,
      new221.measurement_location_id,
      case
        when old221.timestamp is null then 1
        else 0
      end new_count,
      new221.derived_active_power_l1_export_t0_avg_w - coalesce(old221.derived_active_power_l1_export_t0_avg_w, 0) derived_active_power_l1_export_t0_avg_w,
      greatest(
        new221.derived_active_power_l1_export_t0_max_w,
        coalesce(
          old221.derived_active_power_l1_export_t0_max_w,
          new221.derived_active_power_l1_export_t0_max_w
        )
      ) derived_active_power_l1_export_t0_max_w,
      case
        when new221.derived_active_power_l1_export_t0_max_w > coalesce(
          old221.derived_active_power_l1_export_t0_max_w,
          new221.derived_active_power_l1_export_t0_max_w
        ) then new221.derived_active_power_l1_export_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_l1_export_t0_max_timestamp,
          new221.derived_active_power_l1_export_t0_max_timestamp
        )
      end derived_active_power_l1_export_t0_max_timestamp,
      least(
        new221.derived_active_power_l1_export_t0_min_w,
        coalesce(
          old221.derived_active_power_l1_export_t0_min_w,
          new221.derived_active_power_l1_export_t0_min_w
        )
      ) derived_active_power_l1_export_t0_min_w,
      case
        when new221.derived_active_power_l1_export_t0_min_w < coalesce(
          old221.derived_active_power_l1_export_t0_min_w,
          new221.derived_active_power_l1_export_t0_min_w
        ) then new221.derived_active_power_l1_export_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_l1_export_t0_min_timestamp,
          new221.derived_active_power_l1_export_t0_min_timestamp
        )
      end derived_active_power_l1_export_t0_min_timestamp,
      new221.derived_active_power_l1_import_t0_avg_w - coalesce(old221.derived_active_power_l1_import_t0_avg_w, 0) derived_active_power_l1_import_t0_avg_w,
      greatest(
        new221.derived_active_power_l1_import_t0_max_w,
        coalesce(
          old221.derived_active_power_l1_import_t0_max_w,
          new221.derived_active_power_l1_import_t0_max_w
        )
      ) derived_active_power_l1_import_t0_max_w,
      case
        when new221.derived_active_power_l1_import_t0_max_w > coalesce(
          old221.derived_active_power_l1_import_t0_max_w,
          new221.derived_active_power_l1_import_t0_max_w
        ) then new221.derived_active_power_l1_import_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_l1_import_t0_max_timestamp,
          new221.derived_active_power_l1_import_t0_max_timestamp
        )
      end derived_active_power_l1_import_t0_max_timestamp,
      least(
        new221.derived_active_power_l1_import_t0_min_w,
        coalesce(
          old221.derived_active_power_l1_import_t0_min_w,
          new221.derived_active_power_l1_import_t0_min_w
        )
      ) derived_active_power_l1_import_t0_min_w,
      case
        when new221.derived_active_power_l1_import_t0_min_w < coalesce(
          old221.derived_active_power_l1_import_t0_min_w,
          new221.derived_active_power_l1_import_t0_min_w
        ) then new221.derived_active_power_l1_import_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_l1_import_t0_min_timestamp,
          new221.derived_active_power_l1_import_t0_min_timestamp
        )
      end derived_active_power_l1_import_t0_min_timestamp,
      new221.derived_active_power_l2_export_t0_avg_w - coalesce(old221.derived_active_power_l2_export_t0_avg_w, 0) derived_active_power_l2_export_t0_avg_w,
      greatest(
        new221.derived_active_power_l2_export_t0_max_w,
        coalesce(
          old221.derived_active_power_l2_export_t0_max_w,
          new221.derived_active_power_l2_export_t0_max_w
        )
      ) derived_active_power_l2_export_t0_max_w,
      case
        when new221.derived_active_power_l2_export_t0_max_w > coalesce(
          old221.derived_active_power_l2_export_t0_max_w,
          new221.derived_active_power_l2_export_t0_max_w
        ) then new221.derived_active_power_l2_export_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_l2_export_t0_max_timestamp,
          new221.derived_active_power_l2_export_t0_max_timestamp
        )
      end derived_active_power_l2_export_t0_max_timestamp,
      least(
        new221.derived_active_power_l2_export_t0_min_w,
        coalesce(
          old221.derived_active_power_l2_export_t0_min_w,
          new221.derived_active_power_l2_export_t0_min_w
        )
      ) derived_active_power_l2_export_t0_min_w,
      case
        when new221.derived_active_power_l2_export_t0_min_w < coalesce(
          old221.derived_active_power_l2_export_t0_min_w,
          new221.derived_active_power_l2_export_t0_min_w
        ) then new221.derived_active_power_l2_export_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_l2_export_t0_min_timestamp,
          new221.derived_active_power_l2_export_t0_min_timestamp
        )
      end derived_active_power_l2_export_t0_min_timestamp,
      new221.derived_active_power_l2_import_t0_avg_w - coalesce(old221.derived_active_power_l2_import_t0_avg_w, 0) derived_active_power_l2_import_t0_avg_w,
      greatest(
        new221.derived_active_power_l2_import_t0_max_w,
        coalesce(
          old221.derived_active_power_l2_import_t0_max_w,
          new221.derived_active_power_l2_import_t0_max_w
        )
      ) derived_active_power_l2_import_t0_max_w,
      case
        when new221.derived_active_power_l2_import_t0_max_w > coalesce(
          old221.derived_active_power_l2_import_t0_max_w,
          new221.derived_active_power_l2_import_t0_max_w
        ) then new221.derived_active_power_l2_import_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_l2_import_t0_max_timestamp,
          new221.derived_active_power_l2_import_t0_max_timestamp
        )
      end derived_active_power_l2_import_t0_max_timestamp,
      least(
        new221.derived_active_power_l2_import_t0_min_w,
        coalesce(
          old221.derived_active_power_l2_import_t0_min_w,
          new221.derived_active_power_l2_import_t0_min_w
        )
      ) derived_active_power_l2_import_t0_min_w,
      case
        when new221.derived_active_power_l2_import_t0_min_w < coalesce(
          old221.derived_active_power_l2_import_t0_min_w,
          new221.derived_active_power_l2_import_t0_min_w
        ) then new221.derived_active_power_l2_import_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_l2_import_t0_min_timestamp,
          new221.derived_active_power_l2_import_t0_min_timestamp
        )
      end derived_active_power_l2_import_t0_min_timestamp,
      new221.derived_active_power_l3_export_t0_avg_w - coalesce(old221.derived_active_power_l3_export_t0_avg_w, 0) derived_active_power_l3_export_t0_avg_w,
      greatest(
        new221.derived_active_power_l3_export_t0_max_w,
        coalesce(
          old221.derived_active_power_l3_export_t0_max_w,
          new221.derived_active_power_l3_export_t0_max_w
        )
      ) derived_active_power_l3_export_t0_max_w,
      case
        when new221.derived_active_power_l3_export_t0_max_w > coalesce(
          old221.derived_active_power_l3_export_t0_max_w,
          new221.derived_active_power_l3_export_t0_max_w
        ) then new221.derived_active_power_l3_export_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_l3_export_t0_max_timestamp,
          new221.derived_active_power_l3_export_t0_max_timestamp
        )
      end derived_active_power_l3_export_t0_max_timestamp,
      least(
        new221.derived_active_power_l3_export_t0_min_w,
        coalesce(
          old221.derived_active_power_l3_export_t0_min_w,
          new221.derived_active_power_l3_export_t0_min_w
        )
      ) derived_active_power_l3_export_t0_min_w,
      case
        when new221.derived_active_power_l3_export_t0_min_w < coalesce(
          old221.derived_active_power_l3_export_t0_min_w,
          new221.derived_active_power_l3_export_t0_min_w
        ) then new221.derived_active_power_l3_export_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_l3_export_t0_min_timestamp,
          new221.derived_active_power_l3_export_t0_min_timestamp
        )
      end derived_active_power_l3_export_t0_min_timestamp,
      new221.derived_active_power_l3_import_t0_avg_w - coalesce(old221.derived_active_power_l3_import_t0_avg_w, 0) derived_active_power_l3_import_t0_avg_w,
      greatest(
        new221.derived_active_power_l3_import_t0_max_w,
        coalesce(
          old221.derived_active_power_l3_import_t0_max_w,
          new221.derived_active_power_l3_import_t0_max_w
        )
      ) derived_active_power_l3_import_t0_max_w,
      case
        when new221.derived_active_power_l3_import_t0_max_w > coalesce(
          old221.derived_active_power_l3_import_t0_max_w,
          new221.derived_active_power_l3_import_t0_max_w
        ) then new221.derived_active_power_l3_import_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_l3_import_t0_max_timestamp,
          new221.derived_active_power_l3_import_t0_max_timestamp
        )
      end derived_active_power_l3_import_t0_max_timestamp,
      least(
        new221.derived_active_power_l3_import_t0_min_w,
        coalesce(
          old221.derived_active_power_l3_import_t0_min_w,
          new221.derived_active_power_l3_import_t0_min_w
        )
      ) derived_active_power_l3_import_t0_min_w,
      case
        when new221.derived_active_power_l3_import_t0_min_w < coalesce(
          old221.derived_active_power_l3_import_t0_min_w,
          new221.derived_active_power_l3_import_t0_min_w
        ) then new221.derived_active_power_l3_import_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_l3_import_t0_min_timestamp,
          new221.derived_active_power_l3_import_t0_min_timestamp
        )
      end derived_active_power_l3_import_t0_min_timestamp,
      new221.derived_active_power_total_export_t0_avg_w - coalesce(
        old221.derived_active_power_total_export_t0_avg_w,
        0
      ) derived_active_power_total_export_t0_avg_w,
      greatest(
        new221.derived_active_power_total_export_t0_max_w,
        coalesce(
          old221.derived_active_power_total_export_t0_max_w,
          new221.derived_active_power_total_export_t0_max_w
        )
      ) derived_active_power_total_export_t0_max_w,
      case
        when new221.derived_active_power_total_export_t0_max_w > coalesce(
          old221.derived_active_power_total_export_t0_max_w,
          new221.derived_active_power_total_export_t0_max_w
        ) then new221.derived_active_power_total_export_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_total_export_t0_max_timestamp,
          new221.derived_active_power_total_export_t0_max_timestamp
        )
      end derived_active_power_total_export_t0_max_timestamp,
      least(
        new221.derived_active_power_total_export_t0_min_w,
        coalesce(
          old221.derived_active_power_total_export_t0_min_w,
          new221.derived_active_power_total_export_t0_min_w
        )
      ) derived_active_power_total_export_t0_min_w,
      case
        when new221.derived_active_power_total_export_t0_min_w < coalesce(
          old221.derived_active_power_total_export_t0_min_w,
          new221.derived_active_power_total_export_t0_min_w
        ) then new221.derived_active_power_total_export_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_total_export_t0_min_timestamp,
          new221.derived_active_power_total_export_t0_min_timestamp
        )
      end derived_active_power_total_export_t0_min_timestamp,
      new221.derived_active_power_total_import_t0_avg_w - coalesce(
        old221.derived_active_power_total_import_t0_avg_w,
        0
      ) derived_active_power_total_import_t0_avg_w,
      greatest(
        new221.derived_active_power_total_import_t0_max_w,
        coalesce(
          old221.derived_active_power_total_import_t0_max_w,
          new221.derived_active_power_total_import_t0_max_w
        )
      ) derived_active_power_total_import_t0_max_w,
      case
        when new221.derived_active_power_total_import_t0_max_w > coalesce(
          old221.derived_active_power_total_import_t0_max_w,
          new221.derived_active_power_total_import_t0_max_w
        ) then new221.derived_active_power_total_import_t0_max_timestamp
        else coalesce(
          old221.derived_active_power_total_import_t0_max_timestamp,
          new221.derived_active_power_total_import_t0_max_timestamp
        )
      end derived_active_power_total_import_t0_max_timestamp,
      least(
        new221.derived_active_power_total_import_t0_min_w,
        coalesce(
          old221.derived_active_power_total_import_t0_min_w,
          new221.derived_active_power_total_import_t0_min_w
        )
      ) derived_active_power_total_import_t0_min_w,
      case
        when new221.derived_active_power_total_import_t0_min_w < coalesce(
          old221.derived_active_power_total_import_t0_min_w,
          new221.derived_active_power_total_import_t0_min_w
        ) then new221.derived_active_power_total_import_t0_min_timestamp
        else coalesce(
          old221.derived_active_power_total_import_t0_min_timestamp,
          new221.derived_active_power_total_import_t0_min_timestamp
        )
      end derived_active_power_total_import_t0_min_timestamp,
      new221.derived_active_power_total_import_t1_avg_w - coalesce(
        old221.derived_active_power_total_import_t1_avg_w,
        0
      ) derived_active_power_total_import_t1_avg_w,
      greatest(
        new221.derived_active_power_total_import_t1_max_w,
        coalesce(
          old221.derived_active_power_total_import_t1_max_w,
          new221.derived_active_power_total_import_t1_max_w
        )
      ) derived_active_power_total_import_t1_max_w,
      case
        when new221.derived_active_power_total_import_t1_max_w > coalesce(
          old221.derived_active_power_total_import_t1_max_w,
          new221.derived_active_power_total_import_t1_max_w
        ) then new221.derived_active_power_total_import_t1_max_timestamp
        else coalesce(
          old221.derived_active_power_total_import_t1_max_timestamp,
          new221.derived_active_power_total_import_t1_max_timestamp
        )
      end derived_active_power_total_import_t1_max_timestamp,
      least(
        new221.derived_active_power_total_import_t1_min_w,
        coalesce(
          old221.derived_active_power_total_import_t1_min_w,
          new221.derived_active_power_total_import_t1_min_w
        )
      ) derived_active_power_total_import_t1_min_w,
      case
        when new221.derived_active_power_total_import_t1_min_w < coalesce(
          old221.derived_active_power_total_import_t1_min_w,
          new221.derived_active_power_total_import_t1_min_w
        ) then new221.derived_active_power_total_import_t1_min_timestamp
        else coalesce(
          old221.derived_active_power_total_import_t1_min_timestamp,
          new221.derived_active_power_total_import_t1_min_timestamp
        )
      end derived_active_power_total_import_t1_min_timestamp,
      new221.derived_active_power_total_import_t2_avg_w - coalesce(
        old221.derived_active_power_total_import_t2_avg_w,
        0
      ) derived_active_power_total_import_t2_avg_w,
      greatest(
        new221.derived_active_power_total_import_t2_max_w,
        coalesce(
          old221.derived_active_power_total_import_t2_max_w,
          new221.derived_active_power_total_import_t2_max_w
        )
      ) derived_active_power_total_import_t2_max_w,
      case
        when new221.derived_active_power_total_import_t2_max_w > coalesce(
          old221.derived_active_power_total_import_t2_max_w,
          new221.derived_active_power_total_import_t2_max_w
        ) then new221.derived_active_power_total_import_t2_max_timestamp
        else coalesce(
          old221.derived_active_power_total_import_t2_max_timestamp,
          new221.derived_active_power_total_import_t2_max_timestamp
        )
      end derived_active_power_total_import_t2_max_timestamp,
      least(
        new221.derived_active_power_total_import_t2_min_w,
        coalesce(
          old221.derived_active_power_total_import_t2_min_w,
          new221.derived_active_power_total_import_t2_min_w
        )
      ) derived_active_power_total_import_t2_min_w,
      case
        when new221.derived_active_power_total_import_t2_min_w < coalesce(
          old221.derived_active_power_total_import_t2_min_w,
          new221.derived_active_power_total_import_t2_min_w
        ) then new221.derived_active_power_total_import_t2_min_timestamp
        else coalesce(
          old221.derived_active_power_total_import_t2_min_timestamp,
          new221.derived_active_power_total_import_t2_min_timestamp
        )
      end derived_active_power_total_import_t2_min_timestamp,
      new221.derived_reactive_power_l1_export_t0_avg_var - coalesce(
        old221.derived_reactive_power_l1_export_t0_avg_var,
        0
      ) derived_reactive_power_l1_export_t0_avg_var,
      greatest(
        new221.derived_reactive_power_l1_export_t0_max_var,
        coalesce(
          old221.derived_reactive_power_l1_export_t0_max_var,
          new221.derived_reactive_power_l1_export_t0_max_var
        )
      ) derived_reactive_power_l1_export_t0_max_var,
      case
        when new221.derived_reactive_power_l1_export_t0_max_var > coalesce(
          old221.derived_reactive_power_l1_export_t0_max_var,
          new221.derived_reactive_power_l1_export_t0_max_var
        ) then new221.derived_reactive_power_l1_export_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_l1_export_t0_max_timestamp,
          new221.derived_reactive_power_l1_export_t0_max_timestamp
        )
      end derived_reactive_power_l1_export_t0_max_timestamp,
      least(
        new221.derived_reactive_power_l1_export_t0_min_var,
        coalesce(
          old221.derived_reactive_power_l1_export_t0_min_var,
          new221.derived_reactive_power_l1_export_t0_min_var
        )
      ) derived_reactive_power_l1_export_t0_min_var,
      case
        when new221.derived_reactive_power_l1_export_t0_min_var < coalesce(
          old221.derived_reactive_power_l1_export_t0_min_var,
          new221.derived_reactive_power_l1_export_t0_min_var
        ) then new221.derived_reactive_power_l1_export_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_l1_export_t0_min_timestamp,
          new221.derived_reactive_power_l1_export_t0_min_timestamp
        )
      end derived_reactive_power_l1_export_t0_min_timestamp,
      new221.derived_reactive_power_l1_import_t0_avg_var - coalesce(
        old221.derived_reactive_power_l1_import_t0_avg_var,
        0
      ) derived_reactive_power_l1_import_t0_avg_var,
      greatest(
        new221.derived_reactive_power_l1_import_t0_max_var,
        coalesce(
          old221.derived_reactive_power_l1_import_t0_max_var,
          new221.derived_reactive_power_l1_import_t0_max_var
        )
      ) derived_reactive_power_l1_import_t0_max_var,
      case
        when new221.derived_reactive_power_l1_import_t0_max_var > coalesce(
          old221.derived_reactive_power_l1_import_t0_max_var,
          new221.derived_reactive_power_l1_import_t0_max_var
        ) then new221.derived_reactive_power_l1_import_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_l1_import_t0_max_timestamp,
          new221.derived_reactive_power_l1_import_t0_max_timestamp
        )
      end derived_reactive_power_l1_import_t0_max_timestamp,
      least(
        new221.derived_reactive_power_l1_import_t0_min_var,
        coalesce(
          old221.derived_reactive_power_l1_import_t0_min_var,
          new221.derived_reactive_power_l1_import_t0_min_var
        )
      ) derived_reactive_power_l1_import_t0_min_var,
      case
        when new221.derived_reactive_power_l1_import_t0_min_var < coalesce(
          old221.derived_reactive_power_l1_import_t0_min_var,
          new221.derived_reactive_power_l1_import_t0_min_var
        ) then new221.derived_reactive_power_l1_import_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_l1_import_t0_min_timestamp,
          new221.derived_reactive_power_l1_import_t0_min_timestamp
        )
      end derived_reactive_power_l1_import_t0_min_timestamp,
      new221.derived_reactive_power_l2_export_t0_avg_var - coalesce(
        old221.derived_reactive_power_l2_export_t0_avg_var,
        0
      ) derived_reactive_power_l2_export_t0_avg_var,
      greatest(
        new221.derived_reactive_power_l2_export_t0_max_var,
        coalesce(
          old221.derived_reactive_power_l2_export_t0_max_var,
          new221.derived_reactive_power_l2_export_t0_max_var
        )
      ) derived_reactive_power_l2_export_t0_max_var,
      case
        when new221.derived_reactive_power_l2_export_t0_max_var > coalesce(
          old221.derived_reactive_power_l2_export_t0_max_var,
          new221.derived_reactive_power_l2_export_t0_max_var
        ) then new221.derived_reactive_power_l2_export_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_l2_export_t0_max_timestamp,
          new221.derived_reactive_power_l2_export_t0_max_timestamp
        )
      end derived_reactive_power_l2_export_t0_max_timestamp,
      least(
        new221.derived_reactive_power_l2_export_t0_min_var,
        coalesce(
          old221.derived_reactive_power_l2_export_t0_min_var,
          new221.derived_reactive_power_l2_export_t0_min_var
        )
      ) derived_reactive_power_l2_export_t0_min_var,
      case
        when new221.derived_reactive_power_l2_export_t0_min_var < coalesce(
          old221.derived_reactive_power_l2_export_t0_min_var,
          new221.derived_reactive_power_l2_export_t0_min_var
        ) then new221.derived_reactive_power_l2_export_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_l2_export_t0_min_timestamp,
          new221.derived_reactive_power_l2_export_t0_min_timestamp
        )
      end derived_reactive_power_l2_export_t0_min_timestamp,
      new221.derived_reactive_power_l2_import_t0_avg_var - coalesce(
        old221.derived_reactive_power_l2_import_t0_avg_var,
        0
      ) derived_reactive_power_l2_import_t0_avg_var,
      greatest(
        new221.derived_reactive_power_l2_import_t0_max_var,
        coalesce(
          old221.derived_reactive_power_l2_import_t0_max_var,
          new221.derived_reactive_power_l2_import_t0_max_var
        )
      ) derived_reactive_power_l2_import_t0_max_var,
      case
        when new221.derived_reactive_power_l2_import_t0_max_var > coalesce(
          old221.derived_reactive_power_l2_import_t0_max_var,
          new221.derived_reactive_power_l2_import_t0_max_var
        ) then new221.derived_reactive_power_l2_import_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_l2_import_t0_max_timestamp,
          new221.derived_reactive_power_l2_import_t0_max_timestamp
        )
      end derived_reactive_power_l2_import_t0_max_timestamp,
      least(
        new221.derived_reactive_power_l2_import_t0_min_var,
        coalesce(
          old221.derived_reactive_power_l2_import_t0_min_var,
          new221.derived_reactive_power_l2_import_t0_min_var
        )
      ) derived_reactive_power_l2_import_t0_min_var,
      case
        when new221.derived_reactive_power_l2_import_t0_min_var < coalesce(
          old221.derived_reactive_power_l2_import_t0_min_var,
          new221.derived_reactive_power_l2_import_t0_min_var
        ) then new221.derived_reactive_power_l2_import_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_l2_import_t0_min_timestamp,
          new221.derived_reactive_power_l2_import_t0_min_timestamp
        )
      end derived_reactive_power_l2_import_t0_min_timestamp,
      new221.derived_reactive_power_l3_export_t0_avg_var - coalesce(
        old221.derived_reactive_power_l3_export_t0_avg_var,
        0
      ) derived_reactive_power_l3_export_t0_avg_var,
      greatest(
        new221.derived_reactive_power_l3_export_t0_max_var,
        coalesce(
          old221.derived_reactive_power_l3_export_t0_max_var,
          new221.derived_reactive_power_l3_export_t0_max_var
        )
      ) derived_reactive_power_l3_export_t0_max_var,
      case
        when new221.derived_reactive_power_l3_export_t0_max_var > coalesce(
          old221.derived_reactive_power_l3_export_t0_max_var,
          new221.derived_reactive_power_l3_export_t0_max_var
        ) then new221.derived_reactive_power_l3_export_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_l3_export_t0_max_timestamp,
          new221.derived_reactive_power_l3_export_t0_max_timestamp
        )
      end derived_reactive_power_l3_export_t0_max_timestamp,
      least(
        new221.derived_reactive_power_l3_export_t0_min_var,
        coalesce(
          old221.derived_reactive_power_l3_export_t0_min_var,
          new221.derived_reactive_power_l3_export_t0_min_var
        )
      ) derived_reactive_power_l3_export_t0_min_var,
      case
        when new221.derived_reactive_power_l3_export_t0_min_var < coalesce(
          old221.derived_reactive_power_l3_export_t0_min_var,
          new221.derived_reactive_power_l3_export_t0_min_var
        ) then new221.derived_reactive_power_l3_export_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_l3_export_t0_min_timestamp,
          new221.derived_reactive_power_l3_export_t0_min_timestamp
        )
      end derived_reactive_power_l3_export_t0_min_timestamp,
      new221.derived_reactive_power_l3_import_t0_avg_var - coalesce(
        old221.derived_reactive_power_l3_import_t0_avg_var,
        0
      ) derived_reactive_power_l3_import_t0_avg_var,
      greatest(
        new221.derived_reactive_power_l3_import_t0_max_var,
        coalesce(
          old221.derived_reactive_power_l3_import_t0_max_var,
          new221.derived_reactive_power_l3_import_t0_max_var
        )
      ) derived_reactive_power_l3_import_t0_max_var,
      case
        when new221.derived_reactive_power_l3_import_t0_max_var > coalesce(
          old221.derived_reactive_power_l3_import_t0_max_var,
          new221.derived_reactive_power_l3_import_t0_max_var
        ) then new221.derived_reactive_power_l3_import_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_l3_import_t0_max_timestamp,
          new221.derived_reactive_power_l3_import_t0_max_timestamp
        )
      end derived_reactive_power_l3_import_t0_max_timestamp,
      least(
        new221.derived_reactive_power_l3_import_t0_min_var,
        coalesce(
          old221.derived_reactive_power_l3_import_t0_min_var,
          new221.derived_reactive_power_l3_import_t0_min_var
        )
      ) derived_reactive_power_l3_import_t0_min_var,
      case
        when new221.derived_reactive_power_l3_import_t0_min_var < coalesce(
          old221.derived_reactive_power_l3_import_t0_min_var,
          new221.derived_reactive_power_l3_import_t0_min_var
        ) then new221.derived_reactive_power_l3_import_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_l3_import_t0_min_timestamp,
          new221.derived_reactive_power_l3_import_t0_min_timestamp
        )
      end derived_reactive_power_l3_import_t0_min_timestamp,
      new221.derived_reactive_power_total_export_t0_avg_var - coalesce(
        old221.derived_reactive_power_total_export_t0_avg_var,
        0
      ) derived_reactive_power_total_export_t0_avg_var,
      greatest(
        new221.derived_reactive_power_total_export_t0_max_var,
        coalesce(
          old221.derived_reactive_power_total_export_t0_max_var,
          new221.derived_reactive_power_total_export_t0_max_var
        )
      ) derived_reactive_power_total_export_t0_max_var,
      case
        when new221.derived_reactive_power_total_export_t0_max_var > coalesce(
          old221.derived_reactive_power_total_export_t0_max_var,
          new221.derived_reactive_power_total_export_t0_max_var
        ) then new221.derived_reactive_power_total_export_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_total_export_t0_max_timestamp,
          new221.derived_reactive_power_total_export_t0_max_timestamp
        )
      end derived_reactive_power_total_export_t0_max_timestamp,
      least(
        new221.derived_reactive_power_total_export_t0_min_var,
        coalesce(
          old221.derived_reactive_power_total_export_t0_min_var,
          new221.derived_reactive_power_total_export_t0_min_var
        )
      ) derived_reactive_power_total_export_t0_min_var,
      case
        when new221.derived_reactive_power_total_export_t0_min_var < coalesce(
          old221.derived_reactive_power_total_export_t0_min_var,
          new221.derived_reactive_power_total_export_t0_min_var
        ) then new221.derived_reactive_power_total_export_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_total_export_t0_min_timestamp,
          new221.derived_reactive_power_total_export_t0_min_timestamp
        )
      end derived_reactive_power_total_export_t0_min_timestamp,
      new221.derived_reactive_power_total_import_t0_avg_var - coalesce(
        old221.derived_reactive_power_total_import_t0_avg_var,
        0
      ) derived_reactive_power_total_import_t0_avg_var,
      greatest(
        new221.derived_reactive_power_total_import_t0_max_var,
        coalesce(
          old221.derived_reactive_power_total_import_t0_max_var,
          new221.derived_reactive_power_total_import_t0_max_var
        )
      ) derived_reactive_power_total_import_t0_max_var,
      case
        when new221.derived_reactive_power_total_import_t0_max_var > coalesce(
          old221.derived_reactive_power_total_import_t0_max_var,
          new221.derived_reactive_power_total_import_t0_max_var
        ) then new221.derived_reactive_power_total_import_t0_max_timestamp
        else coalesce(
          old221.derived_reactive_power_total_import_t0_max_timestamp,
          new221.derived_reactive_power_total_import_t0_max_timestamp
        )
      end derived_reactive_power_total_import_t0_max_timestamp,
      least(
        new221.derived_reactive_power_total_import_t0_min_var,
        coalesce(
          old221.derived_reactive_power_total_import_t0_min_var,
          new221.derived_reactive_power_total_import_t0_min_var
        )
      ) derived_reactive_power_total_import_t0_min_var,
      case
        when new221.derived_reactive_power_total_import_t0_min_var < coalesce(
          old221.derived_reactive_power_total_import_t0_min_var,
          new221.derived_reactive_power_total_import_t0_min_var
        ) then new221.derived_reactive_power_total_import_t0_min_timestamp
        else coalesce(
          old221.derived_reactive_power_total_import_t0_min_timestamp,
          new221.derived_reactive_power_total_import_t0_min_timestamp
        )
      end derived_reactive_power_total_import_t0_min_timestamp
    from
      new221
      left join old221 on old221.timestamp = new221.timestamp
      and old221.interval = new221.interval
      and old221.meter_id = new221.meter_id
      and old221.measurement_location_id = new221.measurement_location_id
  ),
  daily221 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta221.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta221.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta221.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta221.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta221.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta221.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta221.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta221.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta221.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta221.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta221.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta221.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta221.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta221.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta221.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta221.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta221.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta221.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta221.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta221.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta221.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta221.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta221.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta221.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta221.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta221.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta221.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta221.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta221.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta221.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta221.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta221.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta221.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta221.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta221.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta221.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta221.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta221.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta221.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta221.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta221.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta221.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta221.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta221.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta221.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta221.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta221.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta221.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta221.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta221.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta221.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta221.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta221.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta221.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta221.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta221.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta221.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta221.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta221.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta221.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta221.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta221.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta221.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta221.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta221.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta221.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta221.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta221.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta221.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta221.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta221.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta221.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta221.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta221.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta221.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta221.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta221.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta221.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta221.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta221.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta221.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta221.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta221.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta221.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta221.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta221.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta221.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta221.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta221.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta221.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta221.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta221.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta221.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta221
    where
      abb_b2x_aggregates.timestamp = delta221.daily_timestamp
      and abb_b2x_aggregates.interval = 'day'::interval_entity
      and abb_b2x_aggregates.meter_id = delta221.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta221.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  monthly221 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta221.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta221.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta221.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta221.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta221.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta221.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta221.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta221.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta221.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta221.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta221.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta221.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta221.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta221.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta221.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta221.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta221.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta221.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta221.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta221.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta221.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta221.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta221.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta221.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta221.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta221.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta221.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta221.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta221.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta221.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta221.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta221.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta221.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta221.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta221.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta221.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta221.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta221.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta221.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta221.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta221.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta221.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta221.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta221.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta221.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta221.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta221.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta221.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta221.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta221.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta221.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta221.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta221.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta221.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta221.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta221.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta221.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta221.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta221.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta221.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta221.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta221.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta221.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta221.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta221.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta221.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta221.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta221.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta221.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta221.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta221.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta221.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta221.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta221.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta221.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta221.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta221.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta221.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta221.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta221.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta221.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta221.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta221.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta221.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta221.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta221.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta221.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta221.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta221.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta221.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta221.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta221.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta221.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta221.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta221.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta221.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta221.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta221.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta221.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta221.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta221
    where
      abb_b2x_aggregates.timestamp = delta221.monthly_timestamp
      and abb_b2x_aggregates.interval = 'month'::interval_entity
      and abb_b2x_aggregates.meter_id = delta221.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta221.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  old224 as (
    select
      abb_b2x_aggregates.*
    from
      abb_b2x_aggregates
    where
      abb_b2x_aggregates.timestamp =:'p224_timestamp'::timestamptz
      and abb_b2x_aggregates.interval =:'p224_interval'::interval_entity
      and abb_b2x_aggregates.meter_id =:'p224_meter_id'
      and abb_b2x_aggregates.measurement_location_id =:'p224_measurement_location_id'
  ),
  new224 as (
    insert into
      abb_b2x_aggregates (
        timestamp,
        interval,
        meter_id,
        measurement_location_id,
        count,
        quarter_hour_count,
        active_energy_l1_export_t0_max_wh,
        active_energy_l1_export_t0_min_wh,
        active_energy_l1_import_t0_max_wh,
        active_energy_l1_import_t0_min_wh,
        active_energy_l2_export_t0_max_wh,
        active_energy_l2_export_t0_min_wh,
        active_energy_l2_import_t0_max_wh,
        active_energy_l2_import_t0_min_wh,
        active_energy_l3_export_t0_max_wh,
        active_energy_l3_export_t0_min_wh,
        active_energy_l3_import_t0_max_wh,
        active_energy_l3_import_t0_min_wh,
        active_energy_total_export_t0_max_wh,
        active_energy_total_export_t0_min_wh,
        active_energy_total_import_t0_max_wh,
        active_energy_total_import_t0_min_wh,
        active_energy_total_import_t1_max_wh,
        active_energy_total_import_t1_min_wh,
        active_energy_total_import_t2_max_wh,
        active_energy_total_import_t2_min_wh,
        active_power_l1_net_t0_avg_w,
        active_power_l1_net_t0_max_w,
        active_power_l1_net_t0_max_timestamp,
        active_power_l1_net_t0_min_w,
        active_power_l1_net_t0_min_timestamp,
        active_power_l2_net_t0_avg_w,
        active_power_l2_net_t0_max_w,
        active_power_l2_net_t0_max_timestamp,
        active_power_l2_net_t0_min_w,
        active_power_l2_net_t0_min_timestamp,
        active_power_l3_net_t0_avg_w,
        active_power_l3_net_t0_max_w,
        active_power_l3_net_t0_max_timestamp,
        active_power_l3_net_t0_min_w,
        active_power_l3_net_t0_min_timestamp,
        current_l1_any_t0_avg_a,
        current_l1_any_t0_max_a,
        current_l1_any_t0_max_timestamp,
        current_l1_any_t0_min_a,
        current_l1_any_t0_min_timestamp,
        current_l2_any_t0_avg_a,
        current_l2_any_t0_max_a,
        current_l2_any_t0_max_timestamp,
        current_l2_any_t0_min_a,
        current_l2_any_t0_min_timestamp,
        current_l3_any_t0_avg_a,
        current_l3_any_t0_max_a,
        current_l3_any_t0_max_timestamp,
        current_l3_any_t0_min_a,
        current_l3_any_t0_min_timestamp,
        derived_active_power_l1_export_t0_avg_w,
        derived_active_power_l1_export_t0_max_w,
        derived_active_power_l1_export_t0_max_timestamp,
        derived_active_power_l1_export_t0_min_w,
        derived_active_power_l1_export_t0_min_timestamp,
        derived_active_power_l1_import_t0_avg_w,
        derived_active_power_l1_import_t0_max_w,
        derived_active_power_l1_import_t0_max_timestamp,
        derived_active_power_l1_import_t0_min_w,
        derived_active_power_l1_import_t0_min_timestamp,
        derived_active_power_l2_export_t0_avg_w,
        derived_active_power_l2_export_t0_max_w,
        derived_active_power_l2_export_t0_max_timestamp,
        derived_active_power_l2_export_t0_min_w,
        derived_active_power_l2_export_t0_min_timestamp,
        derived_active_power_l2_import_t0_avg_w,
        derived_active_power_l2_import_t0_max_w,
        derived_active_power_l2_import_t0_max_timestamp,
        derived_active_power_l2_import_t0_min_w,
        derived_active_power_l2_import_t0_min_timestamp,
        derived_active_power_l3_export_t0_avg_w,
        derived_active_power_l3_export_t0_max_w,
        derived_active_power_l3_export_t0_max_timestamp,
        derived_active_power_l3_export_t0_min_w,
        derived_active_power_l3_export_t0_min_timestamp,
        derived_active_power_l3_import_t0_avg_w,
        derived_active_power_l3_import_t0_max_w,
        derived_active_power_l3_import_t0_max_timestamp,
        derived_active_power_l3_import_t0_min_w,
        derived_active_power_l3_import_t0_min_timestamp,
        derived_active_power_total_export_t0_avg_w,
        derived_active_power_total_export_t0_max_w,
        derived_active_power_total_export_t0_max_timestamp,
        derived_active_power_total_export_t0_min_w,
        derived_active_power_total_export_t0_min_timestamp,
        derived_active_power_total_import_t0_avg_w,
        derived_active_power_total_import_t0_max_w,
        derived_active_power_total_import_t0_max_timestamp,
        derived_active_power_total_import_t0_min_w,
        derived_active_power_total_import_t0_min_timestamp,
        derived_active_power_total_import_t1_avg_w,
        derived_active_power_total_import_t1_max_w,
        derived_active_power_total_import_t1_max_timestamp,
        derived_active_power_total_import_t1_min_w,
        derived_active_power_total_import_t1_min_timestamp,
        derived_active_power_total_import_t2_avg_w,
        derived_active_power_total_import_t2_max_w,
        derived_active_power_total_import_t2_max_timestamp,
        derived_active_power_total_import_t2_min_w,
        derived_active_power_total_import_t2_min_timestamp,
        derived_reactive_power_l1_export_t0_avg_var,
        derived_reactive_power_l1_export_t0_max_var,
        derived_reactive_power_l1_export_t0_max_timestamp,
        derived_reactive_power_l1_export_t0_min_var,
        derived_reactive_power_l1_export_t0_min_timestamp,
        derived_reactive_power_l1_import_t0_avg_var,
        derived_reactive_power_l1_import_t0_max_var,
        derived_reactive_power_l1_import_t0_max_timestamp,
        derived_reactive_power_l1_import_t0_min_var,
        derived_reactive_power_l1_import_t0_min_timestamp,
        derived_reactive_power_l2_export_t0_avg_var,
        derived_reactive_power_l2_export_t0_max_var,
        derived_reactive_power_l2_export_t0_max_timestamp,
        derived_reactive_power_l2_export_t0_min_var,
        derived_reactive_power_l2_export_t0_min_timestamp,
        derived_reactive_power_l2_import_t0_avg_var,
        derived_reactive_power_l2_import_t0_max_var,
        derived_reactive_power_l2_import_t0_max_timestamp,
        derived_reactive_power_l2_import_t0_min_var,
        derived_reactive_power_l2_import_t0_min_timestamp,
        derived_reactive_power_l3_export_t0_avg_var,
        derived_reactive_power_l3_export_t0_max_var,
        derived_reactive_power_l3_export_t0_max_timestamp,
        derived_reactive_power_l3_export_t0_min_var,
        derived_reactive_power_l3_export_t0_min_timestamp,
        derived_reactive_power_l3_import_t0_avg_var,
        derived_reactive_power_l3_import_t0_max_var,
        derived_reactive_power_l3_import_t0_max_timestamp,
        derived_reactive_power_l3_import_t0_min_var,
        derived_reactive_power_l3_import_t0_min_timestamp,
        derived_reactive_power_total_export_t0_avg_var,
        derived_reactive_power_total_export_t0_max_var,
        derived_reactive_power_total_export_t0_max_timestamp,
        derived_reactive_power_total_export_t0_min_var,
        derived_reactive_power_total_export_t0_min_timestamp,
        derived_reactive_power_total_import_t0_avg_var,
        derived_reactive_power_total_import_t0_max_var,
        derived_reactive_power_total_import_t0_max_timestamp,
        derived_reactive_power_total_import_t0_min_var,
        derived_reactive_power_total_import_t0_min_timestamp,
        reactive_energy_l1_export_t0_max_varh,
        reactive_energy_l1_export_t0_min_varh,
        reactive_energy_l1_import_t0_max_varh,
        reactive_energy_l1_import_t0_min_varh,
        reactive_energy_l2_export_t0_max_varh,
        reactive_energy_l2_export_t0_min_varh,
        reactive_energy_l2_import_t0_max_varh,
        reactive_energy_l2_import_t0_min_varh,
        reactive_energy_l3_export_t0_max_varh,
        reactive_energy_l3_export_t0_min_varh,
        reactive_energy_l3_import_t0_max_varh,
        reactive_energy_l3_import_t0_min_varh,
        reactive_energy_total_export_t0_max_varh,
        reactive_energy_total_export_t0_min_varh,
        reactive_energy_total_import_t0_max_varh,
        reactive_energy_total_import_t0_min_varh,
        reactive_power_l1_net_t0_avg_var,
        reactive_power_l1_net_t0_max_var,
        reactive_power_l1_net_t0_max_timestamp,
        reactive_power_l1_net_t0_min_var,
        reactive_power_l1_net_t0_min_timestamp,
        reactive_power_l2_net_t0_avg_var,
        reactive_power_l2_net_t0_max_var,
        reactive_power_l2_net_t0_max_timestamp,
        reactive_power_l2_net_t0_min_var,
        reactive_power_l2_net_t0_min_timestamp,
        reactive_power_l3_net_t0_avg_var,
        reactive_power_l3_net_t0_max_var,
        reactive_power_l3_net_t0_max_timestamp,
        reactive_power_l3_net_t0_min_var,
        reactive_power_l3_net_t0_min_timestamp,
        voltage_l1_any_t0_avg_v,
        voltage_l1_any_t0_max_v,
        voltage_l1_any_t0_max_timestamp,
        voltage_l1_any_t0_min_v,
        voltage_l1_any_t0_min_timestamp,
        voltage_l2_any_t0_avg_v,
        voltage_l2_any_t0_max_v,
        voltage_l2_any_t0_max_timestamp,
        voltage_l2_any_t0_min_v,
        voltage_l2_any_t0_min_timestamp,
        voltage_l3_any_t0_avg_v,
        voltage_l3_any_t0_max_v,
        voltage_l3_any_t0_max_timestamp,
        voltage_l3_any_t0_min_v,
        voltage_l3_any_t0_min_timestamp
      )
    values
      (
:'p224_timestamp'::timestamptz,
:'p224_interval'::interval_entity,
:'p224_meter_id',
:'p224_measurement_location_id',
:'p224_count',
:'p224_quarter_hour_count',
:'p224_active_energy_l1_export_t0_max_wh',
:'p224_active_energy_l1_export_t0_min_wh',
:'p224_active_energy_l1_import_t0_max_wh',
:'p224_active_energy_l1_import_t0_min_wh',
:'p224_active_energy_l2_export_t0_max_wh',
:'p224_active_energy_l2_export_t0_min_wh',
:'p224_active_energy_l2_import_t0_max_wh',
:'p224_active_energy_l2_import_t0_min_wh',
:'p224_active_energy_l3_export_t0_max_wh',
:'p224_active_energy_l3_export_t0_min_wh',
:'p224_active_energy_l3_import_t0_max_wh',
:'p224_active_energy_l3_import_t0_min_wh',
:'p224_active_energy_total_export_t0_max_wh',
:'p224_active_energy_total_export_t0_min_wh',
:'p224_active_energy_total_import_t0_max_wh',
:'p224_active_energy_total_import_t0_min_wh',
:'p224_active_energy_total_import_t1_max_wh',
:'p224_active_energy_total_import_t1_min_wh',
:'p224_active_energy_total_import_t2_max_wh',
:'p224_active_energy_total_import_t2_min_wh',
:'p224_active_power_l1_net_t0_avg_w',
:'p224_active_power_l1_net_t0_max_w',
:'p224_active_power_l1_net_t0_max_timestamp',
:'p224_active_power_l1_net_t0_min_w',
:'p224_active_power_l1_net_t0_min_timestamp',
:'p224_active_power_l2_net_t0_avg_w',
:'p224_active_power_l2_net_t0_max_w',
:'p224_active_power_l2_net_t0_max_timestamp',
:'p224_active_power_l2_net_t0_min_w',
:'p224_active_power_l2_net_t0_min_timestamp',
:'p224_active_power_l3_net_t0_avg_w',
:'p224_active_power_l3_net_t0_max_w',
:'p224_active_power_l3_net_t0_max_timestamp',
:'p224_active_power_l3_net_t0_min_w',
:'p224_active_power_l3_net_t0_min_timestamp',
:'p224_current_l1_any_t0_avg_a',
:'p224_current_l1_any_t0_max_a',
:'p224_current_l1_any_t0_max_timestamp',
:'p224_current_l1_any_t0_min_a',
:'p224_current_l1_any_t0_min_timestamp',
:'p224_current_l2_any_t0_avg_a',
:'p224_current_l2_any_t0_max_a',
:'p224_current_l2_any_t0_max_timestamp',
:'p224_current_l2_any_t0_min_a',
:'p224_current_l2_any_t0_min_timestamp',
:'p224_current_l3_any_t0_avg_a',
:'p224_current_l3_any_t0_max_a',
:'p224_current_l3_any_t0_max_timestamp',
:'p224_current_l3_any_t0_min_a',
:'p224_current_l3_any_t0_min_timestamp',
:'p224_derived_active_power_l1_export_t0_avg_w',
:'p224_derived_active_power_l1_export_t0_max_w',
:'p224_derived_active_power_l1_export_t0_max_timestamp',
:'p224_derived_active_power_l1_export_t0_min_w',
:'p224_derived_active_power_l1_export_t0_min_timestamp',
:'p224_derived_active_power_l1_import_t0_avg_w',
:'p224_derived_active_power_l1_import_t0_max_w',
:'p224_derived_active_power_l1_import_t0_max_timestamp',
:'p224_derived_active_power_l1_import_t0_min_w',
:'p224_derived_active_power_l1_import_t0_min_timestamp',
:'p224_derived_active_power_l2_export_t0_avg_w',
:'p224_derived_active_power_l2_export_t0_max_w',
:'p224_derived_active_power_l2_export_t0_max_timestamp',
:'p224_derived_active_power_l2_export_t0_min_w',
:'p224_derived_active_power_l2_export_t0_min_timestamp',
:'p224_derived_active_power_l2_import_t0_avg_w',
:'p224_derived_active_power_l2_import_t0_max_w',
:'p224_derived_active_power_l2_import_t0_max_timestamp',
:'p224_derived_active_power_l2_import_t0_min_w',
:'p224_derived_active_power_l2_import_t0_min_timestamp',
:'p224_derived_active_power_l3_export_t0_avg_w',
:'p224_derived_active_power_l3_export_t0_max_w',
:'p224_derived_active_power_l3_export_t0_max_timestamp',
:'p224_derived_active_power_l3_export_t0_min_w',
:'p224_derived_active_power_l3_export_t0_min_timestamp',
:'p224_derived_active_power_l3_import_t0_avg_w',
:'p224_derived_active_power_l3_import_t0_max_w',
:'p224_derived_active_power_l3_import_t0_max_timestamp',
:'p224_derived_active_power_l3_import_t0_min_w',
:'p224_derived_active_power_l3_import_t0_min_timestamp',
:'p224_derived_active_power_total_export_t0_avg_w',
:'p224_derived_active_power_total_export_t0_max_w',
:'p224_derived_active_power_total_export_t0_max_timestamp',
:'p224_derived_active_power_total_export_t0_min_w',
:'p224_derived_active_power_total_export_t0_min_timestamp',
:'p224_derived_active_power_total_import_t0_avg_w',
:'p224_derived_active_power_total_import_t0_max_w',
:'p224_derived_active_power_total_import_t0_max_timestamp',
:'p224_derived_active_power_total_import_t0_min_w',
:'p224_derived_active_power_total_import_t0_min_timestamp',
:'p224_derived_active_power_total_import_t1_avg_w',
:'p224_derived_active_power_total_import_t1_max_w',
:'p224_derived_active_power_total_import_t1_max_timestamp',
:'p224_derived_active_power_total_import_t1_min_w',
:'p224_derived_active_power_total_import_t1_min_timestamp',
:'p224_derived_active_power_total_import_t2_avg_w',
:'p224_derived_active_power_total_import_t2_max_w',
:'p224_derived_active_power_total_import_t2_max_timestamp',
:'p224_derived_active_power_total_import_t2_min_w',
:'p224_derived_active_power_total_import_t2_min_timestamp',
:'p224_derived_reactive_power_l1_export_t0_avg_var',
:'p224_derived_reactive_power_l1_export_t0_max_var',
:'p224_derived_reactive_power_l1_export_t0_max_timestamp',
:'p224_derived_reactive_power_l1_export_t0_min_var',
:'p224_derived_reactive_power_l1_export_t0_min_timestamp',
:'p224_derived_reactive_power_l1_import_t0_avg_var',
:'p224_derived_reactive_power_l1_import_t0_max_var',
:'p224_derived_reactive_power_l1_import_t0_max_timestamp',
:'p224_derived_reactive_power_l1_import_t0_min_var',
:'p224_derived_reactive_power_l1_import_t0_min_timestamp',
:'p224_derived_reactive_power_l2_export_t0_avg_var',
:'p224_derived_reactive_power_l2_export_t0_max_var',
:'p224_derived_reactive_power_l2_export_t0_max_timestamp',
:'p224_derived_reactive_power_l2_export_t0_min_var',
:'p224_derived_reactive_power_l2_export_t0_min_timestamp',
:'p224_derived_reactive_power_l2_import_t0_avg_var',
:'p224_derived_reactive_power_l2_import_t0_max_var',
:'p224_derived_reactive_power_l2_import_t0_max_timestamp',
:'p224_derived_reactive_power_l2_import_t0_min_var',
:'p224_derived_reactive_power_l2_import_t0_min_timestamp',
:'p224_derived_reactive_power_l3_export_t0_avg_var',
:'p224_derived_reactive_power_l3_export_t0_max_var',
:'p224_derived_reactive_power_l3_export_t0_max_timestamp',
:'p224_derived_reactive_power_l3_export_t0_min_var',
:'p224_derived_reactive_power_l3_export_t0_min_timestamp',
:'p224_derived_reactive_power_l3_import_t0_avg_var',
:'p224_derived_reactive_power_l3_import_t0_max_var',
:'p224_derived_reactive_power_l3_import_t0_max_timestamp',
:'p224_derived_reactive_power_l3_import_t0_min_var',
:'p224_derived_reactive_power_l3_import_t0_min_timestamp',
:'p224_derived_reactive_power_total_export_t0_avg_var',
:'p224_derived_reactive_power_total_export_t0_max_var',
:'p224_derived_reactive_power_total_export_t0_max_timestamp',
:'p224_derived_reactive_power_total_export_t0_min_var',
:'p224_derived_reactive_power_total_export_t0_min_timestamp',
:'p224_derived_reactive_power_total_import_t0_avg_var',
:'p224_derived_reactive_power_total_import_t0_max_var',
:'p224_derived_reactive_power_total_import_t0_max_timestamp',
:'p224_derived_reactive_power_total_import_t0_min_var',
:'p224_derived_reactive_power_total_import_t0_min_timestamp',
:'p224_reactive_energy_l1_export_t0_max_varh',
:'p224_reactive_energy_l1_export_t0_min_varh',
:'p224_reactive_energy_l1_import_t0_max_varh',
:'p224_reactive_energy_l1_import_t0_min_varh',
:'p224_reactive_energy_l2_export_t0_max_varh',
:'p224_reactive_energy_l2_export_t0_min_varh',
:'p224_reactive_energy_l2_import_t0_max_varh',
:'p224_reactive_energy_l2_import_t0_min_varh',
:'p224_reactive_energy_l3_export_t0_max_varh',
:'p224_reactive_energy_l3_export_t0_min_varh',
:'p224_reactive_energy_l3_import_t0_max_varh',
:'p224_reactive_energy_l3_import_t0_min_varh',
:'p224_reactive_energy_total_export_t0_max_varh',
:'p224_reactive_energy_total_export_t0_min_varh',
:'p224_reactive_energy_total_import_t0_max_varh',
:'p224_reactive_energy_total_import_t0_min_varh',
:'p224_reactive_power_l1_net_t0_avg_var',
:'p224_reactive_power_l1_net_t0_max_var',
:'p224_reactive_power_l1_net_t0_max_timestamp',
:'p224_reactive_power_l1_net_t0_min_var',
:'p224_reactive_power_l1_net_t0_min_timestamp',
:'p224_reactive_power_l2_net_t0_avg_var',
:'p224_reactive_power_l2_net_t0_max_var',
:'p224_reactive_power_l2_net_t0_max_timestamp',
:'p224_reactive_power_l2_net_t0_min_var',
:'p224_reactive_power_l2_net_t0_min_timestamp',
:'p224_reactive_power_l3_net_t0_avg_var',
:'p224_reactive_power_l3_net_t0_max_var',
:'p224_reactive_power_l3_net_t0_max_timestamp',
:'p224_reactive_power_l3_net_t0_min_var',
:'p224_reactive_power_l3_net_t0_min_timestamp',
:'p224_voltage_l1_any_t0_avg_v',
:'p224_voltage_l1_any_t0_max_v',
:'p224_voltage_l1_any_t0_max_timestamp',
:'p224_voltage_l1_any_t0_min_v',
:'p224_voltage_l1_any_t0_min_timestamp',
:'p224_voltage_l2_any_t0_avg_v',
:'p224_voltage_l2_any_t0_max_v',
:'p224_voltage_l2_any_t0_max_timestamp',
:'p224_voltage_l2_any_t0_min_v',
:'p224_voltage_l2_any_t0_min_timestamp',
:'p224_voltage_l3_any_t0_avg_v',
:'p224_voltage_l3_any_t0_max_v',
:'p224_voltage_l3_any_t0_max_timestamp',
:'p224_voltage_l3_any_t0_min_v',
:'p224_voltage_l3_any_t0_min_timestamp'
      )
    on conflict (
      timestamp,
      interval,
      meter_id,
      measurement_location_id
    ) do
    update
    set
      count = abb_b2x_aggregates.count + EXCLUDED.count,
      quarter_hour_count = 1,
      active_energy_l1_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
        EXCLUDED.active_energy_l1_export_t0_max_wh
      ),
      active_energy_l1_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
        EXCLUDED.active_energy_l1_export_t0_min_wh
      ),
      active_energy_l1_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
        EXCLUDED.active_energy_l1_import_t0_max_wh
      ),
      active_energy_l1_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
        EXCLUDED.active_energy_l1_import_t0_min_wh
      ),
      active_energy_l2_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
        EXCLUDED.active_energy_l2_export_t0_max_wh
      ),
      active_energy_l2_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
        EXCLUDED.active_energy_l2_export_t0_min_wh
      ),
      active_energy_l2_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
        EXCLUDED.active_energy_l2_import_t0_max_wh
      ),
      active_energy_l2_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
        EXCLUDED.active_energy_l2_import_t0_min_wh
      ),
      active_energy_l3_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
        EXCLUDED.active_energy_l3_export_t0_max_wh
      ),
      active_energy_l3_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
        EXCLUDED.active_energy_l3_export_t0_min_wh
      ),
      active_energy_l3_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
        EXCLUDED.active_energy_l3_import_t0_max_wh
      ),
      active_energy_l3_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
        EXCLUDED.active_energy_l3_import_t0_min_wh
      ),
      active_energy_total_export_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
        EXCLUDED.active_energy_total_export_t0_max_wh
      ),
      active_energy_total_export_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
        EXCLUDED.active_energy_total_export_t0_min_wh
      ),
      active_energy_total_import_t0_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
        EXCLUDED.active_energy_total_import_t0_max_wh
      ),
      active_energy_total_import_t0_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
        EXCLUDED.active_energy_total_import_t0_min_wh
      ),
      active_energy_total_import_t1_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
        EXCLUDED.active_energy_total_import_t1_max_wh
      ),
      active_energy_total_import_t1_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
        EXCLUDED.active_energy_total_import_t1_min_wh
      ),
      active_energy_total_import_t2_max_wh = greatest(
        abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
        EXCLUDED.active_energy_total_import_t2_max_wh
      ),
      active_energy_total_import_t2_min_wh = least(
        abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
        EXCLUDED.active_energy_total_import_t2_min_wh
      ),
      active_power_l1_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l1_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l1_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l1_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l1_net_t0_max_w,
        EXCLUDED.active_power_l1_net_t0_max_w
      ),
      active_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_max_w > abb_b2x_aggregates.active_power_l1_net_t0_max_w then EXCLUDED.active_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_max_timestamp
      end,
      active_power_l1_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l1_net_t0_min_w,
        EXCLUDED.active_power_l1_net_t0_min_w
      ),
      active_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l1_net_t0_min_w < abb_b2x_aggregates.active_power_l1_net_t0_min_w then EXCLUDED.active_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l1_net_t0_min_timestamp
      end,
      active_power_l2_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l2_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l2_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l2_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l2_net_t0_max_w,
        EXCLUDED.active_power_l2_net_t0_max_w
      ),
      active_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_max_w > abb_b2x_aggregates.active_power_l2_net_t0_max_w then EXCLUDED.active_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_max_timestamp
      end,
      active_power_l2_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l2_net_t0_min_w,
        EXCLUDED.active_power_l2_net_t0_min_w
      ),
      active_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l2_net_t0_min_w < abb_b2x_aggregates.active_power_l2_net_t0_min_w then EXCLUDED.active_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l2_net_t0_min_timestamp
      end,
      active_power_l3_net_t0_avg_w = (
        abb_b2x_aggregates.active_power_l3_net_t0_avg_w * abb_b2x_aggregates.count + EXCLUDED.active_power_l3_net_t0_avg_w * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      active_power_l3_net_t0_max_w = greatest(
        abb_b2x_aggregates.active_power_l3_net_t0_max_w,
        EXCLUDED.active_power_l3_net_t0_max_w
      ),
      active_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_max_w > abb_b2x_aggregates.active_power_l3_net_t0_max_w then EXCLUDED.active_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_max_timestamp
      end,
      active_power_l3_net_t0_min_w = least(
        abb_b2x_aggregates.active_power_l3_net_t0_min_w,
        EXCLUDED.active_power_l3_net_t0_min_w
      ),
      active_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.active_power_l3_net_t0_min_w < abb_b2x_aggregates.active_power_l3_net_t0_min_w then EXCLUDED.active_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.active_power_l3_net_t0_min_timestamp
      end,
      current_l1_any_t0_avg_a = (
        abb_b2x_aggregates.current_l1_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l1_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l1_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l1_any_t0_max_a,
        EXCLUDED.current_l1_any_t0_max_a
      ),
      current_l1_any_t0_max_timestamp = case
        when EXCLUDED.current_l1_any_t0_max_a > abb_b2x_aggregates.current_l1_any_t0_max_a then EXCLUDED.current_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_max_timestamp
      end,
      current_l1_any_t0_min_a = least(
        abb_b2x_aggregates.current_l1_any_t0_min_a,
        EXCLUDED.current_l1_any_t0_min_a
      ),
      current_l1_any_t0_min_timestamp = case
        when EXCLUDED.current_l1_any_t0_min_a < abb_b2x_aggregates.current_l1_any_t0_min_a then EXCLUDED.current_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l1_any_t0_min_timestamp
      end,
      current_l2_any_t0_avg_a = (
        abb_b2x_aggregates.current_l2_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l2_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l2_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l2_any_t0_max_a,
        EXCLUDED.current_l2_any_t0_max_a
      ),
      current_l2_any_t0_max_timestamp = case
        when EXCLUDED.current_l2_any_t0_max_a > abb_b2x_aggregates.current_l2_any_t0_max_a then EXCLUDED.current_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_max_timestamp
      end,
      current_l2_any_t0_min_a = least(
        abb_b2x_aggregates.current_l2_any_t0_min_a,
        EXCLUDED.current_l2_any_t0_min_a
      ),
      current_l2_any_t0_min_timestamp = case
        when EXCLUDED.current_l2_any_t0_min_a < abb_b2x_aggregates.current_l2_any_t0_min_a then EXCLUDED.current_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l2_any_t0_min_timestamp
      end,
      current_l3_any_t0_avg_a = (
        abb_b2x_aggregates.current_l3_any_t0_avg_a * abb_b2x_aggregates.count + EXCLUDED.current_l3_any_t0_avg_a * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      current_l3_any_t0_max_a = greatest(
        abb_b2x_aggregates.current_l3_any_t0_max_a,
        EXCLUDED.current_l3_any_t0_max_a
      ),
      current_l3_any_t0_max_timestamp = case
        when EXCLUDED.current_l3_any_t0_max_a > abb_b2x_aggregates.current_l3_any_t0_max_a then EXCLUDED.current_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_max_timestamp
      end,
      current_l3_any_t0_min_a = least(
        abb_b2x_aggregates.current_l3_any_t0_min_a,
        EXCLUDED.current_l3_any_t0_min_a
      ),
      current_l3_any_t0_min_timestamp = case
        when EXCLUDED.current_l3_any_t0_min_a < abb_b2x_aggregates.current_l3_any_t0_min_a then EXCLUDED.current_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.current_l3_any_t0_min_timestamp
      end,
      derived_active_power_l1_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_export_t0_max_wh,
          EXCLUDED.active_energy_l1_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_export_t0_min_wh,
          EXCLUDED.active_energy_l1_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l1_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l1_import_t0_max_wh,
          EXCLUDED.active_energy_l1_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l1_import_t0_min_wh,
          EXCLUDED.active_energy_l1_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_export_t0_max_wh,
          EXCLUDED.active_energy_l2_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_export_t0_min_wh,
          EXCLUDED.active_energy_l2_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l2_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l2_import_t0_max_wh,
          EXCLUDED.active_energy_l2_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l2_import_t0_min_wh,
          EXCLUDED.active_energy_l2_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_export_t0_max_wh,
          EXCLUDED.active_energy_l3_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_export_t0_min_wh,
          EXCLUDED.active_energy_l3_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_l3_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_l3_import_t0_max_wh,
          EXCLUDED.active_energy_l3_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_l3_import_t0_min_wh,
          EXCLUDED.active_energy_l3_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_export_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_export_t0_max_wh,
          EXCLUDED.active_energy_total_export_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_export_t0_min_wh,
          EXCLUDED.active_energy_total_export_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t0_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t0_max_wh,
          EXCLUDED.active_energy_total_import_t0_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t0_min_wh,
          EXCLUDED.active_energy_total_import_t0_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t1_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t1_max_wh,
          EXCLUDED.active_energy_total_import_t1_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t1_min_wh,
          EXCLUDED.active_energy_total_import_t1_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_avg_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_max_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_active_power_total_import_t2_min_w = (
        greatest(
          abb_b2x_aggregates.active_energy_total_import_t2_max_wh,
          EXCLUDED.active_energy_total_import_t2_max_wh
        ) - least(
          abb_b2x_aggregates.active_energy_total_import_t2_min_wh,
          EXCLUDED.active_energy_total_import_t2_min_wh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
          EXCLUDED.reactive_energy_l1_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
          EXCLUDED.reactive_energy_l1_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l1_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
          EXCLUDED.reactive_energy_l1_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
          EXCLUDED.reactive_energy_l1_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
          EXCLUDED.reactive_energy_l2_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
          EXCLUDED.reactive_energy_l2_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l2_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
          EXCLUDED.reactive_energy_l2_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
          EXCLUDED.reactive_energy_l2_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
          EXCLUDED.reactive_energy_l3_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
          EXCLUDED.reactive_energy_l3_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_l3_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
          EXCLUDED.reactive_energy_l3_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
          EXCLUDED.reactive_energy_l3_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_export_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
          EXCLUDED.reactive_energy_total_export_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
          EXCLUDED.reactive_energy_total_export_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_avg_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_max_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      derived_reactive_power_total_import_t0_min_var = (
        greatest(
          abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
          EXCLUDED.reactive_energy_total_import_t0_max_varh
        ) - least(
          abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
          EXCLUDED.reactive_energy_total_import_t0_min_varh
        )
      ) * 4,
      reactive_energy_l1_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_max_varh,
        EXCLUDED.reactive_energy_l1_export_t0_max_varh
      ),
      reactive_energy_l1_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_export_t0_min_varh,
        EXCLUDED.reactive_energy_l1_export_t0_min_varh
      ),
      reactive_energy_l1_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_max_varh,
        EXCLUDED.reactive_energy_l1_import_t0_max_varh
      ),
      reactive_energy_l1_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l1_import_t0_min_varh,
        EXCLUDED.reactive_energy_l1_import_t0_min_varh
      ),
      reactive_energy_l2_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_max_varh,
        EXCLUDED.reactive_energy_l2_export_t0_max_varh
      ),
      reactive_energy_l2_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_export_t0_min_varh,
        EXCLUDED.reactive_energy_l2_export_t0_min_varh
      ),
      reactive_energy_l2_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_max_varh,
        EXCLUDED.reactive_energy_l2_import_t0_max_varh
      ),
      reactive_energy_l2_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l2_import_t0_min_varh,
        EXCLUDED.reactive_energy_l2_import_t0_min_varh
      ),
      reactive_energy_l3_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_max_varh,
        EXCLUDED.reactive_energy_l3_export_t0_max_varh
      ),
      reactive_energy_l3_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_export_t0_min_varh,
        EXCLUDED.reactive_energy_l3_export_t0_min_varh
      ),
      reactive_energy_l3_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_max_varh,
        EXCLUDED.reactive_energy_l3_import_t0_max_varh
      ),
      reactive_energy_l3_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_l3_import_t0_min_varh,
        EXCLUDED.reactive_energy_l3_import_t0_min_varh
      ),
      reactive_energy_total_export_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_export_t0_max_varh,
        EXCLUDED.reactive_energy_total_export_t0_max_varh
      ),
      reactive_energy_total_export_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_export_t0_min_varh,
        EXCLUDED.reactive_energy_total_export_t0_min_varh
      ),
      reactive_energy_total_import_t0_max_varh = greatest(
        abb_b2x_aggregates.reactive_energy_total_import_t0_max_varh,
        EXCLUDED.reactive_energy_total_import_t0_max_varh
      ),
      reactive_energy_total_import_t0_min_varh = least(
        abb_b2x_aggregates.reactive_energy_total_import_t0_min_varh,
        EXCLUDED.reactive_energy_total_import_t0_min_varh
      ),
      reactive_power_l1_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l1_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l1_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l1_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l1_net_t0_max_var,
        EXCLUDED.reactive_power_l1_net_t0_max_var
      ),
      reactive_power_l1_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_max_var > abb_b2x_aggregates.reactive_power_l1_net_t0_max_var then EXCLUDED.reactive_power_l1_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_max_timestamp
      end,
      reactive_power_l1_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l1_net_t0_min_var,
        EXCLUDED.reactive_power_l1_net_t0_min_var
      ),
      reactive_power_l1_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l1_net_t0_min_var < abb_b2x_aggregates.reactive_power_l1_net_t0_min_var then EXCLUDED.reactive_power_l1_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l1_net_t0_min_timestamp
      end,
      reactive_power_l2_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l2_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l2_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l2_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l2_net_t0_max_var,
        EXCLUDED.reactive_power_l2_net_t0_max_var
      ),
      reactive_power_l2_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_max_var > abb_b2x_aggregates.reactive_power_l2_net_t0_max_var then EXCLUDED.reactive_power_l2_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_max_timestamp
      end,
      reactive_power_l2_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l2_net_t0_min_var,
        EXCLUDED.reactive_power_l2_net_t0_min_var
      ),
      reactive_power_l2_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l2_net_t0_min_var < abb_b2x_aggregates.reactive_power_l2_net_t0_min_var then EXCLUDED.reactive_power_l2_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l2_net_t0_min_timestamp
      end,
      reactive_power_l3_net_t0_avg_var = (
        abb_b2x_aggregates.reactive_power_l3_net_t0_avg_var * abb_b2x_aggregates.count + EXCLUDED.reactive_power_l3_net_t0_avg_var * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      reactive_power_l3_net_t0_max_var = greatest(
        abb_b2x_aggregates.reactive_power_l3_net_t0_max_var,
        EXCLUDED.reactive_power_l3_net_t0_max_var
      ),
      reactive_power_l3_net_t0_max_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_max_var > abb_b2x_aggregates.reactive_power_l3_net_t0_max_var then EXCLUDED.reactive_power_l3_net_t0_max_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_max_timestamp
      end,
      reactive_power_l3_net_t0_min_var = least(
        abb_b2x_aggregates.reactive_power_l3_net_t0_min_var,
        EXCLUDED.reactive_power_l3_net_t0_min_var
      ),
      reactive_power_l3_net_t0_min_timestamp = case
        when EXCLUDED.reactive_power_l3_net_t0_min_var < abb_b2x_aggregates.reactive_power_l3_net_t0_min_var then EXCLUDED.reactive_power_l3_net_t0_min_timestamp
        else abb_b2x_aggregates.reactive_power_l3_net_t0_min_timestamp
      end,
      voltage_l1_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l1_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l1_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l1_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l1_any_t0_max_v,
        EXCLUDED.voltage_l1_any_t0_max_v
      ),
      voltage_l1_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_max_v > abb_b2x_aggregates.voltage_l1_any_t0_max_v then EXCLUDED.voltage_l1_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_max_timestamp
      end,
      voltage_l1_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l1_any_t0_min_v,
        EXCLUDED.voltage_l1_any_t0_min_v
      ),
      voltage_l1_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l1_any_t0_min_v < abb_b2x_aggregates.voltage_l1_any_t0_min_v then EXCLUDED.voltage_l1_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l1_any_t0_min_timestamp
      end,
      voltage_l2_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l2_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l2_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l2_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l2_any_t0_max_v,
        EXCLUDED.voltage_l2_any_t0_max_v
      ),
      voltage_l2_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_max_v > abb_b2x_aggregates.voltage_l2_any_t0_max_v then EXCLUDED.voltage_l2_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_max_timestamp
      end,
      voltage_l2_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l2_any_t0_min_v,
        EXCLUDED.voltage_l2_any_t0_min_v
      ),
      voltage_l2_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l2_any_t0_min_v < abb_b2x_aggregates.voltage_l2_any_t0_min_v then EXCLUDED.voltage_l2_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l2_any_t0_min_timestamp
      end,
      voltage_l3_any_t0_avg_v = (
        abb_b2x_aggregates.voltage_l3_any_t0_avg_v * abb_b2x_aggregates.count + EXCLUDED.voltage_l3_any_t0_avg_v * EXCLUDED.count
      ) / (abb_b2x_aggregates.count + EXCLUDED.count),
      voltage_l3_any_t0_max_v = greatest(
        abb_b2x_aggregates.voltage_l3_any_t0_max_v,
        EXCLUDED.voltage_l3_any_t0_max_v
      ),
      voltage_l3_any_t0_max_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_max_v > abb_b2x_aggregates.voltage_l3_any_t0_max_v then EXCLUDED.voltage_l3_any_t0_max_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_max_timestamp
      end,
      voltage_l3_any_t0_min_v = least(
        abb_b2x_aggregates.voltage_l3_any_t0_min_v,
        EXCLUDED.voltage_l3_any_t0_min_v
      ),
      voltage_l3_any_t0_min_timestamp = case
        when EXCLUDED.voltage_l3_any_t0_min_v < abb_b2x_aggregates.voltage_l3_any_t0_min_v then EXCLUDED.voltage_l3_any_t0_min_timestamp
        else abb_b2x_aggregates.voltage_l3_any_t0_min_timestamp
      end
    returning
      abb_b2x_aggregates.*
  ),
  delta224 as (
    select
      date_trunc(
        'day',
        new224.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' daily_timestamp,
      date_trunc(
        'month',
        new224.timestamp AT time zone 'Europe/Zagreb'
      ) AT time zone 'Europe/Zagreb' monthly_timestamp,
      new224.timestamp,
      new224.interval,
      new224.meter_id,
      new224.measurement_location_id,
      case
        when old224.timestamp is null then 1
        else 0
      end new_count,
      new224.derived_active_power_l1_export_t0_avg_w - coalesce(old224.derived_active_power_l1_export_t0_avg_w, 0) derived_active_power_l1_export_t0_avg_w,
      greatest(
        new224.derived_active_power_l1_export_t0_max_w,
        coalesce(
          old224.derived_active_power_l1_export_t0_max_w,
          new224.derived_active_power_l1_export_t0_max_w
        )
      ) derived_active_power_l1_export_t0_max_w,
      case
        when new224.derived_active_power_l1_export_t0_max_w > coalesce(
          old224.derived_active_power_l1_export_t0_max_w,
          new224.derived_active_power_l1_export_t0_max_w
        ) then new224.derived_active_power_l1_export_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_l1_export_t0_max_timestamp,
          new224.derived_active_power_l1_export_t0_max_timestamp
        )
      end derived_active_power_l1_export_t0_max_timestamp,
      least(
        new224.derived_active_power_l1_export_t0_min_w,
        coalesce(
          old224.derived_active_power_l1_export_t0_min_w,
          new224.derived_active_power_l1_export_t0_min_w
        )
      ) derived_active_power_l1_export_t0_min_w,
      case
        when new224.derived_active_power_l1_export_t0_min_w < coalesce(
          old224.derived_active_power_l1_export_t0_min_w,
          new224.derived_active_power_l1_export_t0_min_w
        ) then new224.derived_active_power_l1_export_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_l1_export_t0_min_timestamp,
          new224.derived_active_power_l1_export_t0_min_timestamp
        )
      end derived_active_power_l1_export_t0_min_timestamp,
      new224.derived_active_power_l1_import_t0_avg_w - coalesce(old224.derived_active_power_l1_import_t0_avg_w, 0) derived_active_power_l1_import_t0_avg_w,
      greatest(
        new224.derived_active_power_l1_import_t0_max_w,
        coalesce(
          old224.derived_active_power_l1_import_t0_max_w,
          new224.derived_active_power_l1_import_t0_max_w
        )
      ) derived_active_power_l1_import_t0_max_w,
      case
        when new224.derived_active_power_l1_import_t0_max_w > coalesce(
          old224.derived_active_power_l1_import_t0_max_w,
          new224.derived_active_power_l1_import_t0_max_w
        ) then new224.derived_active_power_l1_import_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_l1_import_t0_max_timestamp,
          new224.derived_active_power_l1_import_t0_max_timestamp
        )
      end derived_active_power_l1_import_t0_max_timestamp,
      least(
        new224.derived_active_power_l1_import_t0_min_w,
        coalesce(
          old224.derived_active_power_l1_import_t0_min_w,
          new224.derived_active_power_l1_import_t0_min_w
        )
      ) derived_active_power_l1_import_t0_min_w,
      case
        when new224.derived_active_power_l1_import_t0_min_w < coalesce(
          old224.derived_active_power_l1_import_t0_min_w,
          new224.derived_active_power_l1_import_t0_min_w
        ) then new224.derived_active_power_l1_import_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_l1_import_t0_min_timestamp,
          new224.derived_active_power_l1_import_t0_min_timestamp
        )
      end derived_active_power_l1_import_t0_min_timestamp,
      new224.derived_active_power_l2_export_t0_avg_w - coalesce(old224.derived_active_power_l2_export_t0_avg_w, 0) derived_active_power_l2_export_t0_avg_w,
      greatest(
        new224.derived_active_power_l2_export_t0_max_w,
        coalesce(
          old224.derived_active_power_l2_export_t0_max_w,
          new224.derived_active_power_l2_export_t0_max_w
        )
      ) derived_active_power_l2_export_t0_max_w,
      case
        when new224.derived_active_power_l2_export_t0_max_w > coalesce(
          old224.derived_active_power_l2_export_t0_max_w,
          new224.derived_active_power_l2_export_t0_max_w
        ) then new224.derived_active_power_l2_export_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_l2_export_t0_max_timestamp,
          new224.derived_active_power_l2_export_t0_max_timestamp
        )
      end derived_active_power_l2_export_t0_max_timestamp,
      least(
        new224.derived_active_power_l2_export_t0_min_w,
        coalesce(
          old224.derived_active_power_l2_export_t0_min_w,
          new224.derived_active_power_l2_export_t0_min_w
        )
      ) derived_active_power_l2_export_t0_min_w,
      case
        when new224.derived_active_power_l2_export_t0_min_w < coalesce(
          old224.derived_active_power_l2_export_t0_min_w,
          new224.derived_active_power_l2_export_t0_min_w
        ) then new224.derived_active_power_l2_export_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_l2_export_t0_min_timestamp,
          new224.derived_active_power_l2_export_t0_min_timestamp
        )
      end derived_active_power_l2_export_t0_min_timestamp,
      new224.derived_active_power_l2_import_t0_avg_w - coalesce(old224.derived_active_power_l2_import_t0_avg_w, 0) derived_active_power_l2_import_t0_avg_w,
      greatest(
        new224.derived_active_power_l2_import_t0_max_w,
        coalesce(
          old224.derived_active_power_l2_import_t0_max_w,
          new224.derived_active_power_l2_import_t0_max_w
        )
      ) derived_active_power_l2_import_t0_max_w,
      case
        when new224.derived_active_power_l2_import_t0_max_w > coalesce(
          old224.derived_active_power_l2_import_t0_max_w,
          new224.derived_active_power_l2_import_t0_max_w
        ) then new224.derived_active_power_l2_import_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_l2_import_t0_max_timestamp,
          new224.derived_active_power_l2_import_t0_max_timestamp
        )
      end derived_active_power_l2_import_t0_max_timestamp,
      least(
        new224.derived_active_power_l2_import_t0_min_w,
        coalesce(
          old224.derived_active_power_l2_import_t0_min_w,
          new224.derived_active_power_l2_import_t0_min_w
        )
      ) derived_active_power_l2_import_t0_min_w,
      case
        when new224.derived_active_power_l2_import_t0_min_w < coalesce(
          old224.derived_active_power_l2_import_t0_min_w,
          new224.derived_active_power_l2_import_t0_min_w
        ) then new224.derived_active_power_l2_import_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_l2_import_t0_min_timestamp,
          new224.derived_active_power_l2_import_t0_min_timestamp
        )
      end derived_active_power_l2_import_t0_min_timestamp,
      new224.derived_active_power_l3_export_t0_avg_w - coalesce(old224.derived_active_power_l3_export_t0_avg_w, 0) derived_active_power_l3_export_t0_avg_w,
      greatest(
        new224.derived_active_power_l3_export_t0_max_w,
        coalesce(
          old224.derived_active_power_l3_export_t0_max_w,
          new224.derived_active_power_l3_export_t0_max_w
        )
      ) derived_active_power_l3_export_t0_max_w,
      case
        when new224.derived_active_power_l3_export_t0_max_w > coalesce(
          old224.derived_active_power_l3_export_t0_max_w,
          new224.derived_active_power_l3_export_t0_max_w
        ) then new224.derived_active_power_l3_export_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_l3_export_t0_max_timestamp,
          new224.derived_active_power_l3_export_t0_max_timestamp
        )
      end derived_active_power_l3_export_t0_max_timestamp,
      least(
        new224.derived_active_power_l3_export_t0_min_w,
        coalesce(
          old224.derived_active_power_l3_export_t0_min_w,
          new224.derived_active_power_l3_export_t0_min_w
        )
      ) derived_active_power_l3_export_t0_min_w,
      case
        when new224.derived_active_power_l3_export_t0_min_w < coalesce(
          old224.derived_active_power_l3_export_t0_min_w,
          new224.derived_active_power_l3_export_t0_min_w
        ) then new224.derived_active_power_l3_export_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_l3_export_t0_min_timestamp,
          new224.derived_active_power_l3_export_t0_min_timestamp
        )
      end derived_active_power_l3_export_t0_min_timestamp,
      new224.derived_active_power_l3_import_t0_avg_w - coalesce(old224.derived_active_power_l3_import_t0_avg_w, 0) derived_active_power_l3_import_t0_avg_w,
      greatest(
        new224.derived_active_power_l3_import_t0_max_w,
        coalesce(
          old224.derived_active_power_l3_import_t0_max_w,
          new224.derived_active_power_l3_import_t0_max_w
        )
      ) derived_active_power_l3_import_t0_max_w,
      case
        when new224.derived_active_power_l3_import_t0_max_w > coalesce(
          old224.derived_active_power_l3_import_t0_max_w,
          new224.derived_active_power_l3_import_t0_max_w
        ) then new224.derived_active_power_l3_import_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_l3_import_t0_max_timestamp,
          new224.derived_active_power_l3_import_t0_max_timestamp
        )
      end derived_active_power_l3_import_t0_max_timestamp,
      least(
        new224.derived_active_power_l3_import_t0_min_w,
        coalesce(
          old224.derived_active_power_l3_import_t0_min_w,
          new224.derived_active_power_l3_import_t0_min_w
        )
      ) derived_active_power_l3_import_t0_min_w,
      case
        when new224.derived_active_power_l3_import_t0_min_w < coalesce(
          old224.derived_active_power_l3_import_t0_min_w,
          new224.derived_active_power_l3_import_t0_min_w
        ) then new224.derived_active_power_l3_import_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_l3_import_t0_min_timestamp,
          new224.derived_active_power_l3_import_t0_min_timestamp
        )
      end derived_active_power_l3_import_t0_min_timestamp,
      new224.derived_active_power_total_export_t0_avg_w - coalesce(
        old224.derived_active_power_total_export_t0_avg_w,
        0
      ) derived_active_power_total_export_t0_avg_w,
      greatest(
        new224.derived_active_power_total_export_t0_max_w,
        coalesce(
          old224.derived_active_power_total_export_t0_max_w,
          new224.derived_active_power_total_export_t0_max_w
        )
      ) derived_active_power_total_export_t0_max_w,
      case
        when new224.derived_active_power_total_export_t0_max_w > coalesce(
          old224.derived_active_power_total_export_t0_max_w,
          new224.derived_active_power_total_export_t0_max_w
        ) then new224.derived_active_power_total_export_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_total_export_t0_max_timestamp,
          new224.derived_active_power_total_export_t0_max_timestamp
        )
      end derived_active_power_total_export_t0_max_timestamp,
      least(
        new224.derived_active_power_total_export_t0_min_w,
        coalesce(
          old224.derived_active_power_total_export_t0_min_w,
          new224.derived_active_power_total_export_t0_min_w
        )
      ) derived_active_power_total_export_t0_min_w,
      case
        when new224.derived_active_power_total_export_t0_min_w < coalesce(
          old224.derived_active_power_total_export_t0_min_w,
          new224.derived_active_power_total_export_t0_min_w
        ) then new224.derived_active_power_total_export_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_total_export_t0_min_timestamp,
          new224.derived_active_power_total_export_t0_min_timestamp
        )
      end derived_active_power_total_export_t0_min_timestamp,
      new224.derived_active_power_total_import_t0_avg_w - coalesce(
        old224.derived_active_power_total_import_t0_avg_w,
        0
      ) derived_active_power_total_import_t0_avg_w,
      greatest(
        new224.derived_active_power_total_import_t0_max_w,
        coalesce(
          old224.derived_active_power_total_import_t0_max_w,
          new224.derived_active_power_total_import_t0_max_w
        )
      ) derived_active_power_total_import_t0_max_w,
      case
        when new224.derived_active_power_total_import_t0_max_w > coalesce(
          old224.derived_active_power_total_import_t0_max_w,
          new224.derived_active_power_total_import_t0_max_w
        ) then new224.derived_active_power_total_import_t0_max_timestamp
        else coalesce(
          old224.derived_active_power_total_import_t0_max_timestamp,
          new224.derived_active_power_total_import_t0_max_timestamp
        )
      end derived_active_power_total_import_t0_max_timestamp,
      least(
        new224.derived_active_power_total_import_t0_min_w,
        coalesce(
          old224.derived_active_power_total_import_t0_min_w,
          new224.derived_active_power_total_import_t0_min_w
        )
      ) derived_active_power_total_import_t0_min_w,
      case
        when new224.derived_active_power_total_import_t0_min_w < coalesce(
          old224.derived_active_power_total_import_t0_min_w,
          new224.derived_active_power_total_import_t0_min_w
        ) then new224.derived_active_power_total_import_t0_min_timestamp
        else coalesce(
          old224.derived_active_power_total_import_t0_min_timestamp,
          new224.derived_active_power_total_import_t0_min_timestamp
        )
      end derived_active_power_total_import_t0_min_timestamp,
      new224.derived_active_power_total_import_t1_avg_w - coalesce(
        old224.derived_active_power_total_import_t1_avg_w,
        0
      ) derived_active_power_total_import_t1_avg_w,
      greatest(
        new224.derived_active_power_total_import_t1_max_w,
        coalesce(
          old224.derived_active_power_total_import_t1_max_w,
          new224.derived_active_power_total_import_t1_max_w
        )
      ) derived_active_power_total_import_t1_max_w,
      case
        when new224.derived_active_power_total_import_t1_max_w > coalesce(
          old224.derived_active_power_total_import_t1_max_w,
          new224.derived_active_power_total_import_t1_max_w
        ) then new224.derived_active_power_total_import_t1_max_timestamp
        else coalesce(
          old224.derived_active_power_total_import_t1_max_timestamp,
          new224.derived_active_power_total_import_t1_max_timestamp
        )
      end derived_active_power_total_import_t1_max_timestamp,
      least(
        new224.derived_active_power_total_import_t1_min_w,
        coalesce(
          old224.derived_active_power_total_import_t1_min_w,
          new224.derived_active_power_total_import_t1_min_w
        )
      ) derived_active_power_total_import_t1_min_w,
      case
        when new224.derived_active_power_total_import_t1_min_w < coalesce(
          old224.derived_active_power_total_import_t1_min_w,
          new224.derived_active_power_total_import_t1_min_w
        ) then new224.derived_active_power_total_import_t1_min_timestamp
        else coalesce(
          old224.derived_active_power_total_import_t1_min_timestamp,
          new224.derived_active_power_total_import_t1_min_timestamp
        )
      end derived_active_power_total_import_t1_min_timestamp,
      new224.derived_active_power_total_import_t2_avg_w - coalesce(
        old224.derived_active_power_total_import_t2_avg_w,
        0
      ) derived_active_power_total_import_t2_avg_w,
      greatest(
        new224.derived_active_power_total_import_t2_max_w,
        coalesce(
          old224.derived_active_power_total_import_t2_max_w,
          new224.derived_active_power_total_import_t2_max_w
        )
      ) derived_active_power_total_import_t2_max_w,
      case
        when new224.derived_active_power_total_import_t2_max_w > coalesce(
          old224.derived_active_power_total_import_t2_max_w,
          new224.derived_active_power_total_import_t2_max_w
        ) then new224.derived_active_power_total_import_t2_max_timestamp
        else coalesce(
          old224.derived_active_power_total_import_t2_max_timestamp,
          new224.derived_active_power_total_import_t2_max_timestamp
        )
      end derived_active_power_total_import_t2_max_timestamp,
      least(
        new224.derived_active_power_total_import_t2_min_w,
        coalesce(
          old224.derived_active_power_total_import_t2_min_w,
          new224.derived_active_power_total_import_t2_min_w
        )
      ) derived_active_power_total_import_t2_min_w,
      case
        when new224.derived_active_power_total_import_t2_min_w < coalesce(
          old224.derived_active_power_total_import_t2_min_w,
          new224.derived_active_power_total_import_t2_min_w
        ) then new224.derived_active_power_total_import_t2_min_timestamp
        else coalesce(
          old224.derived_active_power_total_import_t2_min_timestamp,
          new224.derived_active_power_total_import_t2_min_timestamp
        )
      end derived_active_power_total_import_t2_min_timestamp,
      new224.derived_reactive_power_l1_export_t0_avg_var - coalesce(
        old224.derived_reactive_power_l1_export_t0_avg_var,
        0
      ) derived_reactive_power_l1_export_t0_avg_var,
      greatest(
        new224.derived_reactive_power_l1_export_t0_max_var,
        coalesce(
          old224.derived_reactive_power_l1_export_t0_max_var,
          new224.derived_reactive_power_l1_export_t0_max_var
        )
      ) derived_reactive_power_l1_export_t0_max_var,
      case
        when new224.derived_reactive_power_l1_export_t0_max_var > coalesce(
          old224.derived_reactive_power_l1_export_t0_max_var,
          new224.derived_reactive_power_l1_export_t0_max_var
        ) then new224.derived_reactive_power_l1_export_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_l1_export_t0_max_timestamp,
          new224.derived_reactive_power_l1_export_t0_max_timestamp
        )
      end derived_reactive_power_l1_export_t0_max_timestamp,
      least(
        new224.derived_reactive_power_l1_export_t0_min_var,
        coalesce(
          old224.derived_reactive_power_l1_export_t0_min_var,
          new224.derived_reactive_power_l1_export_t0_min_var
        )
      ) derived_reactive_power_l1_export_t0_min_var,
      case
        when new224.derived_reactive_power_l1_export_t0_min_var < coalesce(
          old224.derived_reactive_power_l1_export_t0_min_var,
          new224.derived_reactive_power_l1_export_t0_min_var
        ) then new224.derived_reactive_power_l1_export_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_l1_export_t0_min_timestamp,
          new224.derived_reactive_power_l1_export_t0_min_timestamp
        )
      end derived_reactive_power_l1_export_t0_min_timestamp,
      new224.derived_reactive_power_l1_import_t0_avg_var - coalesce(
        old224.derived_reactive_power_l1_import_t0_avg_var,
        0
      ) derived_reactive_power_l1_import_t0_avg_var,
      greatest(
        new224.derived_reactive_power_l1_import_t0_max_var,
        coalesce(
          old224.derived_reactive_power_l1_import_t0_max_var,
          new224.derived_reactive_power_l1_import_t0_max_var
        )
      ) derived_reactive_power_l1_import_t0_max_var,
      case
        when new224.derived_reactive_power_l1_import_t0_max_var > coalesce(
          old224.derived_reactive_power_l1_import_t0_max_var,
          new224.derived_reactive_power_l1_import_t0_max_var
        ) then new224.derived_reactive_power_l1_import_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_l1_import_t0_max_timestamp,
          new224.derived_reactive_power_l1_import_t0_max_timestamp
        )
      end derived_reactive_power_l1_import_t0_max_timestamp,
      least(
        new224.derived_reactive_power_l1_import_t0_min_var,
        coalesce(
          old224.derived_reactive_power_l1_import_t0_min_var,
          new224.derived_reactive_power_l1_import_t0_min_var
        )
      ) derived_reactive_power_l1_import_t0_min_var,
      case
        when new224.derived_reactive_power_l1_import_t0_min_var < coalesce(
          old224.derived_reactive_power_l1_import_t0_min_var,
          new224.derived_reactive_power_l1_import_t0_min_var
        ) then new224.derived_reactive_power_l1_import_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_l1_import_t0_min_timestamp,
          new224.derived_reactive_power_l1_import_t0_min_timestamp
        )
      end derived_reactive_power_l1_import_t0_min_timestamp,
      new224.derived_reactive_power_l2_export_t0_avg_var - coalesce(
        old224.derived_reactive_power_l2_export_t0_avg_var,
        0
      ) derived_reactive_power_l2_export_t0_avg_var,
      greatest(
        new224.derived_reactive_power_l2_export_t0_max_var,
        coalesce(
          old224.derived_reactive_power_l2_export_t0_max_var,
          new224.derived_reactive_power_l2_export_t0_max_var
        )
      ) derived_reactive_power_l2_export_t0_max_var,
      case
        when new224.derived_reactive_power_l2_export_t0_max_var > coalesce(
          old224.derived_reactive_power_l2_export_t0_max_var,
          new224.derived_reactive_power_l2_export_t0_max_var
        ) then new224.derived_reactive_power_l2_export_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_l2_export_t0_max_timestamp,
          new224.derived_reactive_power_l2_export_t0_max_timestamp
        )
      end derived_reactive_power_l2_export_t0_max_timestamp,
      least(
        new224.derived_reactive_power_l2_export_t0_min_var,
        coalesce(
          old224.derived_reactive_power_l2_export_t0_min_var,
          new224.derived_reactive_power_l2_export_t0_min_var
        )
      ) derived_reactive_power_l2_export_t0_min_var,
      case
        when new224.derived_reactive_power_l2_export_t0_min_var < coalesce(
          old224.derived_reactive_power_l2_export_t0_min_var,
          new224.derived_reactive_power_l2_export_t0_min_var
        ) then new224.derived_reactive_power_l2_export_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_l2_export_t0_min_timestamp,
          new224.derived_reactive_power_l2_export_t0_min_timestamp
        )
      end derived_reactive_power_l2_export_t0_min_timestamp,
      new224.derived_reactive_power_l2_import_t0_avg_var - coalesce(
        old224.derived_reactive_power_l2_import_t0_avg_var,
        0
      ) derived_reactive_power_l2_import_t0_avg_var,
      greatest(
        new224.derived_reactive_power_l2_import_t0_max_var,
        coalesce(
          old224.derived_reactive_power_l2_import_t0_max_var,
          new224.derived_reactive_power_l2_import_t0_max_var
        )
      ) derived_reactive_power_l2_import_t0_max_var,
      case
        when new224.derived_reactive_power_l2_import_t0_max_var > coalesce(
          old224.derived_reactive_power_l2_import_t0_max_var,
          new224.derived_reactive_power_l2_import_t0_max_var
        ) then new224.derived_reactive_power_l2_import_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_l2_import_t0_max_timestamp,
          new224.derived_reactive_power_l2_import_t0_max_timestamp
        )
      end derived_reactive_power_l2_import_t0_max_timestamp,
      least(
        new224.derived_reactive_power_l2_import_t0_min_var,
        coalesce(
          old224.derived_reactive_power_l2_import_t0_min_var,
          new224.derived_reactive_power_l2_import_t0_min_var
        )
      ) derived_reactive_power_l2_import_t0_min_var,
      case
        when new224.derived_reactive_power_l2_import_t0_min_var < coalesce(
          old224.derived_reactive_power_l2_import_t0_min_var,
          new224.derived_reactive_power_l2_import_t0_min_var
        ) then new224.derived_reactive_power_l2_import_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_l2_import_t0_min_timestamp,
          new224.derived_reactive_power_l2_import_t0_min_timestamp
        )
      end derived_reactive_power_l2_import_t0_min_timestamp,
      new224.derived_reactive_power_l3_export_t0_avg_var - coalesce(
        old224.derived_reactive_power_l3_export_t0_avg_var,
        0
      ) derived_reactive_power_l3_export_t0_avg_var,
      greatest(
        new224.derived_reactive_power_l3_export_t0_max_var,
        coalesce(
          old224.derived_reactive_power_l3_export_t0_max_var,
          new224.derived_reactive_power_l3_export_t0_max_var
        )
      ) derived_reactive_power_l3_export_t0_max_var,
      case
        when new224.derived_reactive_power_l3_export_t0_max_var > coalesce(
          old224.derived_reactive_power_l3_export_t0_max_var,
          new224.derived_reactive_power_l3_export_t0_max_var
        ) then new224.derived_reactive_power_l3_export_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_l3_export_t0_max_timestamp,
          new224.derived_reactive_power_l3_export_t0_max_timestamp
        )
      end derived_reactive_power_l3_export_t0_max_timestamp,
      least(
        new224.derived_reactive_power_l3_export_t0_min_var,
        coalesce(
          old224.derived_reactive_power_l3_export_t0_min_var,
          new224.derived_reactive_power_l3_export_t0_min_var
        )
      ) derived_reactive_power_l3_export_t0_min_var,
      case
        when new224.derived_reactive_power_l3_export_t0_min_var < coalesce(
          old224.derived_reactive_power_l3_export_t0_min_var,
          new224.derived_reactive_power_l3_export_t0_min_var
        ) then new224.derived_reactive_power_l3_export_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_l3_export_t0_min_timestamp,
          new224.derived_reactive_power_l3_export_t0_min_timestamp
        )
      end derived_reactive_power_l3_export_t0_min_timestamp,
      new224.derived_reactive_power_l3_import_t0_avg_var - coalesce(
        old224.derived_reactive_power_l3_import_t0_avg_var,
        0
      ) derived_reactive_power_l3_import_t0_avg_var,
      greatest(
        new224.derived_reactive_power_l3_import_t0_max_var,
        coalesce(
          old224.derived_reactive_power_l3_import_t0_max_var,
          new224.derived_reactive_power_l3_import_t0_max_var
        )
      ) derived_reactive_power_l3_import_t0_max_var,
      case
        when new224.derived_reactive_power_l3_import_t0_max_var > coalesce(
          old224.derived_reactive_power_l3_import_t0_max_var,
          new224.derived_reactive_power_l3_import_t0_max_var
        ) then new224.derived_reactive_power_l3_import_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_l3_import_t0_max_timestamp,
          new224.derived_reactive_power_l3_import_t0_max_timestamp
        )
      end derived_reactive_power_l3_import_t0_max_timestamp,
      least(
        new224.derived_reactive_power_l3_import_t0_min_var,
        coalesce(
          old224.derived_reactive_power_l3_import_t0_min_var,
          new224.derived_reactive_power_l3_import_t0_min_var
        )
      ) derived_reactive_power_l3_import_t0_min_var,
      case
        when new224.derived_reactive_power_l3_import_t0_min_var < coalesce(
          old224.derived_reactive_power_l3_import_t0_min_var,
          new224.derived_reactive_power_l3_import_t0_min_var
        ) then new224.derived_reactive_power_l3_import_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_l3_import_t0_min_timestamp,
          new224.derived_reactive_power_l3_import_t0_min_timestamp
        )
      end derived_reactive_power_l3_import_t0_min_timestamp,
      new224.derived_reactive_power_total_export_t0_avg_var - coalesce(
        old224.derived_reactive_power_total_export_t0_avg_var,
        0
      ) derived_reactive_power_total_export_t0_avg_var,
      greatest(
        new224.derived_reactive_power_total_export_t0_max_var,
        coalesce(
          old224.derived_reactive_power_total_export_t0_max_var,
          new224.derived_reactive_power_total_export_t0_max_var
        )
      ) derived_reactive_power_total_export_t0_max_var,
      case
        when new224.derived_reactive_power_total_export_t0_max_var > coalesce(
          old224.derived_reactive_power_total_export_t0_max_var,
          new224.derived_reactive_power_total_export_t0_max_var
        ) then new224.derived_reactive_power_total_export_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_total_export_t0_max_timestamp,
          new224.derived_reactive_power_total_export_t0_max_timestamp
        )
      end derived_reactive_power_total_export_t0_max_timestamp,
      least(
        new224.derived_reactive_power_total_export_t0_min_var,
        coalesce(
          old224.derived_reactive_power_total_export_t0_min_var,
          new224.derived_reactive_power_total_export_t0_min_var
        )
      ) derived_reactive_power_total_export_t0_min_var,
      case
        when new224.derived_reactive_power_total_export_t0_min_var < coalesce(
          old224.derived_reactive_power_total_export_t0_min_var,
          new224.derived_reactive_power_total_export_t0_min_var
        ) then new224.derived_reactive_power_total_export_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_total_export_t0_min_timestamp,
          new224.derived_reactive_power_total_export_t0_min_timestamp
        )
      end derived_reactive_power_total_export_t0_min_timestamp,
      new224.derived_reactive_power_total_import_t0_avg_var - coalesce(
        old224.derived_reactive_power_total_import_t0_avg_var,
        0
      ) derived_reactive_power_total_import_t0_avg_var,
      greatest(
        new224.derived_reactive_power_total_import_t0_max_var,
        coalesce(
          old224.derived_reactive_power_total_import_t0_max_var,
          new224.derived_reactive_power_total_import_t0_max_var
        )
      ) derived_reactive_power_total_import_t0_max_var,
      case
        when new224.derived_reactive_power_total_import_t0_max_var > coalesce(
          old224.derived_reactive_power_total_import_t0_max_var,
          new224.derived_reactive_power_total_import_t0_max_var
        ) then new224.derived_reactive_power_total_import_t0_max_timestamp
        else coalesce(
          old224.derived_reactive_power_total_import_t0_max_timestamp,
          new224.derived_reactive_power_total_import_t0_max_timestamp
        )
      end derived_reactive_power_total_import_t0_max_timestamp,
      least(
        new224.derived_reactive_power_total_import_t0_min_var,
        coalesce(
          old224.derived_reactive_power_total_import_t0_min_var,
          new224.derived_reactive_power_total_import_t0_min_var
        )
      ) derived_reactive_power_total_import_t0_min_var,
      case
        when new224.derived_reactive_power_total_import_t0_min_var < coalesce(
          old224.derived_reactive_power_total_import_t0_min_var,
          new224.derived_reactive_power_total_import_t0_min_var
        ) then new224.derived_reactive_power_total_import_t0_min_timestamp
        else coalesce(
          old224.derived_reactive_power_total_import_t0_min_timestamp,
          new224.derived_reactive_power_total_import_t0_min_timestamp
        )
      end derived_reactive_power_total_import_t0_min_timestamp
    from
      new224
      left join old224 on old224.timestamp = new224.timestamp
      and old224.interval = new224.interval
      and old224.meter_id = new224.meter_id
      and old224.measurement_location_id = new224.measurement_location_id
  ),
  daily224 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta224.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta224.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta224.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta224.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta224.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta224.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta224.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta224.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta224.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta224.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta224.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta224.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta224.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta224.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta224.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta224.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta224.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta224.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta224.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta224.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta224.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta224.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta224.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta224.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta224.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta224.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta224.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta224.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta224.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta224.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta224.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta224.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta224.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta224.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta224.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta224.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta224.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta224.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta224.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta224.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta224.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta224.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta224.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta224.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta224.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta224.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta224.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta224.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta224.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta224.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta224.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta224.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta224.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta224.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta224.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta224.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta224.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta224.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta224.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta224.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta224.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta224.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta224.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta224.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta224.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta224.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta224.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta224.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta224.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta224.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta224.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta224.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta224.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta224.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta224.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta224.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta224.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta224.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta224.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta224.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta224.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta224.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta224.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta224.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta224.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta224.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta224.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta224.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta224.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta224.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta224.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta224.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta224.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta224
    where
      abb_b2x_aggregates.timestamp = delta224.daily_timestamp
      and abb_b2x_aggregates.interval = 'day'::interval_entity
      and abb_b2x_aggregates.meter_id = delta224.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta224.measurement_location_id
    returning
      abb_b2x_aggregates.*
  ),
  monthly224 as (
    update abb_b2x_aggregates
    set
      quarter_hour_count = abb_b2x_aggregates.quarter_hour_count + delta224.new_count,
      derived_active_power_l1_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l1_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l1_export_t0_max_w = greatest(
        delta224.derived_active_power_l1_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w
      ),
      derived_active_power_l1_export_t0_max_timestamp = case
        when delta224.derived_active_power_l1_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_export_t0_max_w then delta224.derived_active_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_max_timestamp
      end,
      derived_active_power_l1_export_t0_min_w = least(
        delta224.derived_active_power_l1_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w
      ),
      derived_active_power_l1_export_t0_min_timestamp = case
        when delta224.derived_active_power_l1_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_export_t0_min_w then delta224.derived_active_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_export_t0_min_timestamp
      end,
      derived_active_power_l1_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l1_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l1_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l1_import_t0_max_w = greatest(
        delta224.derived_active_power_l1_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w
      ),
      derived_active_power_l1_import_t0_max_timestamp = case
        when delta224.derived_active_power_l1_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l1_import_t0_max_w then delta224.derived_active_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_max_timestamp
      end,
      derived_active_power_l1_import_t0_min_w = least(
        delta224.derived_active_power_l1_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w
      ),
      derived_active_power_l1_import_t0_min_timestamp = case
        when delta224.derived_active_power_l1_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l1_import_t0_min_w then delta224.derived_active_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l1_import_t0_min_timestamp
      end,
      derived_active_power_l2_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l2_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l2_export_t0_max_w = greatest(
        delta224.derived_active_power_l2_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w
      ),
      derived_active_power_l2_export_t0_max_timestamp = case
        when delta224.derived_active_power_l2_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_export_t0_max_w then delta224.derived_active_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_max_timestamp
      end,
      derived_active_power_l2_export_t0_min_w = least(
        delta224.derived_active_power_l2_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w
      ),
      derived_active_power_l2_export_t0_min_timestamp = case
        when delta224.derived_active_power_l2_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_export_t0_min_w then delta224.derived_active_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_export_t0_min_timestamp
      end,
      derived_active_power_l2_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l2_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l2_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l2_import_t0_max_w = greatest(
        delta224.derived_active_power_l2_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w
      ),
      derived_active_power_l2_import_t0_max_timestamp = case
        when delta224.derived_active_power_l2_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l2_import_t0_max_w then delta224.derived_active_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_max_timestamp
      end,
      derived_active_power_l2_import_t0_min_w = least(
        delta224.derived_active_power_l2_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w
      ),
      derived_active_power_l2_import_t0_min_timestamp = case
        when delta224.derived_active_power_l2_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l2_import_t0_min_w then delta224.derived_active_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l2_import_t0_min_timestamp
      end,
      derived_active_power_l3_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l3_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l3_export_t0_max_w = greatest(
        delta224.derived_active_power_l3_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w
      ),
      derived_active_power_l3_export_t0_max_timestamp = case
        when delta224.derived_active_power_l3_export_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_export_t0_max_w then delta224.derived_active_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_max_timestamp
      end,
      derived_active_power_l3_export_t0_min_w = least(
        delta224.derived_active_power_l3_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w
      ),
      derived_active_power_l3_export_t0_min_timestamp = case
        when delta224.derived_active_power_l3_export_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_export_t0_min_w then delta224.derived_active_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_export_t0_min_timestamp
      end,
      derived_active_power_l3_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_l3_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_l3_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_l3_import_t0_max_w = greatest(
        delta224.derived_active_power_l3_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w
      ),
      derived_active_power_l3_import_t0_max_timestamp = case
        when delta224.derived_active_power_l3_import_t0_max_w > abb_b2x_aggregates.derived_active_power_l3_import_t0_max_w then delta224.derived_active_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_max_timestamp
      end,
      derived_active_power_l3_import_t0_min_w = least(
        delta224.derived_active_power_l3_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w
      ),
      derived_active_power_l3_import_t0_min_timestamp = case
        when delta224.derived_active_power_l3_import_t0_min_w < abb_b2x_aggregates.derived_active_power_l3_import_t0_min_w then delta224.derived_active_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_l3_import_t0_min_timestamp
      end,
      derived_active_power_total_export_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_export_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_export_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_export_t0_max_w = greatest(
        delta224.derived_active_power_total_export_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_max_w
      ),
      derived_active_power_total_export_t0_max_timestamp = case
        when delta224.derived_active_power_total_export_t0_max_w > abb_b2x_aggregates.derived_active_power_total_export_t0_max_w then delta224.derived_active_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_max_timestamp
      end,
      derived_active_power_total_export_t0_min_w = least(
        delta224.derived_active_power_total_export_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_export_t0_min_w
      ),
      derived_active_power_total_export_t0_min_timestamp = case
        when delta224.derived_active_power_total_export_t0_min_w < abb_b2x_aggregates.derived_active_power_total_export_t0_min_w then delta224.derived_active_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_export_t0_min_timestamp
      end,
      derived_active_power_total_import_t0_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t0_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_import_t0_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_import_t0_max_w = greatest(
        delta224.derived_active_power_total_import_t0_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_max_w
      ),
      derived_active_power_total_import_t0_max_timestamp = case
        when delta224.derived_active_power_total_import_t0_max_w > abb_b2x_aggregates.derived_active_power_total_import_t0_max_w then delta224.derived_active_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_max_timestamp
      end,
      derived_active_power_total_import_t0_min_w = least(
        delta224.derived_active_power_total_import_t0_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t0_min_w
      ),
      derived_active_power_total_import_t0_min_timestamp = case
        when delta224.derived_active_power_total_import_t0_min_w < abb_b2x_aggregates.derived_active_power_total_import_t0_min_w then delta224.derived_active_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t0_min_timestamp
      end,
      derived_active_power_total_import_t1_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t1_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_import_t1_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_import_t1_max_w = greatest(
        delta224.derived_active_power_total_import_t1_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_max_w
      ),
      derived_active_power_total_import_t1_max_timestamp = case
        when delta224.derived_active_power_total_import_t1_max_w > abb_b2x_aggregates.derived_active_power_total_import_t1_max_w then delta224.derived_active_power_total_import_t1_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_max_timestamp
      end,
      derived_active_power_total_import_t1_min_w = least(
        delta224.derived_active_power_total_import_t1_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t1_min_w
      ),
      derived_active_power_total_import_t1_min_timestamp = case
        when delta224.derived_active_power_total_import_t1_min_w < abb_b2x_aggregates.derived_active_power_total_import_t1_min_w then delta224.derived_active_power_total_import_t1_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t1_min_timestamp
      end,
      derived_active_power_total_import_t2_avg_w = (
        abb_b2x_aggregates.derived_active_power_total_import_t2_avg_w * abb_b2x_aggregates.quarter_hour_count + delta224.derived_active_power_total_import_t2_avg_w
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_active_power_total_import_t2_max_w = greatest(
        delta224.derived_active_power_total_import_t2_max_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_max_w
      ),
      derived_active_power_total_import_t2_max_timestamp = case
        when delta224.derived_active_power_total_import_t2_max_w > abb_b2x_aggregates.derived_active_power_total_import_t2_max_w then delta224.derived_active_power_total_import_t2_max_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_max_timestamp
      end,
      derived_active_power_total_import_t2_min_w = least(
        delta224.derived_active_power_total_import_t2_min_w,
        abb_b2x_aggregates.derived_active_power_total_import_t2_min_w
      ),
      derived_active_power_total_import_t2_min_timestamp = case
        when delta224.derived_active_power_total_import_t2_min_w < abb_b2x_aggregates.derived_active_power_total_import_t2_min_w then delta224.derived_active_power_total_import_t2_min_timestamp
        else abb_b2x_aggregates.derived_active_power_total_import_t2_min_timestamp
      end,
      derived_reactive_power_l1_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l1_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l1_export_t0_max_var = greatest(
        delta224.derived_reactive_power_l1_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var
      ),
      derived_reactive_power_l1_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_l1_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_var then delta224.derived_reactive_power_l1_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_max_timestamp
      end,
      derived_reactive_power_l1_export_t0_min_var = least(
        delta224.derived_reactive_power_l1_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var
      ),
      derived_reactive_power_l1_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_l1_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_var then delta224.derived_reactive_power_l1_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_export_t0_min_timestamp
      end,
      derived_reactive_power_l1_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l1_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l1_import_t0_max_var = greatest(
        delta224.derived_reactive_power_l1_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var
      ),
      derived_reactive_power_l1_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_l1_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_var then delta224.derived_reactive_power_l1_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_max_timestamp
      end,
      derived_reactive_power_l1_import_t0_min_var = least(
        delta224.derived_reactive_power_l1_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var
      ),
      derived_reactive_power_l1_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_l1_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_var then delta224.derived_reactive_power_l1_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l1_import_t0_min_timestamp
      end,
      derived_reactive_power_l2_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l2_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l2_export_t0_max_var = greatest(
        delta224.derived_reactive_power_l2_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var
      ),
      derived_reactive_power_l2_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_l2_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_var then delta224.derived_reactive_power_l2_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_max_timestamp
      end,
      derived_reactive_power_l2_export_t0_min_var = least(
        delta224.derived_reactive_power_l2_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var
      ),
      derived_reactive_power_l2_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_l2_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_var then delta224.derived_reactive_power_l2_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_export_t0_min_timestamp
      end,
      derived_reactive_power_l2_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l2_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l2_import_t0_max_var = greatest(
        delta224.derived_reactive_power_l2_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var
      ),
      derived_reactive_power_l2_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_l2_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_var then delta224.derived_reactive_power_l2_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_max_timestamp
      end,
      derived_reactive_power_l2_import_t0_min_var = least(
        delta224.derived_reactive_power_l2_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var
      ),
      derived_reactive_power_l2_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_l2_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_var then delta224.derived_reactive_power_l2_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l2_import_t0_min_timestamp
      end,
      derived_reactive_power_l3_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l3_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l3_export_t0_max_var = greatest(
        delta224.derived_reactive_power_l3_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var
      ),
      derived_reactive_power_l3_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_l3_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_var then delta224.derived_reactive_power_l3_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_max_timestamp
      end,
      derived_reactive_power_l3_export_t0_min_var = least(
        delta224.derived_reactive_power_l3_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var
      ),
      derived_reactive_power_l3_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_l3_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_var then delta224.derived_reactive_power_l3_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_export_t0_min_timestamp
      end,
      derived_reactive_power_l3_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_l3_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_l3_import_t0_max_var = greatest(
        delta224.derived_reactive_power_l3_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var
      ),
      derived_reactive_power_l3_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_l3_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_var then delta224.derived_reactive_power_l3_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_max_timestamp
      end,
      derived_reactive_power_l3_import_t0_min_var = least(
        delta224.derived_reactive_power_l3_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var
      ),
      derived_reactive_power_l3_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_l3_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_var then delta224.derived_reactive_power_l3_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_l3_import_t0_min_timestamp
      end,
      derived_reactive_power_total_export_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_total_export_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_total_export_t0_max_var = greatest(
        delta224.derived_reactive_power_total_export_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var
      ),
      derived_reactive_power_total_export_t0_max_timestamp = case
        when delta224.derived_reactive_power_total_export_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_var then delta224.derived_reactive_power_total_export_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_max_timestamp
      end,
      derived_reactive_power_total_export_t0_min_var = least(
        delta224.derived_reactive_power_total_export_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var
      ),
      derived_reactive_power_total_export_t0_min_timestamp = case
        when delta224.derived_reactive_power_total_export_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_var then delta224.derived_reactive_power_total_export_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_export_t0_min_timestamp
      end,
      derived_reactive_power_total_import_t0_avg_var = (
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_avg_var * abb_b2x_aggregates.quarter_hour_count + delta224.derived_reactive_power_total_import_t0_avg_var
      ) / (
        abb_b2x_aggregates.quarter_hour_count + delta224.new_count
      ),
      derived_reactive_power_total_import_t0_max_var = greatest(
        delta224.derived_reactive_power_total_import_t0_max_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var
      ),
      derived_reactive_power_total_import_t0_max_timestamp = case
        when delta224.derived_reactive_power_total_import_t0_max_var > abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_var then delta224.derived_reactive_power_total_import_t0_max_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_max_timestamp
      end,
      derived_reactive_power_total_import_t0_min_var = least(
        delta224.derived_reactive_power_total_import_t0_min_var,
        abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var
      ),
      derived_reactive_power_total_import_t0_min_timestamp = case
        when delta224.derived_reactive_power_total_import_t0_min_var < abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_var then delta224.derived_reactive_power_total_import_t0_min_timestamp
        else abb_b2x_aggregates.derived_reactive_power_total_import_t0_min_timestamp
      end
    from
      delta224
    where
      abb_b2x_aggregates.timestamp = delta224.monthly_timestamp
      and abb_b2x_aggregates.interval = 'month'::interval_entity
      and abb_b2x_aggregates.meter_id = delta224.meter_id
      and abb_b2x_aggregates.measurement_location_id = delta224.measurement_location_id
    returning
      abb_b2x_aggregates.*
  )
select
  *
from
  value43
union all
select
  *
from
  value133
union all
select
  *
from
  value223
union all
select
  *
from
  value42
union all
select
  *
from
  value132
union all
select
  *
from
  value222
union all
select
  *
from
  new41
union all
select
  *
from
  daily41
union all
select
  *
from
  monthly41
union all
select
  *
from
  new44
union all
select
  *
from
  daily44
union all
select
  *
from
  monthly44
union all
select
  *
from
  new131
union all
select
  *
from
  daily131
union all
select
  *
from
  monthly131
union all
select
  *
from
  new134
union all
select
  *
from
  daily134
union all
select
  *
from
  monthly134
union all
select
  *
from
  new221
union all
select
  *
from
  daily221
union all
select
  *
from
  monthly221
union all
select
  *
from
  new224
union all
select
  *
from
  daily224
union all
select
  *
from
  monthly224;

select
  timestamp,
  interval,
  meter_id,
  measurement_location_id,
  count,
  quarter_hour_count,
  derived_active_power_total_import_t0_avg_w
from
  abb_b2x_aggregates;

rollback;
